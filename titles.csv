this_publ,title
https://dblp.org/rec/conf/icfp/0002KBD16,Higher-order ghost state.
https://dblp.org/rec/conf/icfp/0008E14,Type-based parametric analysis of program families.
https://dblp.org/rec/conf/icfp/Abadi06,Access control in a core calculus of dependency.
https://dblp.org/rec/conf/icfp/Abadi16,TensorFlow: learning functions at scale.
https://dblp.org/rec/conf/icfp/AbadiLL96,Analysis and Caching of Dependencies.
https://dblp.org/rec/conf/icfp/AbelP13,Wellfounded recursion with copatterns: a unified approach to termination and productivity.
https://dblp.org/rec/conf/icfp/AcarCRS16,Dag-calculus: a calculus for parallel computation.
https://dblp.org/rec/conf/icfp/AccattoliBM14,Distilling abstract machines.
https://dblp.org/rec/conf/icfp/AdamsD08,Efficient nondestructive equality checking for trees and graphs.
https://dblp.org/rec/conf/icfp/AertsV97,A GUI on Top of a Functional Language.
https://dblp.org/rec/conf/icfp/AhmedB08,Typed closure conversion preserves observational equivalence.
https://dblp.org/rec/conf/icfp/AhmedB11,An equivalence-preserving CPS translation via multi-language semantics.
https://dblp.org/rec/conf/icfp/AhmedFM05,A step-indexed model of substructural state.
https://dblp.org/rec/conf/icfp/AhnS11,A hierarchy of mendler style recursion combinators: taming inductive datatypes with negative occurrences.
https://dblp.org/rec/conf/icfp/AlpuenteHLV99,Specialization of Inductively Sequential Functional Logic Programs.
https://dblp.org/rec/conf/icfp/AnandCK01,Charting Patterns on Price History.
https://dblp.org/rec/conf/icfp/AngiuliMLH14,Homotopical patch theory.
https://dblp.org/rec/conf/icfp/AnP98,A Structured Approach to Retrieving Functions by Types.
https://dblp.org/rec/conf/icfp/AriolaHS04,A type-theoretic foundation of continuations and prompts.
https://dblp.org/rec/conf/icfp/Armstrong97,The Development of Erlang.
https://dblp.org/rec/conf/icfp/ArnoldHKBS10,Specifying and verifying sparse matrix codes.
https://dblp.org/rec/conf/icfp/ArntzeniusK16,Datafun: a functional Datalog.
https://dblp.org/rec/conf/icfp/Ashley97,The Effectiveness of Flow Analysis for Inlining.
https://dblp.org/rec/conf/icfp/AtkeyM13,Productive coprogramming with guarded recursion.
https://dblp.org/rec/conf/icfp/Augustsson98,Cayenne - a Language with Dependent Types.
https://dblp.org/rec/conf/icfp/AugustssonMS08,Paradise: a two-stage DSL embedded in Haskell.
https://dblp.org/rec/conf/icfp/AvanziniLM15,Analysing the complexity of functional programs: higher-order meets first-order.
https://dblp.org/rec/conf/icfp/Axelsson12,A generic abstract syntax model for embedded languages.
https://dblp.org/rec/conf/icfp/AxelssonC13,Using circular programs for higher-order syntax: functional pearl.
https://dblp.org/rec/conf/icfp/BaarsS02,Typing dynamic typing.
https://dblp.org/rec/conf/icfp/BahrBE15,Certified symbolic management of financial multi-party contracts.
https://dblp.org/rec/conf/icfp/Baker-FinchKT00,An operational semantics for parallel lazy evaluation.
https://dblp.org/rec/conf/icfp/Balabonski13,"Weak optimality, and the meaning of sharing."
https://dblp.org/rec/conf/icfp/BalatVY09,"Experience report: ocsigen, a web programming framework."
https://dblp.org/rec/conf/icfp/Banerjee97,"A Modular, Polyvariant, and Type-Based Closure Analysis."
https://dblp.org/rec/conf/icfp/BarbosaCFGP10,Matching lenses: alignment and view update.
https://dblp.org/rec/conf/icfp/BaumanBHKPST15,Pycket: a tracing JIT for a functional language.
https://dblp.org/rec/conf/icfp/BeffaraD03,Disjunctive normal forms and local exceptions.
https://dblp.org/rec/conf/icfp/BellBH97,Type-Driven Defunctionalization.
https://dblp.org/rec/conf/icfp/BentonH09,"Biorthogonality, step-indexing and compiler correctness."
https://dblp.org/rec/conf/icfp/BentonK99,Interlanguage Working Without Tears: Blending SML with Java.
https://dblp.org/rec/conf/icfp/BentonKR98,Compiling Standard ML to Java Bytecodes.
https://dblp.org/rec/conf/icfp/BenzakenCF03,CDuce: an XML-centric general-purpose language.
https://dblp.org/rec/conf/icfp/BergerHY05,A logical analysis of aliasing in imperative higher-order functions.
https://dblp.org/rec/conf/icfp/BergstromFLRS14,Practical and effective higher-order optimizations.
https://dblp.org/rec/conf/icfp/BergstromR12,Nested data-parallelism on the gpu.
https://dblp.org/rec/conf/icfp/BergstromRRSF10,Lazy tree splitting.
https://dblp.org/rec/conf/icfp/BernardyC13,Efficient divide-and-conquer parsing of practical context-free languages.
https://dblp.org/rec/conf/icfp/BernardyJP10,Parametricity and dependent types.
https://dblp.org/rec/conf/icfp/BernardyM13,Type-theory in color.
https://dblp.org/rec/conf/icfp/BeshersFS07,Experience report: using functional programming to manage a linux distribution.
https://dblp.org/rec/conf/icfp/BiermanGHL10,Semantic subtyping with an SMT solver.
https://dblp.org/rec/conf/icfp/BiermanHSSW03,"Dynamic rebinding for marshalling and update, with destruct-time?"
https://dblp.org/rec/conf/icfp/Bird06,Fifteen years of functional pearls.
https://dblp.org/rec/conf/icfp/BjesseCSS98,Lava: Hardware Design in Haskell.
https://dblp.org/rec/conf/icfp/Blanchette0T15,Foundational extensible corecursion: a proof assistant perspective.
https://dblp.org/rec/conf/icfp/BlazyLP16,An abstract memory functor for verified C static analyzers.
https://dblp.org/rec/conf/icfp/Blelloch10,Functional parallel algorithms.
https://dblp.org/rec/conf/icfp/BlellochG96,A Provable Time and Space Efficient Implementation of NESL.
https://dblp.org/rec/conf/icfp/BlumeA97,Lambda-Splitting: A Higher-Order Approach to Cross-Module Optimizations.
https://dblp.org/rec/conf/icfp/BlumeAC06,Extensible programming with first-class cases.
https://dblp.org/rec/conf/icfp/BlumeM04,A sound (and complete) model of contracts.
https://dblp.org/rec/conf/icfp/Bodik15,Program synthesis: opportunities for the next decade.
https://dblp.org/rec/conf/icfp/BorgstromLGS16,A lambda-calculus foundation for universal probabilistic programming.
https://dblp.org/rec/conf/icfp/BotlanR03,MLF: raising ML to the power of system F.
https://dblp.org/rec/conf/icfp/BowmanA15,Noninterference for free.
https://dblp.org/rec/conf/icfp/Brady13,Programming and reasoning with algebraic effects and dependent types.
https://dblp.org/rec/conf/icfp/BradyH10,Scrapping your inefficient engine: using partial evaluation to improve domain-specific language implementation.
https://dblp.org/rec/conf/icfp/BrasselHFHV07,Lazy call-by-value evaluation.
https://dblp.org/rec/conf/icfp/BreitnerEJW14,Safe zero-cost coercions for Haskell.
https://dblp.org/rec/conf/icfp/BringertR06,A pattern for almost compositional functions.
https://dblp.org/rec/conf/icfp/BroadbentCHS13,C-SHORe: a collapsible approach to higher-order verification.
https://dblp.org/rec/conf/icfp/BrobergFS04,Regular expression patterns.
https://dblp.org/rec/conf/icfp/BuirasVR15,HLIO: mixing static and dynamic typing for information-flow control in Haskell.
https://dblp.org/rec/conf/icfp/BuissonD10,ReCaml: execution state as the cornerstone of reconfigurations.
https://dblp.org/rec/conf/icfp/Carlsson02,Monads for incremental computing.
https://dblp.org/rec/conf/icfp/CaspiP96,Synchronous Kahn Networks.
https://dblp.org/rec/conf/icfp/CastagnaN08,Typed iterators for XML.
https://dblp.org/rec/conf/icfp/CastagnaP016,Set-theoretic types for polymorphic variants.
https://dblp.org/rec/conf/icfp/CastagnaX11,Set-theoretic foundation of parametric polymorphism and subtyping.
https://dblp.org/rec/conf/icfp/CastroHS16,"Farms, pipes, streams and reforestation: reasoning about structured parallel processes using types and hylomorphisms."
https://dblp.org/rec/conf/icfp/ChakravartyK00,More types for nested data parallel programming.
https://dblp.org/rec/conf/icfp/ChakravartyK01,Functional Array Fusion.
https://dblp.org/rec/conf/icfp/ChakravartyKJ05,Associated type synonyms.
https://dblp.org/rec/conf/icfp/ChapmanDMM10,The gentle art of levitation.
https://dblp.org/rec/conf/icfp/Chargueraud10,Program verification through characteristic formulae.
https://dblp.org/rec/conf/icfp/Chargueraud11,Characteristic formulae for the verification of imperative programs.
https://dblp.org/rec/conf/icfp/ChargueraudP08,Functional translation of a calculus of capabilities.
https://dblp.org/rec/conf/icfp/Chaudhuri09,A concurrent ML library in concurrent Haskell.
https://dblp.org/rec/conf/icfp/CheadleFMJW00,Non-stop Haskell.
https://dblp.org/rec/conf/icfp/ChenAT14,Functional programming for dynamic and large data with self-adjusting computation.
https://dblp.org/rec/conf/icfp/ChenDHA11,Implicit self-adjusting computation for purely functional programs.
https://dblp.org/rec/conf/icfp/ChenEW12,An error-tolerant type system for variational lambda calculus.
https://dblp.org/rec/conf/icfp/Cheney05,Scrap your nameplate: (functional pearl).
https://dblp.org/rec/conf/icfp/Cheney08,FLUX: functional updates for XML.
https://dblp.org/rec/conf/icfp/CheneyLW13,A practical theory of language-integrated query.
https://dblp.org/rec/conf/icfp/ChenX03,Meta-programming through typeful code representation.
https://dblp.org/rec/conf/icfp/ChenX05,Combining programming with theorem proving.
https://dblp.org/rec/conf/icfp/ChinH97,A Bounds Inference Method for Vector-Based Memoisation.
https://dblp.org/rec/conf/icfp/Chitil01,Compositional Explanation of Types and Algorithmic Debugging of Type Errors.
https://dblp.org/rec/conf/icfp/Chitil12,Practical typed lazy contracts.
https://dblp.org/rec/conf/icfp/Chitil99,Type Inference Builds a Short Cut to Deforestation.
https://dblp.org/rec/conf/icfp/Chlipala06,Modular development of certified program verifiers with a proof assistant.
https://dblp.org/rec/conf/icfp/Chlipala08,Parametric higher-order abstract syntax for mechanized semantics.
https://dblp.org/rec/conf/icfp/Chlipala13,The bedrock structured programming system: combining generative metaprogramming and hoare logic in an extensible program verifier.
https://dblp.org/rec/conf/icfp/Chlipala15,An optimizing compiler for a purely functional web-application language.
https://dblp.org/rec/conf/icfp/ChlipalaMMSW09,Effective interactive proofs for higher-order imperative programs.
https://dblp.org/rec/conf/icfp/ChristiansenB16,Elaborator reflection: extending Idris in Idris.
https://dblp.org/rec/conf/icfp/ChristiansenDD16,All sorts of permutations (functional pearl).
https://dblp.org/rec/conf/icfp/ChristiansenH04,Searching for deadlocks while debugging concurrent haskell programs.
https://dblp.org/rec/conf/icfp/Chuang01,Generic Validation of Structural Content with Parametric Modules.
https://dblp.org/rec/conf/icfp/ChuangH96,A Probabilistic Approach to the Problem of Automatic Selection of Data Representations.
https://dblp.org/rec/conf/icfp/ChyzakD11,"Using camlp4 for presenting dynamic mathematics on the web: DynaMoW, an OCaml language extension for the run-time generation of mathematical contents and their presentation on the web."
https://dblp.org/rec/conf/icfp/CicekP016,A type theory for incremental computational complexity with control flow changes.
https://dblp.org/rec/conf/icfp/Claessen97,Graphs in Compilation.
https://dblp.org/rec/conf/icfp/ClaessenH00,QuickCheck: a lightweight tool for random testing of Haskell programs.
https://dblp.org/rec/conf/icfp/ClaessenPSHSAW09,Finding race conditions in Erlang with QuickCheck and PULSE.
https://dblp.org/rec/conf/icfp/ClaessenVM97,Structuring Graphical Paradigms in TkGofer.
https://dblp.org/rec/conf/icfp/CockxDP14,Pattern matching without K.
https://dblp.org/rec/conf/icfp/CockxDP16,Unifiers as equivalences: proof-relevant unification of dependently typed data.
https://dblp.org/rec/conf/icfp/ColazzoGMS04,Types for path correctness of XML queries.
https://dblp.org/rec/conf/icfp/ConveyFGMH08,Experience report: erlang in acoustic ray tracing.
https://dblp.org/rec/conf/icfp/CookL97,Disposable Memo Functions (Extended Abstract).
https://dblp.org/rec/conf/icfp/CooperM07,Experience report: a Haskell interpreter for cellML.
https://dblp.org/rec/conf/icfp/CouttsLS07,Stream fusion: from lists to streams to nothing at all.
https://dblp.org/rec/conf/icfp/Crary00,Typed compilation of inclusive subtyping.
https://dblp.org/rec/conf/icfp/Crary10,Higher-order representation of substructural logics.
https://dblp.org/rec/conf/icfp/Crary97,Foundations for the Implementation of Higher-Order Subtyping.
https://dblp.org/rec/conf/icfp/Crary99,A Simple Proof Technique for Certain Parametricity Results.
https://dblp.org/rec/conf/icfp/CraryV02,"An expressive, scalable type theory for certified code."
https://dblp.org/rec/conf/icfp/CraryW99,Flexible Type Analysis.
https://dblp.org/rec/conf/icfp/CraryWM98,Intensional Polymorphism in Type-Erasure Semantics.
https://dblp.org/rec/conf/icfp/CrestaniS10,Experience report: growing programming languages for beginning students.
https://dblp.org/rec/conf/icfp/CulpepperF10,Fortifying macros.
https://dblp.org/rec/conf/icfp/CuoqSBBCCMPP09,Experience report: OCaml for an industrial-strength static analysis framework.
https://dblp.org/rec/conf/icfp/CurienH00,The duality of computation.
https://dblp.org/rec/conf/icfp/DagandM12,Transporting functions across ornaments.
https://dblp.org/rec/conf/icfp/DagandTT16,Partial type equivalences for verified dependent interoperability.
https://dblp.org/rec/conf/icfp/DamianD00,Syntactic accidents in program analysis: on the impact of the CPS transformation.
https://dblp.org/rec/conf/icfp/DanielsGR12,Experience report: Haskell in computational biology.
https://dblp.org/rec/conf/icfp/Danielsson10,Total parser combinators.
https://dblp.org/rec/conf/icfp/Danielsson12,Operational semantics using the partiality monad.
https://dblp.org/rec/conf/icfp/DannerLR15,Denotational cost semantics for functional languages with inductive types.
https://dblp.org/rec/conf/icfp/DantasWWW05,PolyAML: a polymorphic aspect-oriented functional programming language.
https://dblp.org/rec/conf/icfp/Danvy08,Defunctionalized interpreters for programming languages.
https://dblp.org/rec/conf/icfp/DanvyG02,There and back again.
https://dblp.org/rec/conf/icfp/DanvyS07,On Barron and Strachey's cartesian product function.
https://dblp.org/rec/conf/icfp/DaraisH16,Constructive Galois connections: taming the Galois connection framework for mechanized metatheory.
https://dblp.org/rec/conf/icfp/DaviesP00,Intersection types and computational effects.
https://dblp.org/rec/conf/icfp/DelawareKSO13,Modular monadic meta-theory.
https://dblp.org/rec/conf/icfp/DelbiancoN13,Hoare-style reasoning with (algebraic) continuations.
https://dblp.org/rec/conf/icfp/DenielouL06,Abstraction preservation and subtyping in distributed languages.
https://dblp.org/rec/conf/icfp/DevrieseP11,On the bright side of type classes: instance arguments in Agda.
https://dblp.org/rec/conf/icfp/DevrieseP13,Typed syntactic meta-programming.
https://dblp.org/rec/conf/icfp/DiatchkiJL05,High-level views on low-level representations.
https://dblp.org/rec/conf/icfp/DimockMTW97,Strongly Typed Flow-Directed Representation Transformations.
https://dblp.org/rec/conf/icfp/DimockWMTW01,Functioning without Closure: Type-Safe Customized Function Representations for Standard ML.
https://dblp.org/rec/conf/icfp/DimoulasNFF16,"Oh Lord, please don't let contracts be misunderstood (functional pearl)."
https://dblp.org/rec/conf/icfp/DisneyFM11,Temporal higher-order contracts.
https://dblp.org/rec/conf/icfp/Dolan13,Fun with semirings: a functional pearl on the abuse of linear algebra.
https://dblp.org/rec/conf/icfp/DolstraHHHJLLMRS08,Report on the tenth ICFP programming contest.
https://dblp.org/rec/conf/icfp/DolstraL08,NixOS: a purely functional Linux distribution.
https://dblp.org/rec/conf/icfp/DonnellyF06,Transactional events.
https://dblp.org/rec/conf/icfp/Dornan97,Affordable Dynamic Types.
https://dblp.org/rec/conf/icfp/DownenA14,Compositional semantics for composable continuations: from abortive to delimited control.
https://dblp.org/rec/conf/icfp/DownenJA15,Structures for structural recursion.
https://dblp.org/rec/conf/icfp/DownenMAJ16,Sequent calculus as a compiler intermediate language.
https://dblp.org/rec/conf/icfp/DowseB06,Modelling deterministic concurrent I/O.
https://dblp.org/rec/conf/icfp/Draves97,Implementing Bit-addressing with Specialization.
https://dblp.org/rec/conf/icfp/Dreyer05,Recursive type generativity.
https://dblp.org/rec/conf/icfp/Dreyer07,A type system for recursive modules.
https://dblp.org/rec/conf/icfp/DreyerNB10,The impact of higher-order state and control effects on local relational reasoning.
https://dblp.org/rec/conf/icfp/DreyerR08,Mixin' up the ML module system.
https://dblp.org/rec/conf/icfp/DubeF02,A demand-driven adaptive type analysis.
https://dblp.org/rec/conf/icfp/Duggan01,Type-Based Hot Swapping of Running Modules.
https://dblp.org/rec/conf/icfp/DugganS96,Mixin Modules.
https://dblp.org/rec/conf/icfp/DukeBRW08,Experience report: visualizing data through functional pipelines.
https://dblp.org/rec/conf/icfp/Dunfield12,Elaborating intersection and union types.
https://dblp.org/rec/conf/icfp/Dunfield15,Elaborating evaluation-order polymorphism.
https://dblp.org/rec/conf/icfp/DunfieldK13,Complete and easy bidirectional typechecking for higher-rank polymorphism.
https://dblp.org/rec/conf/icfp/Duris97,Functional Programming and Attribute Grammars Deforestation.
https://dblp.org/rec/conf/icfp/DussartHT97,Type Specialization for Imperative Languages.
https://dblp.org/rec/conf/icfp/Dybvig06,The development of Chez Scheme.
https://dblp.org/rec/conf/icfp/EarlSMH12,Introspective pushdown analysis of higher-order programs.
https://dblp.org/rec/conf/icfp/EdalatPS98,Lazy Computation with Exact Real Numbers.
https://dblp.org/rec/conf/icfp/Effinger-DeanKG08,Transactional events for ML.
https://dblp.org/rec/conf/icfp/Eich05,JavaScript at ten years.
https://dblp.org/rec/conf/icfp/Elliott07,Tangible functional programming.
https://dblp.org/rec/conf/icfp/Elliott09,Beautiful differentiation.
https://dblp.org/rec/conf/icfp/ElliottH97,Functional Reactive Animation.
https://dblp.org/rec/conf/icfp/Elsman99,Static Interpretation of Modules.
https://dblp.org/rec/conf/icfp/EmotoMHMI16,"Think like a vertex, behave like a function! a functional DSL for vertex-centric big graph processing."
https://dblp.org/rec/conf/icfp/EndrullisHB12,On the complexity of equivalence of specifications of infinite objects.
https://dblp.org/rec/conf/icfp/Ennals98,Controlled Temporal Non-Determinism for Reasoning with a Machine of Finite Speed.
https://dblp.org/rec/conf/icfp/Ennals98a,Verbose Typing.
https://dblp.org/rec/conf/icfp/EnnalsG07,User-friendly functional programming for web mashups.
https://dblp.org/rec/conf/icfp/EnnalsJ03,Optimistic evaluation: an adaptive evaluation strategy for non-strict programs.
https://dblp.org/rec/conf/icfp/ErkokL00,Recursive monadic bindings.
https://dblp.org/rec/conf/icfp/Erlich98,Implementing Design Patterns as Language Constructs.
https://dblp.org/rec/conf/icfp/Erwig97,Functional Programming with Graphs.
https://dblp.org/rec/conf/icfp/Faggian98,A Term Calculus for Unitary Approach to Nomalization.
https://dblp.org/rec/conf/icfp/FahndrichB97,Statically Checkable Pattern Abstractions.
https://dblp.org/rec/conf/icfp/Faxen00,Cheap eagerness: speculative evaluation in a lazy functional language.
https://dblp.org/rec/conf/icfp/Felleisen10,TeachScheme!: a checkpoint.
https://dblp.org/rec/conf/icfp/FelleisenFFK09,"A functional I/O system or, fun for freshman kids."
https://dblp.org/rec/conf/icfp/FengS05,Modular verification of concurrent assembly code with dynamic thread creation and termination.
https://dblp.org/rec/conf/icfp/FerreiraHJ96,A Theory of Weak Bisimulation for Core CML.
https://dblp.org/rec/conf/icfp/FessantM01,Optimizing Pattern Matching.
https://dblp.org/rec/conf/icfp/Filinski11,Towards a comprehensive theory of monadic effects.
https://dblp.org/rec/conf/icfp/FilinskiS07,Inductive reasoning about effectful data types.
https://dblp.org/rec/conf/icfp/Findler14,Behavioral software contracts.
https://dblp.org/rec/conf/icfp/FindlerF02,Contracts for higher-order functions.
https://dblp.org/rec/conf/icfp/FindlerF04,Slideshow: functional presentations.
https://dblp.org/rec/conf/icfp/FindlerF98,Modular Object-Oriented Programming with Units and Mixins.
https://dblp.org/rec/conf/icfp/FinneLMJ98,H/Direct: A Binary Foreign Language Interface for Haskell.
https://dblp.org/rec/conf/icfp/FinneLMJ99,Calling Hell From Heaven and Heaven From Hell.
https://dblp.org/rec/conf/icfp/FischerHW10,A play on regular expressions: functional pearl.
https://dblp.org/rec/conf/icfp/FischerK08,Data-flow testing of declarative programs.
https://dblp.org/rec/conf/icfp/FischerKS09,Purely functional lazy non-deterministic programming.
https://dblp.org/rec/conf/icfp/Fisher14,Using formal methods to enable more secure vehicles: DARPA's HACMS program.
https://dblp.org/rec/conf/icfp/FisherFWZ11,Forest: a language and toolkit for programming with filestores.
https://dblp.org/rec/conf/icfp/FisherS06,Static analysis for syntax objects.
https://dblp.org/rec/conf/icfp/FlanaganN96,pHluid: The Design of a Parallel Functional Language Implementation on Workstations.
https://dblp.org/rec/conf/icfp/Flatt02,Composable and compilable macros: : you want it when?
https://dblp.org/rec/conf/icfp/FlattBF09,Scribble: closing the book on ad hoc documentation tools.
https://dblp.org/rec/conf/icfp/FlattFKF99,Programming Languages as Operating Systems (or Revenge of the Son of the Lisp Machine).
https://dblp.org/rec/conf/icfp/FlattYFF07,Adding delimited and composable control to a production programming environment.
https://dblp.org/rec/conf/icfp/FluetM04,Monadic regions.
https://dblp.org/rec/conf/icfp/FluetRR08,A scheduling framework for general-purpose parallel languages.
https://dblp.org/rec/conf/icfp/FluetRRS08,Implicitly-threaded parallelism in Manticore.
https://dblp.org/rec/conf/icfp/FluetW01,Contification Using Dominators.
https://dblp.org/rec/conf/icfp/FoltzerKSSJN12,A meta-scheduler for the par-monad: composable scheduling for the heterogeneous cloud.
https://dblp.org/rec/conf/icfp/Ford02,"Packrat parsing: : simple, powerful, lazy, linear time, functional pearl."
https://dblp.org/rec/conf/icfp/ForsbergR04,Functional morphology.
https://dblp.org/rec/conf/icfp/FosterHFMRSW11,Frenetic: a network programming language.
https://dblp.org/rec/conf/icfp/FosterPP08,Quotient lenses.
https://dblp.org/rec/conf/icfp/FredlundS07,McErlang: a model checker for a distributed functional programming language.
https://dblp.org/rec/conf/icfp/FredrikssonG14,Krivine nets: a semantic foundation for distributed execution.
https://dblp.org/rec/conf/icfp/Frenzel07,Experience report: building an eclipse-based IDE for Haskell.
https://dblp.org/rec/conf/icfp/Frisch06,OCaml + XDuce.
https://dblp.org/rec/conf/icfp/GaboardiKOBU16,Combining effects and coeffects via grading.
https://dblp.org/rec/conf/icfp/GaboardiP15,Algebras and coalgebras in the light affine Lambda calculus.
https://dblp.org/rec/conf/icfp/GaboardiPP11,Linearity and PCF: a semantic insight!
https://dblp.org/rec/conf/icfp/GanzFW99,Trampolined Style.
https://dblp.org/rec/conf/icfp/GanzST01,"Macros as Multi-Stage Computations: Type-Safe, Generative, Binding Macros in MacroML."
https://dblp.org/rec/conf/icfp/GapeyevLP00,Recursive subtyping revealed: functional pearl.
https://dblp.org/rec/conf/icfp/Garcia13,"Calculating threesomes, with blame."
https://dblp.org/rec/conf/icfp/GasbichlerS02,Final shift for call/cc: : direct implementation of shift and reset.
https://dblp.org/rec/conf/icfp/GasserNN97,Systematic Realisation of Control Flow Analyses for CML.
https://dblp.org/rec/conf/icfp/GauthierP04,Numbering matters: first-order canonical forms for second-order recursive types.
https://dblp.org/rec/conf/icfp/GazagnaireH09,OXenstored: an efficient hierarchical and transactional database using functional programming with reference cell comparisons.
https://dblp.org/rec/conf/icfp/GenevesG15,XQuery and static typing: tackling the problem of backward axes.
https://dblp.org/rec/conf/icfp/GenevesLQ09,Identifying query incompatibilities with evolving XML schemas.
https://dblp.org/rec/conf/icfp/GesbertGL11,Parametric polymorphism and semantic subtyping: the logical connection.
https://dblp.org/rec/conf/icfp/GhaniJUV05,Monadic augment and generalised short cut fusion.
https://dblp.org/rec/conf/icfp/Ghelli96,Complexity of Kernel Fun Subtype Checking.
https://dblp.org/rec/conf/icfp/GhicaSS11,Geometry of synthesis iv: compiling affine recursion into static hardware.
https://dblp.org/rec/conf/icfp/GhuloumD07,Implicit phasing for R6RS libraries.
https://dblp.org/rec/conf/icfp/GibbonsH11,Just do it: simple monadic equational reasoning.
https://dblp.org/rec/conf/icfp/GibbonsJ98,The Under-Appreciated Unfold.
https://dblp.org/rec/conf/icfp/GibbonsW14,Folding domain-specific languages: deep and shallow embeddings (functional Pearl).
https://dblp.org/rec/conf/icfp/GillF11,Deriving an efficient FPGA implementation of a low density parity check forward error corrector.
https://dblp.org/rec/conf/icfp/Gilray0M16,Allocation characterizes polyvariance: a unified methodology for polyvariant control-flow analysis.
https://dblp.org/rec/conf/icfp/Glew99,Type Dispatch for Named Hierarchical Types.
https://dblp.org/rec/conf/icfp/GlynnSSS02,Exception analysis for non-strict languages.
https://dblp.org/rec/conf/icfp/GonthierZND11,How to make ad hoc proof automation less ad hoc.
https://dblp.org/rec/conf/icfp/Gordon10,ML: metalanguage or object language?
https://dblp.org/rec/conf/icfp/GostanzaPN96,A New Look to Pattern Matching in Abstract Data Types.
https://dblp.org/rec/conf/icfp/GotsmanY11,Modular verification of preemptive OS kernels.
https://dblp.org/rec/conf/icfp/GrabmayerR14,Maximal sharing in the Lambda calculus with letrec.
https://dblp.org/rec/conf/icfp/Graham04,Don't make the wrong mistakes: programming as debugging.
https://dblp.org/rec/conf/icfp/GregoireL02,A compiled implementation of strong reduction.
https://dblp.org/rec/conf/icfp/Grobauer01,Cost Recurrences for DML Programs.
https://dblp.org/rec/conf/icfp/GuillemetteM08,A type-preserving compiler in Haskell.
https://dblp.org/rec/conf/icfp/Gustavsson98,A Type Based Sharing Analysis for Update Avoidance and Optimisation.
https://dblp.org/rec/conf/icfp/GustavssonS01,Possibilities and Limitations of Call-by-Need Space Improvement.
https://dblp.org/rec/conf/icfp/HackettH14,Worker/wrapper/makes it/faster.
https://dblp.org/rec/conf/icfp/HageHM07,A generic usage analysis with subeffect qualifiers.
https://dblp.org/rec/conf/icfp/Haiming98,Combining CFG and Recursive Functions to Get a New Language.
https://dblp.org/rec/conf/icfp/HallgrenJLT05,A principled approach to operating system construction in Haskell.
https://dblp.org/rec/conf/icfp/Hanna02,Interactive visual functional programming.
https://dblp.org/rec/conf/icfp/HannanH98,Higher-Order Arity Raising.
https://dblp.org/rec/conf/icfp/HansenC02,An experimental study of renewal-older-first garbage collection.
https://dblp.org/rec/conf/icfp/HardinMP96,Functional Back-Ends within the Lambda-Sigma Calculus.
https://dblp.org/rec/conf/icfp/Harper05,Mechanizing the meta-theory of programming languages.
https://dblp.org/rec/conf/icfp/HarperP00,Advanced module systems: a guide for the perplexed (abstract of invited talk).
https://dblp.org/rec/conf/icfp/HarrisS07,Feedback directed implicit parallelism.
https://dblp.org/rec/conf/icfp/HeerenHS03,Scripting the type inference process.
https://dblp.org/rec/conf/icfp/HeintzeM97,On the Complexity of Set-Based Analysis.
https://dblp.org/rec/conf/icfp/Henglein08,Generic discrimination: sorting and paritioning unshared data in linear time.
https://dblp.org/rec/conf/icfp/HenryMCM12,Typing unmarshalling without marshalling types.
https://dblp.org/rec/conf/icfp/Herman07,"Functional pearl: the great escape or, how to jump the border without getting caught."
https://dblp.org/rec/conf/icfp/HermanM04,Improving the static analysis of embedded languages via partial evaluation.
https://dblp.org/rec/conf/icfp/HickeyNYK06,Mechanized meta-reasoning using a hybrid HOAS/de bruijn representation and reflection.
https://dblp.org/rec/conf/icfp/HickeyPEBL14,Building embedded systems with embedded DSLs.
https://dblp.org/rec/conf/icfp/HicksKMGN98,PLAN: A Packet Language for Active Networks.
https://dblp.org/rec/conf/icfp/HicksMN97,The Measured Cost of Copying Garbage Collection Mechanisms.
https://dblp.org/rec/conf/icfp/HidakaAHKN13,Structural recursion for querying ordered graphs.
https://dblp.org/rec/conf/icfp/HidakaHIKMN10,Bidirectionalizing graph transformations.
https://dblp.org/rec/conf/icfp/HiguchiO03,A static type system for JVM access control.
https://dblp.org/rec/conf/icfp/Hinze00,Deriving backtracking monad transformers.
https://dblp.org/rec/conf/icfp/Hinze01,A Simple Implementation Technique for Priority Search Queues.
https://dblp.org/rec/conf/icfp/Hinze02,Bootstrapping one-sided flexible arrays.
https://dblp.org/rec/conf/icfp/Hinze04,Generics for the masses.
https://dblp.org/rec/conf/icfp/Hinze08,Functional pearl: streams and unique fixed points.
https://dblp.org/rec/conf/icfp/Hinze09,Functional pearl: la tour d'Hanoï.
https://dblp.org/rec/conf/icfp/HinzeJ11,Proving the unique fixed-point principle correct: an adventure with category theory.
https://dblp.org/rec/conf/icfp/HinzeWG13,Unifying structured recursion schemes.
https://dblp.org/rec/conf/icfp/HoldermansH10,Polyvariant flow analysis with higher-ranked polymorphic types and higher-order effect operators.
https://dblp.org/rec/conf/icfp/Honda04,From process logic to program logic.
https://dblp.org/rec/conf/icfp/HornM07,Relating complexity and precision in control flow analysis.
https://dblp.org/rec/conf/icfp/HornM08,Deciding kCFA is complete for EXPTIME.
https://dblp.org/rec/conf/icfp/HornM10,Abstracting abstract machines.
https://dblp.org/rec/conf/icfp/HosoyaVP00,Regular expression types for XML.
https://dblp.org/rec/conf/icfp/Howard96,"Inductive, Coinductive, and Pointed Types."
https://dblp.org/rec/conf/icfp/HritcuHPSVAL13,"Testing noninterference, quickly."
https://dblp.org/rec/conf/icfp/Huch99,Verification of Erlang Programs using Abstract Interpretation and Model Mhecking.
https://dblp.org/rec/conf/icfp/Huffman12,Formal verification of monad transformers.
https://dblp.org/rec/conf/icfp/HughesP99,Recursion and Dynamic Data-structures in Bounded Space: Towards Embedded ML Programming.
https://dblp.org/rec/conf/icfp/HughesS03,"Polish parsers, step by step."
https://dblp.org/rec/conf/icfp/HuIT96,Deriving Structural Hylomorphisms From Recursive Definitions.
https://dblp.org/rec/conf/icfp/HuITT97,Tupling Calculation Eliminates Multiple Data Traversals.
https://dblp.org/rec/conf/icfp/Hutton98,Fold and Unfold for Program Semantics.
https://dblp.org/rec/conf/icfp/IsmailS16,Deriving a probability density calculator (functional pearl).
https://dblp.org/rec/conf/icfp/JaskelioffR15,Functional pearl: a smart view on datatypes.
https://dblp.org/rec/conf/icfp/JayP11,Typed self-interpretation by pattern matching.
https://dblp.org/rec/conf/icfp/Jeffrey13,Functional reactive programming with liveness guarantees.
https://dblp.org/rec/conf/icfp/JiaVMZZSZ08,AURA: a programming language for authorization and audit.
https://dblp.org/rec/conf/icfp/JohnsonLMH13,Optimizing abstract abstract machines.
https://dblp.org/rec/conf/icfp/Jones07,Call-pattern specialisation for haskell programs.
https://dblp.org/rec/conf/icfp/Jones08,Experience report: playing the DSL card.
https://dblp.org/rec/conf/icfp/Jones08a,Polymorphism and page tables: systems programming from a functional programmer's perspective.
https://dblp.org/rec/conf/icfp/Jones13,Computer science as a school subject.
https://dblp.org/rec/conf/icfp/JonesBB03,A user-centred approach to functions in Excel.
https://dblp.org/rec/conf/icfp/JonesES00,"Composing contracts: an adventure in financial engineering, functional pearl."
https://dblp.org/rec/conf/icfp/JonesFA12,Deconstraining DSLs.
https://dblp.org/rec/conf/icfp/JonesG02,"Program generation, termination, and binding-time analysis."
https://dblp.org/rec/conf/icfp/JonesPS96,Let-floating: Moving Bindings to Give Faster Programs.
https://dblp.org/rec/conf/icfp/JonesVWW06,Simple unification-based type inference for GADTs.
https://dblp.org/rec/conf/icfp/Kagawa97,Compositional References for Stateful Functional Programming.
https://dblp.org/rec/conf/icfp/KakiJ14,A relational framework for higher-order shape analysis.
https://dblp.org/rec/conf/icfp/KameyamaH03,A sound and complete axiomatization of delimited continuations.
https://dblp.org/rec/conf/icfp/KammarLO13,Handlers in action.
https://dblp.org/rec/conf/icfp/KarachaliasSVJ15,"GADTs meet their match: pattern-matching warnings that account for GADTs, guards, and laziness."
https://dblp.org/rec/conf/icfp/Karczmarczuk98,Functional Differentiation of Computer Programs.
https://dblp.org/rec/conf/icfp/KatsumataN06,Algebraic fusion of functions with an accumulating parameter and its improvement.
https://dblp.org/rec/conf/icfp/KawanakaH06,biXid: a bidirectional transformation language for XML.
https://dblp.org/rec/conf/icfp/KeepD13,A nanopass framework for commercial compiler development.
https://dblp.org/rec/conf/icfp/KeilT15,Blame assignment for higher-order contracts with intersection and union.
https://dblp.org/rec/conf/icfp/KellerCLJL10,"Regular, shape-polymorphic, parallel arrays in Haskell."
https://dblp.org/rec/conf/icfp/Kennedy07,"Compiling with continuations, continued."
https://dblp.org/rec/conf/icfp/KfouryMTW99,Relating Typability and Expressiveness in Finite-Rank Intersection Type Systems (Extended Abstract).
https://dblp.org/rec/conf/icfp/Kieburtz98,Taming Effects with Monadic Typing.
https://dblp.org/rec/conf/icfp/Kiselyov98,"LAND*: an AND with local bindings, a guarded LET* special form."
https://dblp.org/rec/conf/icfp/Kiselyov98a,"Functional Style in C++: Closures, Late Binding, and Lambda Abstractions."
https://dblp.org/rec/conf/icfp/Kiselyov98b,A Delegation Language to Request Weather Products and a Scheme of Its Interpretation.
https://dblp.org/rec/conf/icfp/Kiselyov98c,A Lazy CGI Namespace in Scheme.
https://dblp.org/rec/conf/icfp/KiselyovSFS05,"Backtracking, interleaving, and terminating monad transformers: (functional pearl)."
https://dblp.org/rec/conf/icfp/KiselyovSS06,Delimited dynamic binding.
https://dblp.org/rec/conf/icfp/KleinDE09,Experience report: seL4: formally verifying a high-performance microkernel.
https://dblp.org/rec/conf/icfp/Knight03,"Conservation of information: applications in functional, reversible, and quantum computing."
https://dblp.org/rec/conf/icfp/KrasnogorLMP97,Protien Folding meets Functional Programming.
https://dblp.org/rec/conf/icfp/KrasnogorLMP97a,Modelling String Folding with G2L Grammars.
https://dblp.org/rec/conf/icfp/Krauss08,Pattern minimization problems over recursive data types.
https://dblp.org/rec/conf/icfp/Krishnaswami13,Higher-order functional reactive programming without spacetime leaks.
https://dblp.org/rec/conf/icfp/KrishnaswamiB11,A semantic model for graphical user interfaces.
https://dblp.org/rec/conf/icfp/KrishnaswamiTDG12,Superficially substructural types.
https://dblp.org/rec/conf/icfp/KutznerS98,A Non-Deterministic Call-by-Need Lambda Calculus.
https://dblp.org/rec/conf/icfp/LammelJ04,"Scrap more boilerplate: reflection, zips, and generalised casts."
https://dblp.org/rec/conf/icfp/LammelJ05,Scrap your boilerplate with class: extensible generic functions.
https://dblp.org/rec/conf/icfp/Lampson08,Lazy and speculative execution in computer systems.
https://dblp.org/rec/conf/icfp/Lassila97,A Functional Macro Expansion System for Optimizing Code Generation: Gaining Context-Sensitivity without Losing Confluence.
https://dblp.org/rec/conf/icfp/Launchbury04,Galois: high assurance software.
https://dblp.org/rec/conf/icfp/LaunchburyDDA12,Efficient lookup-table protocol in secure multiparty computation.
https://dblp.org/rec/conf/icfp/LaunchburyLC99,On Embedding a Microarchitectural Design Language within Haskell.
https://dblp.org/rec/conf/icfp/LaunchburyS97,Monadic State: Axiomatization and Type Safety.
https://dblp.org/rec/conf/icfp/LawallM96,Optimality and Inefficiency: What Isn't a Cost Model of the Lambda Calculus?
https://dblp.org/rec/conf/icfp/LawallM97,on Global Dynamics of Optimal Graph Reduction.
https://dblp.org/rec/conf/icfp/LeagueST99,Representing Java Classes in a Typed Intermediate Language.
https://dblp.org/rec/conf/icfp/LeeF96,Enriching the Lambda Calculus with Contexts: Toward a Theory of Incremental Program Construction.
https://dblp.org/rec/conf/icfp/LeF15,Partial aborts for transactions via first-class continuations.
https://dblp.org/rec/conf/icfp/LeiferPSW03,Global abstraction-safe marshalling with hash types.
https://dblp.org/rec/conf/icfp/Leijen07,A type directed translation of MLF to system F.
https://dblp.org/rec/conf/icfp/Leijen08,HMF: simple type inference for first-class polymorphism.
https://dblp.org/rec/conf/icfp/LeijenL05,Qualified types for MLF.
https://dblp.org/rec/conf/icfp/Levin03,Compiling regular patterns.
https://dblp.org/rec/conf/icfp/Ley-WildFA08,Compiling self-adjusting programs with continuations.
https://dblp.org/rec/conf/icfp/Licata16,A functional programmer's guide to homotopy type theory.
https://dblp.org/rec/conf/icfp/LicataH09,A universe of binding and computation.
https://dblp.org/rec/conf/icfp/Lin06,Programming monads operationally with Unimo.
https://dblp.org/rec/conf/icfp/LindleyM16,Talking bananas: structural recursion for session types.
https://dblp.org/rec/conf/icfp/Ling98,Frob - Functional Robotics.
https://dblp.org/rec/conf/icfp/LippmeierCKLJ12,Work efficient higher-order vectorisation.
https://dblp.org/rec/conf/icfp/LiuCH09,Causal commutative arrows and their optimization.
https://dblp.org/rec/conf/icfp/Lloyd07,Declarative programming for artificial intelligence applications.
https://dblp.org/rec/conf/icfp/LohCJ03,Dependency-style generic Haskell.
https://dblp.org/rec/conf/icfp/Longley99,When is a Functional Program Not a Functional Program?
https://dblp.org/rec/conf/icfp/LorenzenE13,Modular and automated type-soundness verification for language extensions.
https://dblp.org/rec/conf/icfp/LuthG02,Composing monads using coproducts.
https://dblp.org/rec/conf/icfp/Mackie98,YALE: Yet Another Lambda Evaluator Based on Interaction Nets.
https://dblp.org/rec/conf/icfp/MagalhaesH11,Functional modelling of musical harmony: an experience report.
https://dblp.org/rec/conf/icfp/Mainland12,Explicitly heterogeneous metaprogramming with MetaHaskell.
https://dblp.org/rec/conf/icfp/MainlandLJ13,Exploiting vector instructions with generalized stream fusio.
https://dblp.org/rec/conf/icfp/MainlandMW08,Flask: staged functional programming for sensor networks.
https://dblp.org/rec/conf/icfp/Mairson03,From Hilbert space to Dilbert space: context semantics as a language for games and flow analysis.
https://dblp.org/rec/conf/icfp/Mairson13,Functional geometry and the Traité de Lutherie: functional pearl.
https://dblp.org/rec/conf/icfp/MakholmW05,"Type inference, principal typings, and let-polymorphism for first-class mixin modules."
https://dblp.org/rec/conf/icfp/MandelbaumWH03,An effective theory of type refinements.
https://dblp.org/rec/conf/icfp/MarcosLR98,A Functional Programming Approach to Hypermedia Authoring.
https://dblp.org/rec/conf/icfp/MarlowBCP14,"There is no fork: an abstraction for efficient, concurrent, and concise data access."
https://dblp.org/rec/conf/icfp/MarlowJ04,Making a fast curry: push/enter vs. eval/apply for higher-order languages.
https://dblp.org/rec/conf/icfp/MarlowJS09,Runtime support for multicore Haskell.
https://dblp.org/rec/conf/icfp/MarlowW97,A Practical Subtyping System For Erlang.
https://dblp.org/rec/conf/icfp/MarlowYJ07,Faster laziness using dynamic pointer tagging.
https://dblp.org/rec/conf/icfp/MasuharaTY05,Aspectual Caml: an aspect-oriented functional language.
https://dblp.org/rec/conf/icfp/MaterzokB11,Subtyping delimited continuations.
https://dblp.org/rec/conf/icfp/MatsudaHNHT07,Bidirectionalization transformation based on automatic derivation of view complement functions.
https://dblp.org/rec/conf/icfp/MatsudaW15,Applicative bidirectional programming with lenses.
https://dblp.org/rec/conf/icfp/MazurakZ10,Lolliproc: to concurrency from classical linear logic via curry-howard and control.
https://dblp.org/rec/conf/icfp/McAdam97,BigTypes in ML.
https://dblp.org/rec/conf/icfp/McAdam98,Type Errors Confuse the Programmer (Poster Abstract).
https://dblp.org/rec/conf/icfp/McBride12,Agda-curious?: an exploration of programming with dependent types.
https://dblp.org/rec/conf/icfp/McBride14,How to keep your neighbours in order.
https://dblp.org/rec/conf/icfp/McCarthy09,Automatically RESTful web applications: marking modular serializable continuations.
https://dblp.org/rec/conf/icfp/McCreightCT10,A certified framework for compiling and executing garbage-collected languages.
https://dblp.org/rec/conf/icfp/McDonellCKL13,Optimising purely functional GPU programs.
https://dblp.org/rec/conf/icfp/McDonellZCN16,Ghostbuster: a tool for simplifying and converting GADTs.
https://dblp.org/rec/conf/icfp/McNamaraS00,Functional programming in C++.
https://dblp.org/rec/conf/icfp/MidtgaardJ09,Control-flow analysis of function calls and returns by abstract interpretation.
https://dblp.org/rec/conf/icfp/MightDS11,Parsing with derivatives: a functional pearl.
https://dblp.org/rec/conf/icfp/MightS06,Improving flow analyses via GammaCFA: abstract garbage collection and counting.
https://dblp.org/rec/conf/icfp/MillsteinBC02,Modular typechecking for hierarchically extensible datatypes and functions.
https://dblp.org/rec/conf/icfp/MinamideG98,On the Runtime Complexity of Type-Directed Unboxing.
https://dblp.org/rec/conf/icfp/Mitchell10,Rethinking supercompilation.
https://dblp.org/rec/conf/icfp/Mitchell11,Functional programming through deep time: modeling the first complex ecosystems on earth.
https://dblp.org/rec/conf/icfp/Mitchell12,Shake before building: replacing make with haskell.
https://dblp.org/rec/conf/icfp/Moore02,Functional formal methods.
https://dblp.org/rec/conf/icfp/Moreau96,The Semantics of Scheme with Future.
https://dblp.org/rec/conf/icfp/Moreau98,A Distributed Garbage Collector with Diffusion Tree Reorganisation and Mobile Objects.
https://dblp.org/rec/conf/icfp/MorgensternL10,Security-typed programming within dependently typed programming.
https://dblp.org/rec/conf/icfp/Morihata13,A short cut to parallelization theorems.
https://dblp.org/rec/conf/icfp/MorihataM11,Balanced trees inhabiting functional parallel programming.
https://dblp.org/rec/conf/icfp/MorihataMT08,Write it recursively: a generic framework for optimal path queries.
https://dblp.org/rec/conf/icfp/Morris16,The best of both worlds: linear functional programming without compromise.
https://dblp.org/rec/conf/icfp/MorrisJ10,Instance chains: type class programming without overlapping instances.
https://dblp.org/rec/conf/icfp/Mountjoy98,"The Spineless Tagless G-machine, naturally."
https://dblp.org/rec/conf/icfp/MuCL16,Queueing and glueing for optimal partitioning (functional pearl).
https://dblp.org/rec/conf/icfp/MulliganOGRS14,Lem: reusable engineering of real-world semantics.
https://dblp.org/rec/conf/icfp/MuM11,Generalising and dualising the third list-homomorphism theorem: functional pearl.
https://dblp.org/rec/conf/icfp/Myers02,Towards more natural functional programming languages.
https://dblp.org/rec/conf/icfp/MyreenO12,Proof-producing synthesis of ML from higher-order logic.
https://dblp.org/rec/conf/icfp/NakataG06,Recursive modules for programming.
https://dblp.org/rec/conf/icfp/Nanavati08,Experience report: a pure shirt fits.
https://dblp.org/rec/conf/icfp/Nanevski02,Meta-programming with names and necessity.
https://dblp.org/rec/conf/icfp/NanevskiBH01,Automatic Generation of Staged Geometric Predicates.
https://dblp.org/rec/conf/icfp/NanevskiMB06,Polymorphism and separation in hoare type theory.
https://dblp.org/rec/conf/icfp/NanevskiMSGB08,Ynot: dependent types for imperative programs.
https://dblp.org/rec/conf/icfp/NaylorR10,The reduceron reconfigured.
https://dblp.org/rec/conf/icfp/NeatherwayRO12,A traversal-based algorithm for higher-order model checking.
https://dblp.org/rec/conf/icfp/NeergaardM04,"Types, potency, and idempotency: why nonlinearity and amnesia make a type system work."
https://dblp.org/rec/conf/icfp/NeisDR09,Non-parametric parametricity.
https://dblp.org/rec/conf/icfp/NeisHKMDV15,Pilsner: a compositionally verified compiler for a higher-order imperative language.
https://dblp.org/rec/conf/icfp/NeubauerS01,Down with Emacs Lisp: Dynamic Scope Analysis.
https://dblp.org/rec/conf/icfp/NeubauerT02,Type classes with more higher-order polymorphism.
https://dblp.org/rec/conf/icfp/NeubauerT03,Discriminative sum types locate the source of type errors.
https://dblp.org/rec/conf/icfp/NewBA16,Fully abstract compilation via universal embedding.
https://dblp.org/rec/conf/icfp/NewtonFV15,Adaptive lock-free maps: purely-functional to scalable.
https://dblp.org/rec/conf/icfp/NewtonK09,"Experience report: embedded, parallel computer-vision with a functional DSL."
https://dblp.org/rec/conf/icfp/NguyenTH14,Soft contract verification.
https://dblp.org/rec/conf/icfp/Nilsson03,Functional automatic differentiation with dirac impulses.
https://dblp.org/rec/conf/icfp/Nilsson05,Dynamic optimization for functional reactive programming using generalized algebraic data types.
https://dblp.org/rec/conf/icfp/Nilsson99,Tracing Piece by Piece: Affordable Debugging for Lazy Functional Languages.
https://dblp.org/rec/conf/icfp/Nordlander98,Pragmatic Subtyping in Polymorphic Languages.
https://dblp.org/rec/conf/icfp/Norell13,Interactive programming with dependent types.
https://dblp.org/rec/conf/icfp/NystromTK07,Evaluating high-level distributed language constructs.
https://dblp.org/rec/conf/icfp/OConnorCRALMNSK16,Refinement through restraint: bringing down the cost of verification.
https://dblp.org/rec/conf/icfp/Odersky98,Programming with Variable Functions.
https://dblp.org/rec/conf/icfp/OgawaHS03,Iterative-free program analysis.
https://dblp.org/rec/conf/icfp/OhoriU11,Making standard ML a practical database programming language.
https://dblp.org/rec/conf/icfp/OhoriUHNSMI14,SML# in industry: a practical ERP system development.
https://dblp.org/rec/conf/icfp/OhoriY02,An interoperable calculus for external object access.
https://dblp.org/rec/conf/icfp/OhoriY99,Type Inference with Rank 1 Polymorphism for Type-Directed Compilation of ML.
https://dblp.org/rec/conf/icfp/Okasaki00,Breadth-first numbering: lessons from a small exercise in algorithm design.
https://dblp.org/rec/conf/icfp/Okasaki96,The Role of Lazy Evaluation in Amortized Data Structures.
https://dblp.org/rec/conf/icfp/Okasaki97,Catenable Double-Ended Queues.
https://dblp.org/rec/conf/icfp/Okasaki99,From Fast Exponentiation to Square Matrices: An Adventure in Types.
https://dblp.org/rec/conf/icfp/OliveiraC12,Functional programming with structured graphs.
https://dblp.org/rec/conf/icfp/OliveiraSA16,Disjoint intersection types.
https://dblp.org/rec/conf/icfp/Olukotun12,High performance embedded domain specific languages.
https://dblp.org/rec/conf/icfp/Ostvold97,Inductive Synthesis of Recursive Functional Programs (Poster Abstract).
https://dblp.org/rec/conf/icfp/OuryS08,The power of Pi.
https://dblp.org/rec/conf/icfp/OwensF06,From structures and functors to modules and units.
https://dblp.org/rec/conf/icfp/PaganoAMCCWMC09,Experience report: using objective caml to develop safety-critical embedded tools in a certification framework.
https://dblp.org/rec/conf/icfp/Page03,Software is discrete mathematics.
https://dblp.org/rec/conf/icfp/Pareja-FloresV97,Synthesis of Functions by Transformations and Constraints.
https://dblp.org/rec/conf/icfp/Park07,Type-safe higher-order channels in ML-like languages.
https://dblp.org/rec/conf/icfp/ParkKI08,Functional netlists.
https://dblp.org/rec/conf/icfp/PasalicTS02,Tagless staged interpreters for typed languages.
https://dblp.org/rec/conf/icfp/Paterson01,A New Notation for Arrows.
https://dblp.org/rec/conf/icfp/Pavlinovic0W15,Practical SMT-based type error localization.
https://dblp.org/rec/conf/icfp/PereraACL12,Functional programs that explain their work.
https://dblp.org/rec/conf/icfp/PetersenGDAD13,Experience report: functional programming of mHealth applications.
https://dblp.org/rec/conf/icfp/PetersenOG13,Automatic SIMD vectorization for Haskell.
https://dblp.org/rec/conf/icfp/PetricekOM14,Coeffects: a calculus of context-dependent computation.
https://dblp.org/rec/conf/icfp/PettyjohnCMKF05,Continuations from generalized stack inspection.
https://dblp.org/rec/conf/icfp/Pfenning07,Subtyping and intersection types revisited.
https://dblp.org/rec/conf/icfp/Pierce09,"Lambda, the ultimate TA: using a proof assistant to teach programming language foundations."
https://dblp.org/rec/conf/icfp/PikeWNG12,Experience report: a do-it-yourself high-assurance compiler.
https://dblp.org/rec/conf/icfp/Piponi09,"Commutative monads, diagrams and knots."
https://dblp.org/rec/conf/icfp/PirogW16,String diagrams for free monads (functional pearl).
https://dblp.org/rec/conf/icfp/Pitts01,A Fresh Approach to Representing Syntax with Static Binders in Functional Programming.
https://dblp.org/rec/conf/icfp/PlasmeijerAK07,iTasks: executable specifications of interactive work flow systems for the web.
https://dblp.org/rec/conf/icfp/PloegC15,"Practical principled FRP: forget the past, change the future, FRPNow!"
https://dblp.org/rec/conf/icfp/PombrioK15,Hygienic resugaring of compositional desugaring.
https://dblp.org/rec/conf/icfp/Pop10,Experience report: Haskell as a reagent: results and observations on the use of Haskell in a python project.
https://dblp.org/rec/conf/icfp/PopescuG11,Recursion principles for syntax with bindings and substitution.
https://dblp.org/rec/conf/icfp/Pottier05,From ML type inference to stratified type inference.
https://dblp.org/rec/conf/icfp/Pottier14,Hindley-milner elaboration in applicative style: functional pearl.
https://dblp.org/rec/conf/icfp/Pottier96,Simplifying Subtyping Constraints.
https://dblp.org/rec/conf/icfp/Pottier98,A Framework for Type Inference with Subtyping.
https://dblp.org/rec/conf/icfp/PottierC00,Information flow inference for free.
https://dblp.org/rec/conf/icfp/PottierP13,Programming with permissions in Mezzo.
https://dblp.org/rec/conf/icfp/Pouillard11,"Nameless, painless."
https://dblp.org/rec/conf/icfp/PouillardP10,A fresh look at programming with names and binders.
https://dblp.org/rec/conf/icfp/Putnik98,On Application of Self-Similar Pictures in Education.
https://dblp.org/rec/conf/icfp/Queinnec00,"The influence of browsers on evaluators or, continuations to program web servers."
https://dblp.org/rec/conf/icfp/QueinnecR96,Sharing Code through First-class Environments.
https://dblp.org/rec/conf/icfp/RaghunathanMAB16,Hierarchical memory management for parallel programs.
https://dblp.org/rec/conf/icfp/RamosSV05,Fast narrowing-driven partial evaluation for inductively sequential programs.
https://dblp.org/rec/conf/icfp/Ramsey14,On teaching *how to design programs*: observations from a newcomer.
https://dblp.org/rec/conf/icfp/RamseyFG05,An expressive language of signatures.
https://dblp.org/rec/conf/icfp/RamseyJ04,The C - compiler infrastructure.
https://dblp.org/rec/conf/icfp/ReedP10,Distance makes the types grow stronger: a calculus for differential privacy.
https://dblp.org/rec/conf/icfp/Remy05,"Simple, partial type-inference for System F based on type-containment."
https://dblp.org/rec/conf/icfp/RemyY08,From ML to MLF: graphic type constraints with efficient type inference.
https://dblp.org/rec/conf/icfp/RendelTO15,Automatic refunctionalization to a language with copattern matching: with applications to the expression problem.
https://dblp.org/rec/conf/icfp/ReppyRX09,Parallel concurrent ML.
https://dblp.org/rec/conf/icfp/RichardST97,Intensional Sets Using Explicit Substitutions.
https://dblp.org/rec/conf/icfp/RingenburgG05,AtomCaml: first-class atomicity via rollback.
https://dblp.org/rec/conf/icfp/RojemoR96,"Lag, Drag, Void and Use - Heap Profiling and Space-Efficient Compilation Revisited."
https://dblp.org/rec/conf/icfp/RompfA15,Functional pearl: a SQL to C compiler in 500 lines of code.
https://dblp.org/rec/conf/icfp/RompfMO09,Implementing first-class polymorphic delimited continuations by a type-directed selective CPS-transform.
https://dblp.org/rec/conf/icfp/Rossberg06,The missing link: dynamic components for ML.
https://dblp.org/rec/conf/icfp/Rossberg15,1ML - core and modules united (F-ing first-class modules).
https://dblp.org/rec/conf/icfp/Rosu06,Equality of streams is a Pi0 over 2-complete problem.
https://dblp.org/rec/conf/icfp/Russell01,"Events in Haskell, and How to Implement Them."
https://dblp.org/rec/conf/icfp/Russell98,MAP: A Functional Analysis and Design Method.
https://dblp.org/rec/conf/icfp/Russo01,Recursive Structures for Standard ML.
https://dblp.org/rec/conf/icfp/Russo15,"Functional pearl: two can keep a secret, if one of them uses Haskell."
https://dblp.org/rec/conf/icfp/Ryu16,Journey to find bugs in JavaScript web applications in the wild.
https://dblp.org/rec/conf/icfp/SabelfeldS97,Simple Semantic Analysis Problems for Functional Programs.
https://dblp.org/rec/conf/icfp/SabryW96,A Reflection on Call-by-Value.
https://dblp.org/rec/conf/icfp/Sage00,FranTk - a declarative GUI language for Haskell.
https://dblp.org/rec/conf/icfp/Sampson09,Experience report: Haskell in the 'real world': writing a commercial application in a lazy functional lanuage.
https://dblp.org/rec/conf/icfp/SarkarWD04,A nanopass infrastructure for compiler education.
https://dblp.org/rec/conf/icfp/SasanoHTO00,Make it practical: a generic linear-time algorithm for solving maximum-weightsum problems.
https://dblp.org/rec/conf/icfp/SchererR15,Which simple types have a unique inhabitant?
https://dblp.org/rec/conf/icfp/SchlesingerGW14,Concurrent NetCore: from policies to pipelines.
https://dblp.org/rec/conf/icfp/Schmidt-SchaussS13,Correctness of an STM Haskell implementation.
https://dblp.org/rec/conf/icfp/SchoepeHS14,SeLINQ: tracking information across application-database boundaries.
https://dblp.org/rec/conf/icfp/Scholz98,Imperative Streams - A Monadic Combinator Library for Synchronous Programming.
https://dblp.org/rec/conf/icfp/SchrijversJCS08,Type checking with open type functions.
https://dblp.org/rec/conf/icfp/SchrijversJSV09,Complete and decidable type inference for GADTs.
https://dblp.org/rec/conf/icfp/SchrijversO11,"Monads, zippers and views: virtualizing the monad stack."
https://dblp.org/rec/conf/icfp/SchwerterGT14,A theory of gradual effect systems.
https://dblp.org/rec/conf/icfp/ScottSGM10,Using functional programming within an industrial product group: perspectives and perceptions.
https://dblp.org/rec/conf/icfp/SculthorpeBGG13,The constrained-monad problem.
https://dblp.org/rec/conf/icfp/SculthorpeN09,Safe functional reactive programming through dependent types.
https://dblp.org/rec/conf/icfp/Seger00,Combining functional programming and hardware verification (abstract of invited talk).
https://dblp.org/rec/conf/icfp/SeidelJW16,"Dynamic witnesses for static type errors (or, ill-typed programs usually go wrong)."
https://dblp.org/rec/conf/icfp/SemmelrothS99,Monadic Encapsulation in ML.
https://dblp.org/rec/conf/icfp/Sereni07,Termination analysis and call graph construction for higher-order functional programs.
https://dblp.org/rec/conf/icfp/Sergey16,Experience report: growing and shrinking polygons for random testing of computational geometry algorithms.
https://dblp.org/rec/conf/icfp/SerpetteS02,Compiling scheme to JVM bytecode: : a performance study.
https://dblp.org/rec/conf/icfp/SerranoB00,Understanding memory allocation of scheme programs.
https://dblp.org/rec/conf/icfp/SerranoF96,Storage Use Analysis and its Applications.
https://dblp.org/rec/conf/icfp/SerranoP16,A glimpse of Hopjs.
https://dblp.org/rec/conf/icfp/SeveriV12,Pure type systems with corecursion on streams: from finite to infinitary normalisation.
https://dblp.org/rec/conf/icfp/Sewell12,Tales from the jungle.
https://dblp.org/rec/conf/icfp/SewellLWNAHV05,Acute: high-level programming language design for distributed computation.
https://dblp.org/rec/conf/icfp/SewellNOPRSS07,Ott: effective tool support for the working semanticist.
https://dblp.org/rec/conf/icfp/Shao97,Flexible Representation Analysis.
https://dblp.org/rec/conf/icfp/Shao98,Typed Cross-Module Compilation.
https://dblp.org/rec/conf/icfp/Shao99,Transparent Modules with Fully Syntactic Signatures.
https://dblp.org/rec/conf/icfp/ShaoLM98,Implementing Typed Intermediate Languages.
https://dblp.org/rec/conf/icfp/Shapiro06,Practical proofs of concurrent programs.
https://dblp.org/rec/conf/icfp/Sheard01,Generic Unification via Two-Level Types and Parameterized Modules.
https://dblp.org/rec/conf/icfp/Sheard12,Painless programming combining reduction and search: design principles for embedding decision procedures in high-level languages.
https://dblp.org/rec/conf/icfp/Sheeran15,Functional programming and hardware design: still interesting after all these years.
https://dblp.org/rec/conf/icfp/ShinwellPG03,FreshML: programming with binders made simple.
https://dblp.org/rec/conf/icfp/Shivers05,The anatomy of a loop: a story of scope and control.
https://dblp.org/rec/conf/icfp/Shivers97,Automatic Management of Operating System Resources.
https://dblp.org/rec/conf/icfp/ShiversCM99,Atomic Heap Transactions and Fine-grain Interrupts.
https://dblp.org/rec/conf/icfp/ShiversF04,Multi-return function call.
https://dblp.org/rec/conf/icfp/ShiversT11,Modular rollback through control logging: a pair of twin functional pearls.
https://dblp.org/rec/conf/icfp/Siederdissen12,Sneaking around concatMap: efficient combinators for dynamic programming.
https://dblp.org/rec/conf/icfp/SimoesVFJH12,Automatic amortised analysis of dynamic memory allocation for lazy functional programs.
https://dblp.org/rec/conf/icfp/Simonet03,An extension of HM(X) with bounded existential and universal data-types.
https://dblp.org/rec/conf/icfp/SimsD07,Experience report: the reactis validation tool.
https://dblp.org/rec/conf/icfp/SkalkaS00,Static enforcement of security with types.
https://dblp.org/rec/conf/icfp/SmolkaEFG15,A fast compiler for NetKAT.
https://dblp.org/rec/conf/icfp/SobelF98,Recycling Continuations.
https://dblp.org/rec/conf/icfp/Sozeau07,Program-ing finger trees in Coq.
https://dblp.org/rec/conf/icfp/Sperber01,Developing a Stage Lighting System from Scratch.
https://dblp.org/rec/conf/icfp/SpiliopoulouHD97,"Distributed Programming, a Purely Functional Approach."
https://dblp.org/rec/conf/icfp/SplawskiU99,Type Fixpoints: Iteration vs. Recursion.
https://dblp.org/rec/conf/icfp/SpoonhowerBHG08,Space profiling for parallel functional programs.
https://dblp.org/rec/conf/icfp/St-AmourT13,Experience report: applying random testing to a base type environment.
https://dblp.org/rec/conf/icfp/StampoulisS10,VeriML: typed computation of logical terms inside a language with effects.
https://dblp.org/rec/conf/icfp/StansiferW14,Romeo: a system for more flexible binding-safe programming.
https://dblp.org/rec/conf/icfp/Steele09,"Organizing functional code for parallel execution or, foldl and foldr considered slightly harmful."
https://dblp.org/rec/conf/icfp/StefanRBLMM12,Addressing covert termination and timing channels in concurrent information flow systems.
https://dblp.org/rec/conf/icfp/SteuwerFLD15,Generating performance portable code using rewrite rules: from high-level functional expressions to high-performance OpenCL code.
https://dblp.org/rec/conf/icfp/StewartBA12,Verified heap theorem prover by paramodulation.
https://dblp.org/rec/conf/icfp/StuckeyS02,A theory of overloading.
https://dblp.org/rec/conf/icfp/StuckiRUB15,RRB vector: a practical general purpose immutable sequence.
https://dblp.org/rec/conf/icfp/Svenningsson02,Shortcut fusion for accumulating parameters & zip-like functions.
https://dblp.org/rec/conf/icfp/SvenningssonS13,Simple and compositional reification of monadic embedded languages.
https://dblp.org/rec/conf/icfp/SwamyCFSBY11,Secure distributed programming with value-dependent types.
https://dblp.org/rec/conf/icfp/SwamyGLH11,Lightweight monadic programming in ML.
https://dblp.org/rec/conf/icfp/SwamyHB09,A theory of typed coercions and its applications.
https://dblp.org/rec/conf/icfp/SwordsST15,Expressing contract monitors as patterns of communication.
https://dblp.org/rec/conf/icfp/SymeNM07,Extensible pattern matching via a lightweight language extension.
https://dblp.org/rec/conf/icfp/TahaS97,Multi-Stage Programming.
https://dblp.org/rec/conf/icfp/Takeda0YS16,Compact bit encoding schemes for simply-typed lambda-terms.
https://dblp.org/rec/conf/icfp/Takeyama11,Programming assurance cases in Agda.
https://dblp.org/rec/conf/icfp/TanMKFON16,A new verified compiler backend for CakeML.
https://dblp.org/rec/conf/icfp/Taylor98,A Theory of Core Fudgets.
https://dblp.org/rec/conf/icfp/TerauchiA05,Witnessing side-effects.
https://dblp.org/rec/conf/icfp/ThamsborgB11,A kripke logical relation for effect-based program transformations.
https://dblp.org/rec/conf/icfp/ThibodeauCP16,Indexed codata types.
https://dblp.org/rec/conf/icfp/Thiemann96,Cogen in Six Lines.
https://dblp.org/rec/conf/icfp/ThiemannV16,Context-free session types.
https://dblp.org/rec/conf/icfp/Tobin-HochstadtF10,Logical types for untyped languages.
https://dblp.org/rec/conf/icfp/TolmachAN04,Implementing functional logic languages using multiple threads and stores.
https://dblp.org/rec/conf/icfp/TraytelN13,Verified decision procedures for MSO on words based on derivatives of regular expressions.
https://dblp.org/rec/conf/icfp/TrifonovSS00,Fully reflexive intensional type analysis.
https://dblp.org/rec/conf/icfp/TseZ04,Translating dependency into parametricity.
https://dblp.org/rec/conf/icfp/Turbak96,First-Class Synchronization Barriers.
https://dblp.org/rec/conf/icfp/TuronDB13,Unifying refinement and hoare-style reasoning in a logic for higher-order concurrency.
https://dblp.org/rec/conf/icfp/UenoO16,A fully concurrent garbage collector for functional programs on multicore processors.
https://dblp.org/rec/conf/icfp/UenoOO11,An efficient non-moving garbage collector for functional languages.
https://dblp.org/rec/conf/icfp/UngureanuG97,Formal Models of Distributed Memory Management.
https://dblp.org/rec/conf/icfp/VardoulakisS11,Pushdown flow analysis of first-class control.
https://dblp.org/rec/conf/icfp/VazouBJ15,Bounded refinement types.
https://dblp.org/rec/conf/icfp/VazouSJVJ14,Refinement types for Haskell.
https://dblp.org/rec/conf/icfp/VieraSS09,Attribute grammars fly first-class: how to do aspect oriented programming in Haskell.
https://dblp.org/rec/conf/icfp/VisserBT98,Building Program Optimizers with Rewriting Strategies.
https://dblp.org/rec/conf/icfp/Voigtlander02,"Concatenate, reverse and map vanish for free."
https://dblp.org/rec/conf/icfp/Voigtlander09,Free theorems involving type constructor classes: functional pearl.
https://dblp.org/rec/conf/icfp/VoigtlanderHMW10,Combining syntactic and semantic bidirectionalization.
https://dblp.org/rec/conf/icfp/VytiniotisJM12,Equality proofs and deferred type errors: a compiler pearl.
https://dblp.org/rec/conf/icfp/VytiniotisK10,Functional pearl: every bit counts.
https://dblp.org/rec/conf/icfp/VytiniotisWJ06,Boxy types: inference for higher-rank types and impredicativity.
https://dblp.org/rec/conf/icfp/VytiniotisWJ08,FPH: first-class polymorphism for Haskell.
https://dblp.org/rec/conf/icfp/Wadler03,Call-by-value is dual to call-by-name.
https://dblp.org/rec/conf/icfp/Wadler12,Propositions as sessions.
https://dblp.org/rec/conf/icfp/Wadler98,The Marriage of Effects and Monads.
https://dblp.org/rec/conf/icfp/Wailly97,Lambda-Flow: A Parallel Functional Synchronous Dataflow Language.
https://dblp.org/rec/conf/icfp/WalkerMLRA06,Static typing for a faulty lambda calculus.
https://dblp.org/rec/conf/icfp/WalkerW01,On Regions and Linear Types.
https://dblp.org/rec/conf/icfp/WalkerZL03,A theory of aspects.
https://dblp.org/rec/conf/icfp/WallaceR99,Haskell and XML: Generic Combinators or Type-Based Translation?
https://dblp.org/rec/conf/icfp/Wand03,Understanding aspects: extended abstract.
https://dblp.org/rec/conf/icfp/WandV04,Relating models of backtracking.
https://dblp.org/rec/conf/icfp/WangGW11,Incremental updates for efficient bidirectional transformations.
https://dblp.org/rec/conf/icfp/WanTH01,Real-Time FRP.
https://dblp.org/rec/conf/icfp/WashburnW03,Boxes go bananas: encoding higher-order abstract syntax with parametric polymorphism.
https://dblp.org/rec/conf/icfp/WatanabeST016,Automatically disproving fair termination of higher-order functional programs.
https://dblp.org/rec/conf/icfp/Wazny07,Experience report: functional programming in c-rules.
https://dblp.org/rec/conf/icfp/Weirich00,Type-safe cast: functional pearl.
https://dblp.org/rec/conf/icfp/Weirich14,Depending on types.
https://dblp.org/rec/conf/icfp/WeirichHE13,System FC with explicit kind equality.
https://dblp.org/rec/conf/icfp/WeirichYS11,Binders unbound.
https://dblp.org/rec/conf/icfp/WelshG07,Experience report: scheme in commercial web application development.
https://dblp.org/rec/conf/icfp/WestbrookSW05,A language-based approach to functionally correct imperative programming.
https://dblp.org/rec/conf/icfp/Wiger04,20 years of industrial functional programming.
https://dblp.org/rec/conf/icfp/Winograd-CortH14,Settable and non-interfering signal functions for FRP: how a first-order switch is more than enough.
https://dblp.org/rec/conf/icfp/WiseW96,Static and Dynamic Partitioning of Pointers as Links and Threads.
https://dblp.org/rec/conf/icfp/Wong00,The functional guts of the Kleisli query system.
https://dblp.org/rec/conf/icfp/XiH01,A Dependently Typed Assembly Language.
https://dblp.org/rec/conf/icfp/YakushevHLJ09,Generic programming with fixed points for mutually recursive datatypes.
https://dblp.org/rec/conf/icfp/Yang98,Encoding Types in ML-Like Languages.
https://dblp.org/rec/conf/icfp/YangCAEKN15,Efficient communication and collection with compact normal forms.
https://dblp.org/rec/conf/icfp/YuS04,Verification of safety properties for concurrent assembly code.
https://dblp.org/rec/conf/icfp/ZdancewicGM99,Principals in Programming Languages: A Syntactic Proof Technique.
https://dblp.org/rec/conf/icfp/ZengerO01,Extensible Algebraic Datatypes with Defaults.
https://dblp.org/rec/conf/icfp/ZhangL98,Automating Derivation of Incremental Programs.
https://dblp.org/rec/conf/icfp/ZhuNJ15,Learning refinement types.
https://dblp.org/rec/conf/icfp/ZiarekSJ06,Stabilizers: a modular checkpointing abstraction for concurrent functional programs.
https://dblp.org/rec/conf/icfp/ZiarekSJ09,Partial memoization of concurrency and communication.
https://dblp.org/rec/conf/icfp/ZilianiDKNV13,Mtac: a monad for typed tactic programming in Coq.
https://dblp.org/rec/conf/icfp/ZilianiS15,A unification algorithm for Coq featuring universe polymorphism and overloading.
https://dblp.org/rec/conf/oopsla/0001GJSSTC16,Type inference for static compilation of JavaScript.
https://dblp.org/rec/conf/oopsla/0001SCA13,Data-driven equivalence checking.
https://dblp.org/rec/conf/oopsla/0001SCA15,Conditionally correct superoptimization.
https://dblp.org/rec/conf/oopsla/0003KLS15,"Fast, multicore-scalable, low-fragmentation memory allocation through large virtual memory and global data structures."
https://dblp.org/rec/conf/oopsla/AbdaliCS86,A Smalltalk System for Algebraic Manipulation.
https://dblp.org/rec/conf/oopsla/Abi-AntounA09,Static extraction and conformance analysis of hierarchical runtime architectural structure using annotations.
https://dblp.org/rec/conf/oopsla/AbuaiadhOPS04,An efficient parallel heap compaction algorithm.
https://dblp.org/rec/conf/oopsla/AcarCR11,Oracle scheduling: controlling granularity in implicitly parallel languages.
https://dblp.org/rec/conf/oopsla/AchourR15,Approximate computation with outlier detection in Topaz.
https://dblp.org/rec/conf/oopsla/AdamczykH10,The Tower of Babel did not fail.
https://dblp.org/rec/conf/oopsla/AdamsEMOPSSY14,The hiphop virtual machine.
https://dblp.org/rec/conf/oopsla/AdamsKMMCD11,Flow-sensitive type recovery in linear-log time.
https://dblp.org/rec/conf/oopsla/AdamsN89,Neural Agents - A Frame of Mind.
https://dblp.org/rec/conf/oopsla/Adl-TabatabaiGL96,Code Reuse in an Optimizing Compiler.
https://dblp.org/rec/conf/oopsla/AftandilianGVY11,Asynchronous assertions.
https://dblp.org/rec/conf/oopsla/AgerboC98,How to Preserve the Benefits of Design Patterns.
https://dblp.org/rec/conf/oopsla/AgesenDGKRW99,An Efficient Meta-Lock for Implementing Ubiquitous Synchronization.
https://dblp.org/rec/conf/oopsla/AgesenFM97,Adding Type Parameterization to the Java Language.
https://dblp.org/rec/conf/oopsla/AgesenH95,Type Feedback vs. Concrete Type Inference: A Comparison of Optimization Techniques for Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/AgesenU94,Sifting Out the Gold.
https://dblp.org/rec/conf/oopsla/AgrawalDL91,Static Type Checking of Multi-Methods.
https://dblp.org/rec/conf/oopsla/AhernY05,Formalising Java RMI with explicit code mobility.
https://dblp.org/rec/conf/oopsla/AksitB92,Obstacles in Object-Oriented Software Development.
https://dblp.org/rec/conf/oopsla/AksitT88,Data Abstraction Mechanisms in SINA/ST.
https://dblp.org/rec/conf/oopsla/Alabiso88,Transformation of Data Flow Analysis Models to Object-Oriented Design.
https://dblp.org/rec/conf/oopsla/Alagic97,The ODMG Object Model: Does it Make Sense?
https://dblp.org/rec/conf/oopsla/AldrichKC02,Alias annotations for program understanding.
https://dblp.org/rec/conf/oopsla/Alexander87,Painless Panes for Smalltalk Windows.
https://dblp.org/rec/conf/oopsla/AllanACHKLMSST05,Adding trace matching with free variables to AspectJ.
https://dblp.org/rec/conf/oopsla/AllenBC03,A first-class approach to genericity.
https://dblp.org/rec/conf/oopsla/AllenC95,Extending the Statechart Formalism: Event Scheduling & Disposition.
https://dblp.org/rec/conf/oopsla/AllenCLMS04,Object-oriented units of measurement.
https://dblp.org/rec/conf/oopsla/AllendeFGT14,Confined gradual typing.
https://dblp.org/rec/conf/oopsla/AllenHKLRCS11,Type checking modular multiple dispatch with parametric polymorphism and multiple inheritance.
https://dblp.org/rec/conf/oopsla/Almarode89,Rule-Based Delegation for Prototypes.
https://dblp.org/rec/conf/oopsla/AlpernABCHLNMSS99,Implementing Jalapeño in Java.
https://dblp.org/rec/conf/oopsla/AlpernCFGL01,Efficient Implementation of Java Interfaces: Invokeinterface Considered Harmless.
https://dblp.org/rec/conf/oopsla/AltidorS14,"Refactoring Java generics by inferring wildcards, in practice."
https://dblp.org/rec/conf/oopsla/AltmanAFM10,Performance analysis of idle programs.
https://dblp.org/rec/conf/oopsla/AlvesGDLGRP15,Runtime pointer disambiguation.
https://dblp.org/rec/conf/oopsla/AmielGS94,Optimizing Multi-Method Dispatch Using Compressed Dispatch Tables.
https://dblp.org/rec/conf/oopsla/AminRO14,Foundations of path-dependent types.
https://dblp.org/rec/conf/oopsla/AminT16,Java and scala's type systems are unsound: the existential crisis of null pointers.
https://dblp.org/rec/conf/oopsla/AnconaC16,Semantic subtyping for imperative object-oriented languages.
https://dblp.org/rec/conf/oopsla/AnconaLZ01,A Core Calculus for Java Exceptions.
https://dblp.org/rec/conf/oopsla/Anderson12,"Efficiently combining parallel software using fine-grained, language-level, hierarchical resource management policies."
https://dblp.org/rec/conf/oopsla/Anderson86,"Experience with Flamingo: A Distributed, Object-Oriented User Interface System."
https://dblp.org/rec/conf/oopsla/AndersonCJKM97,Looking for the Objects in Object-Relational DBMSs (Panel).
https://dblp.org/rec/conf/oopsla/AndersonG11,"Composable, nestable, pessimistic atomic statements."
https://dblp.org/rec/conf/oopsla/AndersonSBB93,Software Architecture: The Next Step for Object Technology (Panel).
https://dblp.org/rec/conf/oopsla/AndersonSBSTL86,The Future of Object-Oriented Languages - Panel.
https://dblp.org/rec/conf/oopsla/AndreaeNMM06,A framework for implementing pluggable type systems.
https://dblp.org/rec/conf/oopsla/AndreasenM14,Determinacy in static analysis for jQuery.
https://dblp.org/rec/conf/oopsla/AndreoliP91,Communication as Fair Distribution of Knowledge.
https://dblp.org/rec/conf/oopsla/AndreR92,Optimizing Method Search with Lookup Caches and Incremental Coloring.
https://dblp.org/rec/conf/oopsla/AndrewsH87,Combining Language and Database Advances in an Object-Oriented Development Environment.
https://dblp.org/rec/conf/oopsla/ArnoldFGHS00,Adaptive optimization in the Jalapeño JVM.
https://dblp.org/rec/conf/oopsla/ArnoldHR02,Online feedback-directed optimization of Java.
https://dblp.org/rec/conf/oopsla/ArnoldL10,Managing ambiguity in programming by finding unambiguous examples.
https://dblp.org/rec/conf/oopsla/ArnoldVY08,QVM: an efficient runtime for detecting defects in deployed systems.
https://dblp.org/rec/conf/oopsla/ArnoldWR05,Improving virtual machine performance using a cross-run profile repository.
https://dblp.org/rec/conf/oopsla/ArtimBCCRTW98,Object-Oriented Practice in 1998: Does it help or hinder collaboration? (Panel).
https://dblp.org/rec/conf/oopsla/Atkinson86,Hurricane: An Optimizing Compiler for Smalltalk.
https://dblp.org/rec/conf/oopsla/AttaliCEL96,Semantic-Based Visualization for Parallel Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/AtwoodeDSSL94,Objects and Databases (Panel).
https://dblp.org/rec/conf/oopsla/AuerbachBCR10,Lime: a Java-compatible and synthesizable language for heterogeneous architectures.
https://dblp.org/rec/conf/oopsla/AuerGSLT89,Panel: From Prototype to Product?
https://dblp.org/rec/conf/oopsla/AusielloDFF12,k-Calling context profiling.
https://dblp.org/rec/conf/oopsla/AustinDF11,Virtual values for language extension.
https://dblp.org/rec/conf/oopsla/AvgustinovTM07,Making trace monitors feasible.
https://dblp.org/rec/conf/oopsla/AzatchiLPP03,An on-the-fly mark and sweep garbage collector based on sliding views.
https://dblp.org/rec/conf/oopsla/AzimN13,Targeted and depth-first exploration for systematic testing of android apps.
https://dblp.org/rec/conf/oopsla/BachrachP01,The Java Syntactic Extender.
https://dblp.org/rec/conf/oopsla/BaconCR04,A unified theory of garbage collection.
https://dblp.org/rec/conf/oopsla/BaconS96,Fast Static Analysis of C++ Virtual Function Calls.
https://dblp.org/rec/conf/oopsla/BaconST00,Guava: a dialect of Java without data races.
https://dblp.org/rec/conf/oopsla/BakDFMU98,The New Crop of Java Virtual Machines (Panel).
https://dblp.org/rec/conf/oopsla/BalabanTF05,Refactoring support for class library migration.
https://dblp.org/rec/conf/oopsla/BalatsourasS13,Class hierarchy complementation: soundly completing a partial type graph.
https://dblp.org/rec/conf/oopsla/BaldiLLB08,A theory of aspects as latent topics.
https://dblp.org/rec/conf/oopsla/BalK93,Object Distribution in Orca using Compile-Time and Run-Time Techniques.
https://dblp.org/rec/conf/oopsla/BallardMW86,Quicktalk: A Smalltalk-80 Dialect for Defining Primitive Methods.
https://dblp.org/rec/conf/oopsla/BaniassadM09,An exploration of program as language.
https://dblp.org/rec/conf/oopsla/BaoZ13,On-the-fly detection of instability problems in floating-point program execution.
https://dblp.org/rec/conf/oopsla/BaoZZ12,White box sampling in uncertain data processing enabled by program analysis.
https://dblp.org/rec/conf/oopsla/BarabashOP03,Mostly concurrent garbage collection revisited.
https://dblp.org/rec/conf/oopsla/BardouD96,Split Objects: a Disciplined Use of Delegation within Objects.
https://dblp.org/rec/conf/oopsla/BarmanCBG16,Ringer: web automation by demonstration.
https://dblp.org/rec/conf/oopsla/BaronA95,Evolving to Objects - The Witches' Brew.
https://dblp.org/rec/conf/oopsla/BarowyCBM12,AutoMan: a platform for integrating human-based and digital computation.
https://dblp.org/rec/conf/oopsla/BarowyGB14,CheckCell: data debugging for spreadsheets.
https://dblp.org/rec/conf/oopsla/BarrettCHMPW96,A Monotonic Superclass Linearization for Dylan.
https://dblp.org/rec/conf/oopsla/BarrM14,Tardis: affordable time-travel debugging in managed runtimes.
https://dblp.org/rec/conf/oopsla/Barry89,Prototyping a Real-Time Embedded System in Smalltalk.
https://dblp.org/rec/conf/oopsla/BarryATW87,Using Objects To Design and Build Radar ESM Systems.
https://dblp.org/rec/conf/oopsla/BartensteinL14,Rate types for stream programs.
https://dblp.org/rec/conf/oopsla/BastaniAA15,Interactively verifying absence of explicit information flows in Android apps.
https://dblp.org/rec/conf/oopsla/BastidePSN00,Formal specification of CORBA services: experience and lessons learned.
https://dblp.org/rec/conf/oopsla/BavishiPR16,To be precise: regression aware debugging.
https://dblp.org/rec/conf/oopsla/BaxterFNRSVMT06,Understanding the shape of Java software.
https://dblp.org/rec/conf/oopsla/BebenitaBFLSTV10,SPUR: a trace-based JIT compiler for CIL.
https://dblp.org/rec/conf/oopsla/BeckBCPW91,Can Structured Methods be Objectified? (Panel).
https://dblp.org/rec/conf/oopsla/BeckC89,A Laboratory for Teaching Object-Oriented Thinking.
https://dblp.org/rec/conf/oopsla/BeckH94,Persistent Storgage for a Workflow Tool Implemented in Smalltalk.
https://dblp.org/rec/conf/oopsla/BeckmanBA08,Verifying correct usage of atomic blocks and typestate.
https://dblp.org/rec/conf/oopsla/BeckRLW88,Panel: Experiences with Reusability.
https://dblp.org/rec/conf/oopsla/Beech88,Intensional Concepts in an Object Database Model.
https://dblp.org/rec/conf/oopsla/BellamyAMS08,Efficient local type inference.
https://dblp.org/rec/conf/oopsla/BellK14,Phosphor: illuminating dynamic data flow in commodity jvms.
https://dblp.org/rec/conf/oopsla/BenderLP15,Declarative fence insertion.
https://dblp.org/rec/conf/oopsla/Bennett87,The Design and Implementation of Distributed Smalltalk.
https://dblp.org/rec/conf/oopsla/BensleyBP88,An Execution Model for Distributed Object-Oriented Computation.
https://dblp.org/rec/conf/oopsla/BensonZ91,Symbolic and Spatial Database for Structural Biology.
https://dblp.org/rec/conf/oopsla/BerganCG13,Input-covering schedules for multithreaded programs.
https://dblp.org/rec/conf/oopsla/BerganGC14,Symbolic execution of multithreaded programs from arbitrary program contexts.
https://dblp.org/rec/conf/oopsla/BergelDN05,Classbox/J: controlling the scope of change in Java.
https://dblp.org/rec/conf/oopsla/BergerYLN09,Grace: safe multithreaded programming for C/C++.
https://dblp.org/rec/conf/oopsla/BergerZM02,Reconsidering custom memory allocation.
https://dblp.org/rec/conf/oopsla/Bergstein91,Object-Preserving Class Transformations.
https://dblp.org/rec/conf/oopsla/BertinoG98,Extending the ODMG Object Model with Composite Objects.
https://dblp.org/rec/conf/oopsla/BettsCDQT12,GPUVerify: a verifier for GPU kernels.
https://dblp.org/rec/conf/oopsla/Bezivin87,Some Experiments In Object-Oriented Simulation.
https://dblp.org/rec/conf/oopsla/BhandariCB16,Makalu: fast recoverable allocation of non-volatile memory.
https://dblp.org/rec/conf/oopsla/BhaskarPB86,Virtual Instruments: Object-Oriented Program Synthesis.
https://dblp.org/rec/conf/oopsla/BhattacharyaGN13,Combining concern input with program analysis for bloat detection.
https://dblp.org/rec/conf/oopsla/BielikRV15,Scalable race detection for Android applications.
https://dblp.org/rec/conf/oopsla/BierhoffA07,Modular typestate checking of aliased objects.
https://dblp.org/rec/conf/oopsla/BiermanMT07,Lost in translation: formalizing proposed extensions to c#.
https://dblp.org/rec/conf/oopsla/BinderHV01,Portable Resource Control in Java: The J-SEAL2 Approach.
https://dblp.org/rec/conf/oopsla/BinghamHH93,Experiences Developing and Using an Object-Oriented Library for Program Manipulation.
https://dblp.org/rec/conf/oopsla/BirkaE04,A practical type system and language for reference immutability.
https://dblp.org/rec/conf/oopsla/BiswasZBL15,"Valor: efficient, software-only region conflict exceptions."
https://dblp.org/rec/conf/oopsla/BjornerstedtB88,AVANCE: An Object Management System.
https://dblp.org/rec/conf/oopsla/BjornssonS02,BuddyCache: high-performance object storage for collaborative strong-consistency applications in a WAN.
https://dblp.org/rec/conf/oopsla/BlackburnGHKMBDFFGHHJLMPSVDW06,The DaCapo benchmarks: java benchmarking development and analysis.
https://dblp.org/rec/conf/oopsla/BlackburnM03,Ulterior reference counting: fast garbage collection without a long wait.
https://dblp.org/rec/conf/oopsla/BlackburnSHMM01,Pretenuring for Java.
https://dblp.org/rec/conf/oopsla/BlackHJL86,Object Structure in the Emerald System.
https://dblp.org/rec/conf/oopsla/BlackSD03,Applying traits to the smalltalk collection classes.
https://dblp.org/rec/conf/oopsla/BlackshearCS15,Selective control-flow abstraction via jumping.
https://dblp.org/rec/conf/oopsla/Blanchet99,Escape Analysis for Object-Oriented Languages: Application to Java.
https://dblp.org/rec/conf/oopsla/BlockC89,An Extended Frame Language.
https://dblp.org/rec/conf/oopsla/BloomFNORSVW09,"Thorn: robust, concurrent, extensible scripting on the JVM."
https://dblp.org/rec/conf/oopsla/BloomZ87,Issues in the Design of Object-Oriented Database Programming Languages.
https://dblp.org/rec/conf/oopsla/BlumG16,Stateless model checking with data-race preemption points.
https://dblp.org/rec/conf/oopsla/BobrowDKS89,Panel: Object-Oriented Languages: Premises and Promises.
https://dblp.org/rec/conf/oopsla/BobrowKKMSZ86,CommonLoops: Merging Lisp and Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/BocchinoADAHKOSSV09,A type and effect system for deterministic parallel Java.
https://dblp.org/rec/conf/oopsla/BockischADM06,Adapting virtual machine techniques for seamless aspect support.
https://dblp.org/rec/conf/oopsla/BockischKHAM06,Efficient control flow quantification.
https://dblp.org/rec/conf/oopsla/BocqD12,Molecule: using monadic and streaming I/O to compose process networks on the JVM.
https://dblp.org/rec/conf/oopsla/BogdaH99,Removing Unnecessary Synchronization in Java.
https://dblp.org/rec/conf/oopsla/BogleL94,Reducing Cross Domain Call Overhead using Batched Futures.
https://dblp.org/rec/conf/oopsla/BoisSEE13,Bottle graphs: visualizing scalability bottlenecks in multi-threaded applications.
https://dblp.org/rec/conf/oopsla/BolzDT13,Storage strategies for collections in dynamically typed languages.
https://dblp.org/rec/conf/oopsla/BonarCS86,An Object-Oriented Architecture for Intelligent Tutoring Systems.
https://dblp.org/rec/conf/oopsla/BonarLLNRSS96,Components on the Internet (Panel Session).
https://dblp.org/rec/conf/oopsla/BondKCZSBSH13,OCTET: capturing and controlling cross-thread dependences efficiently.
https://dblp.org/rec/conf/oopsla/BondM07,Probabilistic calling context.
https://dblp.org/rec/conf/oopsla/BondM08,Tolerating memory leaks.
https://dblp.org/rec/conf/oopsla/BondNKGM07,Tracking bad apples: reporting the origin of null and undefined value errors.
https://dblp.org/rec/conf/oopsla/BonettaSMB16,GEMs: shared-memory parallel programming for Node.js.
https://dblp.org/rec/conf/oopsla/BoochSSF86,Object-Oriented Programming without an Object-Oriented Language - Panel.
https://dblp.org/rec/conf/oopsla/BorningDFKW87,Constraint Hierarchies.
https://dblp.org/rec/conf/oopsla/BosboomRWA14,StreamJIT: a commensal compiler for high-performance stream programming.
https://dblp.org/rec/conf/oopsla/BosL89,PROCOL - A Parallel Object Language with Protocols.
https://dblp.org/rec/conf/oopsla/BostonSGC15,Probability type inference for flexible approximate programming.
https://dblp.org/rec/conf/oopsla/BouilletFLRR08,A tag-based approach for the design and composition of information processing applications.
https://dblp.org/rec/conf/oopsla/Bouraqadi-SaadaniLR98,Safe Metaclass Programming.
https://dblp.org/rec/conf/oopsla/BoyapatiLR02,Ownership types for safe programming: preventing data races and deadlocks.
https://dblp.org/rec/conf/oopsla/BoyapatiLSMR03,Lazy modular upgrades in persistent object stores.
https://dblp.org/rec/conf/oopsla/BoyapatiR01,A Parameterized Type System for Race-Free Java Programs.
https://dblp.org/rec/conf/oopsla/BoylandC97,Parasitic Methods: An Implementation of Multi-Methods for Java.
https://dblp.org/rec/conf/oopsla/BrachaG93,Strongtalk: Typechecking Smalltalk in a Production Environment.
https://dblp.org/rec/conf/oopsla/BrachaOSW98,Making the Future Safe for the Past: Adding Genericity to the Java Programming Language.
https://dblp.org/rec/conf/oopsla/BrachaU04,Mirrors: design principles for meta-level facilities of object-oriented programming languages.
https://dblp.org/rec/conf/oopsla/BrachthauserRO16,Parsing with first-class derivatives.
https://dblp.org/rec/conf/oopsla/BrandauerCW15,Disjointness domains for fine-grained aliasing.
https://dblp.org/rec/conf/oopsla/BravenboerS09,Strictly declarative specification of sophisticated points-to analyses.
https://dblp.org/rec/conf/oopsla/BravenboerTV06,"Declarative, formal, and extensible syntax definition for aspectJ."
https://dblp.org/rec/conf/oopsla/BravenboerV04,Concrete syntax for objects: domain-specific language embedding and assimilation without restrictions.
https://dblp.org/rec/conf/oopsla/BrechtALP01,Controlling Garbage Collection and Heap Growth to Reduce the Execution Time of Java Applications.
https://dblp.org/rec/conf/oopsla/BriotC89,Programming with Explicit Metaclasses in Smalltalk-80.
https://dblp.org/rec/conf/oopsla/BruceCMGDM93,Safe and Decidable Type Checking in an Object-Oriented Language.
https://dblp.org/rec/conf/oopsla/BrueggeBJS92,Object-Oriented System Modeling with OMT.
https://dblp.org/rec/conf/oopsla/BrueggeGL93,A Framework for Dynamic Program Analyzers.
https://dblp.org/rec/conf/oopsla/BrunoB86,Petri Net-Based Object-Oriented Modeling of Distributed Systems.
https://dblp.org/rec/conf/oopsla/BrutschyF014,Static analysis for independent app developers.
https://dblp.org/rec/conf/oopsla/BrutschyFTP15,ShamDroid: gracefully degrading functionality in the presence of limited resource access.
https://dblp.org/rec/conf/oopsla/BryceR00,An approach to safe object sharing.
https://dblp.org/rec/conf/oopsla/BuchiW98,Compound Types for Java.
https://dblp.org/rec/conf/oopsla/BuhrC92,Architectures with Pictures.
https://dblp.org/rec/conf/oopsla/BuhrC94,Timethread-Role Maps for Object-Oriented Design of Real-Time-and-Distributed Systems.
https://dblp.org/rec/conf/oopsla/BuhrHLC00,Object-oriented real-time concurrency.
https://dblp.org/rec/conf/oopsla/BulmanTMNK92,"OOP in Languages Providing Strong, Static Typing (Panel)."
https://dblp.org/rec/conf/oopsla/BurckhardtBL10,Concurrent programming with revisions and isolation types.
https://dblp.org/rec/conf/oopsla/BurckhardtLSYB11,Two for the price of one: a model for parallel and incremental computation.
https://dblp.org/rec/conf/oopsla/BuseSW11,Benefits and barriers of user evaluation in software engineering research.
https://dblp.org/rec/conf/oopsla/BuytaertGHAEB07,Using hpm-sampling to drive dynamic compilation.
https://dblp.org/rec/conf/oopsla/CahillBHS93,The Amadeus GRT - Generic Runtime Support for Distributed Persistent Programming.
https://dblp.org/rec/conf/oopsla/CalderL92,The Object-Oriented Implementation of a Document Editor.
https://dblp.org/rec/conf/oopsla/CallCM87,CLAM - an Open System for Graphical User Interfaces.
https://dblp.org/rec/conf/oopsla/CameronBGHHS96,Perspectives on Reuse (Panel Session).
https://dblp.org/rec/conf/oopsla/CameronDNS07,Multiple ownership.
https://dblp.org/rec/conf/oopsla/CameronNW10,Tribal ownership.
https://dblp.org/rec/conf/oopsla/CanningCHO89,Interfaces for Strongly-Typed Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/Caplinger87,An Information System Based on Distributed Objects.
https://dblp.org/rec/conf/oopsla/CarbinMR13,Verifying quantitative reliability for programs that execute on unreliable hardware.
https://dblp.org/rec/conf/oopsla/CareyDKN94,A Status Report on the oo7 OODBMS Benchmarking Effort.
https://dblp.org/rec/conf/oopsla/Cargill86,Pi: A Case Study in Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/CartwrightS98,Compatible Genericity with Run-Time Types for the Java Programming Language.
https://dblp.org/rec/conf/oopsla/Caseau93,Efficient Handling of Multiple Inheritance Hierarchies.
https://dblp.org/rec/conf/oopsla/CastanosEINNOW12,On the benefits and pitfalls of extending a statically typed language JIT compiler for dynamic scripting languages.
https://dblp.org/rec/conf/oopsla/CaudillW86,A Third Generation Smalltalk-80 Implementation.
https://dblp.org/rec/conf/oopsla/CavazosO06,Method-specific dynamic compilation using logistic regression.
https://dblp.org/rec/conf/oopsla/CecchetMZ02,Performance and scalability of EJB applications.
https://dblp.org/rec/conf/oopsla/ChafiDMRSHOO10,Language virtualization for heterogeneous parallel computing.
https://dblp.org/rec/conf/oopsla/ChakrabartiBB14,Atlas: leveraging locks for non-volatile memory consistency.
https://dblp.org/rec/conf/oopsla/ChambersC99,Efficient Multiple and Predicated Dispatching.
https://dblp.org/rec/conf/oopsla/ChambersL94,Typechecking and Modules for Multi-Methods.
https://dblp.org/rec/conf/oopsla/ChambersU91,Making Pure Object-Oriented Languages Practical.
https://dblp.org/rec/conf/oopsla/ChambersUL89,An Efficient Implementation of SELF - a Dynamically-Typed Object-Oriented Language Based on Prototypes.
https://dblp.org/rec/conf/oopsla/ChampeauxACDLLH91,Formal Techniques for OO Software Development (Panel).
https://dblp.org/rec/conf/oopsla/ChampeauxAF92,Case Study of Object-Oriented Software Development.
https://dblp.org/rec/conf/oopsla/ChampeauxBBCJM92,The OO Software Development Process (Panel).
https://dblp.org/rec/conf/oopsla/ChampeauxBBKKT93,Strategies for Object-Oriented Technology Transfer (Panel).
https://dblp.org/rec/conf/oopsla/ChampeauxLF92,The Process of Object-Oriented Design.
https://dblp.org/rec/conf/oopsla/ChapmanHM16,Hybrid STM/HTM for nested transactions on OpenJDK.
https://dblp.org/rec/conf/oopsla/CharlesFSDV09,"Accelerating the creation of customized, language-Specific IDEs in Eclipse."
https://dblp.org/rec/conf/oopsla/CharlesGSDKEPS05,X10: an object-oriented approach to non-uniform cluster computing.
https://dblp.org/rec/conf/oopsla/ChaseLLB92,Lightweight Shared Objects in a 64-Bit Operating System.
https://dblp.org/rec/conf/oopsla/ChenKVIMW03,Heap compression for memory-constrained Java environments.
https://dblp.org/rec/conf/oopsla/ChenR07,Mop: an efficient and generic runtime verification framework.
https://dblp.org/rec/conf/oopsla/ChernV08,The impact of static-dynamic coupling on remodularization.
https://dblp.org/rec/conf/oopsla/Chiba95,A Metaobject Protocol for C++.
https://dblp.org/rec/conf/oopsla/ChibaIZ10,Mostly modular compilation of crosscutting concerns by contextual predicate dispatch.
https://dblp.org/rec/conf/oopsla/ChidamberK91,Towards a Metrics Suite for Object Oriented Design.
https://dblp.org/rec/conf/oopsla/ChinCKP06,A flow-based approach for variant parametric types.
https://dblp.org/rec/conf/oopsla/ChisholmCCHK96,Soft Issues in Software Development (Panel Session).
https://dblp.org/rec/conf/oopsla/ChoiGSSM99,Escape Analysis for Java.
https://dblp.org/rec/conf/oopsla/ChoiNS13,Guided GUI testing of android apps with minimal restart and approximate learning.
https://dblp.org/rec/conf/oopsla/ChongDKKQ13,Barrier invariants: a shared state abstraction for the analysis of data-dependent GPU kernels.
https://dblp.org/rec/conf/oopsla/ChughHJ12,Dependent types for JavaScript.
https://dblp.org/rec/conf/oopsla/Cinningham86,Architectural Support for Object-Oriented Programming - Panel.
https://dblp.org/rec/conf/oopsla/Civello93,Roles for Composite Objects in Object-Oriented Analysis and Design.
https://dblp.org/rec/conf/oopsla/ClarkeD02,"Ownership, encapsulation and the disjointness of type and effect."
https://dblp.org/rec/conf/oopsla/ClarkeHOT99,"Subject-Oriented Design: Towards Improved Alignment of Requirements, Design, and Code."
https://dblp.org/rec/conf/oopsla/ClarkePN98,Ownership Types for Flexible Alias Protection.
https://dblp.org/rec/conf/oopsla/ClarkeRN03,Saving the world from bad beans: deployment-time confinement checking.
https://dblp.org/rec/conf/oopsla/ClebschD13,Fully concurrent garbage collection of actors on many-core machines.
https://dblp.org/rec/conf/oopsla/CledatKP11,Efficiently speeding up sequential computation through the n-way programming model.
https://dblp.org/rec/conf/oopsla/CliftonLCM00,MultiJava: modular open classes and symmetric multiple dispatch for Java.
https://dblp.org/rec/conf/oopsla/ClydeEW92,Tunable Formalism in Object-Oriented Systems Analysis: Meeting the Needs of Both Theoreticians and Practitioners.
https://dblp.org/rec/conf/oopsla/CockburnF98,Question time! about Use Cases.
https://dblp.org/rec/conf/oopsla/CohenGM06,JTL: the Java tools language.
https://dblp.org/rec/conf/oopsla/CohenMLGCD94,Panel: Training Professionals in Object Technology.
https://dblp.org/rec/conf/oopsla/CohenP15,Automatic memory reclamation for lock-free data structures.
https://dblp.org/rec/conf/oopsla/CohenZSL12,Energy types.
https://dblp.org/rec/conf/oopsla/Cointe87,Metaclasses are First Class: the ObjVlisp Model.
https://dblp.org/rec/conf/oopsla/ColemanAORRW97,UML: The Language of Blueprints for Software? (Panel).
https://dblp.org/rec/conf/oopsla/ColinL16,Chain: tasks and channels for reliable intermittent programs.
https://dblp.org/rec/conf/oopsla/ConnorDMB89,An Object Addressing Mechanism for Statically Types Languages with Multiple Inheritance.
https://dblp.org/rec/conf/oopsla/ConstantineJPPW92,From Events to Objects: The Heresy of Event-Orientation in a World of Objects (Panel).
https://dblp.org/rec/conf/oopsla/Cook09,"On understanding data abstraction, revisited."
https://dblp.org/rec/conf/oopsla/Cook92,Interfaces and Specifications for the Smalltalk-80 Collection Classes.
https://dblp.org/rec/conf/oopsla/CookP89,A Denotational Semantics of Inheritance and its Correctness.
https://dblp.org/rec/conf/oopsla/CoonsMM13,Bounded partial-order reduction.
https://dblp.org/rec/conf/oopsla/CoplienHKRS97,Changing the Engine of the Car? While Driving 60 Miles an Hour! (Panel).
https://dblp.org/rec/conf/oopsla/CoppolaR93,Doing Business with Governments (Panel).
https://dblp.org/rec/conf/oopsla/CorwinBGM03,MJ: a rational module system for Java and its applications.
https://dblp.org/rec/conf/oopsla/CousotCLB12,An abstract interpretation framework for refactoring with application to extract methods with contracts.
https://dblp.org/rec/conf/oopsla/CoxDTSD86,User Interface Frameworks - Panel.
https://dblp.org/rec/conf/oopsla/CoxMEMP89,Panel: Object-Oriented Technologies and the Software Industrial Revolution - Necessary But Not Sufficient.
https://dblp.org/rec/conf/oopsla/CoxS87,Producer: A Tool for Translating Smalltalk-80 to Objective-C.
https://dblp.org/rec/conf/oopsla/CrafaP15,The chemical approach to typestate-oriented programming.
https://dblp.org/rec/conf/oopsla/CuneiV05,PolyD: a flexible dispatching framework.
https://dblp.org/rec/conf/oopsla/CunninghamB86,A Diagram for Object-Oriented Programs.
https://dblp.org/rec/conf/oopsla/Czajkowski00,Application isolation in the JavaTM Virtual Machine.
https://dblp.org/rec/conf/oopsla/CzajkowskiD01,Multitasking without Compromise: A Virtual Machine Evolution.
https://dblp.org/rec/conf/oopsla/CzajkowskiE98,JRes: A Resource Accounting Interface for Java.
https://dblp.org/rec/conf/oopsla/DagenaisH08,Enabling static analysis for partial java programs.
https://dblp.org/rec/conf/oopsla/DalozeMBM16,Efficient and thread-safe objects for dynamically-typed languages.
https://dblp.org/rec/conf/oopsla/DanforthF94,Reflections on Metaclass Rorgramming in SOM.
https://dblp.org/rec/conf/oopsla/DanLHV16,Modeling and analysis of remote memory access programming.
https://dblp.org/rec/conf/oopsla/DaraisMH15,Galois transformers and modular abstract interpreters: reusable metatheory for program analysis.
https://dblp.org/rec/conf/oopsla/DargaB06,Efficient software model checking of data structure properties.
https://dblp.org/rec/conf/oopsla/DarulovaK11,Trustworthy numerical computation in Scala.
https://dblp.org/rec/conf/oopsla/Dasgupta86,A Probe-Based Monitoring Scheme for an Object-Oriented Distributed Operating System.
https://dblp.org/rec/conf/oopsla/DattaSS12,Talk versus work: characteristics of developer collaboration on the jazz platform.
https://dblp.org/rec/conf/oopsla/DavidC11,Immutable specifications for more concise and precise verification.
https://dblp.org/rec/conf/oopsla/DavidTLM14,Continuously measuring critical section pressure with the free-lunch profiler.
https://dblp.org/rec/conf/oopsla/DavisK10,Registration-based language abstractions.
https://dblp.org/rec/conf/oopsla/DayGLM95,Subtypes vs. Where Clauses: Constraining Parametric Polymorphism.
https://dblp.org/rec/conf/oopsla/DeanDGLC96,Vortex: An Optimizing Compiler for Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/Decouchant86,Design of a Distributed Object Manager for the Smalltalk-80 System.
https://dblp.org/rec/conf/oopsla/DekelH07,Notation and representation in collaborative object-oriented design: an observational study.
https://dblp.org/rec/conf/oopsla/DelawareCB11,Product lines of theorems.
https://dblp.org/rec/conf/oopsla/DEliaD13,Ball-Larus path profiling across multiple loop iterations.
https://dblp.org/rec/conf/oopsla/DeLozierENOMZ13,Ironclad C++: a library-augmented type-safe subset of c++.
https://dblp.org/rec/conf/oopsla/DemetrescuFR11,Reactive imperative programming with dataflow constraints.
https://dblp.org/rec/conf/oopsla/DemeyerDN00,Finding refactorings via change metrics.
https://dblp.org/rec/conf/oopsla/DemskyL15,SATCheck: SAT-directed stateless model checking for SC and TSO.
https://dblp.org/rec/conf/oopsla/DemskyR03,Automatic detection and repair of errors in data structures.
https://dblp.org/rec/conf/oopsla/DeNataleBCTT92,The Role of Methods and CASE in OO Development (Panel).
https://dblp.org/rec/conf/oopsla/Deng0L13,Efficient concurrency-bug detection across inputs.
https://dblp.org/rec/conf/oopsla/Desai0M14,Natural proofs for asynchronous programs using almost-synchronous reductions.
https://dblp.org/rec/conf/oopsla/DickyDHL96,On Automatic Class Insertion with Overloading.
https://dblp.org/rec/conf/oopsla/DiederichM87,An Object-Oriented Design System Shell.
https://dblp.org/rec/conf/oopsla/DietrichHS15,Giga-scale exhaustive points-to analysis for Java in under a minute.
https://dblp.org/rec/conf/oopsla/DietrichNG89,Saving a Legacy With Objects.
https://dblp.org/rec/conf/oopsla/DilligDA10,Symbolic heap abstraction with demand-driven axiomatization of memory invariants.
https://dblp.org/rec/conf/oopsla/DilligDLM13,Inductive invariant generation via abductive inference.
https://dblp.org/rec/conf/oopsla/DiLorenzoZMFF16,Incremental forest: a DSL for efficiently managing filestores.
https://dblp.org/rec/conf/oopsla/DimoulasFF13,Option contracts.
https://dblp.org/rec/conf/oopsla/DincklageD04,Converting Java classes to use generics.
https://dblp.org/rec/conf/oopsla/DincklageD09,Optimizing programs with intended semantics.
https://dblp.org/rec/conf/oopsla/DistefanoP08,jStar: towards practical verification for java.
https://dblp.org/rec/conf/oopsla/DiwanMM96,Simple and Effective Analysis of Statically Typed Object-Oriented Programs.
https://dblp.org/rec/conf/oopsla/DixonMSV89,A Fast Method Dispatcher for Compiled Languages with Multiple Inheritance.
https://dblp.org/rec/conf/oopsla/Dmitriev02,Language-specific make technology for the Java programming language.
https://dblp.org/rec/conf/oopsla/DoeraeneS16,Parallel incremental whole-program optimizations for Scala.js.
https://dblp.org/rec/conf/oopsla/DohertyHR11,Kind analysis for MATLAB.
https://dblp.org/rec/conf/oopsla/DolbyC98,An Evaluation of Automatic Object Inline Allocation Techniques.
https://dblp.org/rec/conf/oopsla/DonovanKTE04,Converting java programs to use generic libraries.
https://dblp.org/rec/conf/oopsla/DonyMC92,Prototype-Based Languages: From a New Taxonomy to Constructive Proposals and Their Validation.
https://dblp.org/rec/conf/oopsla/DoorenS05,Combining the robustness of checked exceptions with the flexibility of unchecked exceptions using anchored exception declarations.
https://dblp.org/rec/conf/oopsla/DrechslerSMM14,Distributed REScala: an update algorithm for distributed reactive programming.
https://dblp.org/rec/conf/oopsla/Driesen93,Selector Table Indexing & Sparse Arrays.
https://dblp.org/rec/conf/oopsla/DriesenH95,Minimizing Row Displacement Dispatch Tables.
https://dblp.org/rec/conf/oopsla/DriesenH96,The Direct Cost of Virtual Function Calls in C++.
https://dblp.org/rec/conf/oopsla/DrossopoulouWE98,What is Java Binary Compatibility?
https://dblp.org/rec/conf/oopsla/DubrauH12,Taming MATLAB.
https://dblp.org/rec/conf/oopsla/DucasseBP95,A Reflective Model for First Class Dependencies.
https://dblp.org/rec/conf/oopsla/DucasseWBN07,User-changeable visibility: resolving unanticipated name clashes in traits.
https://dblp.org/rec/conf/oopsla/DucournauHHM92,Monotonic Conflict Resolution Mechanisms for Inheritance.
https://dblp.org/rec/conf/oopsla/DucournauHHM94,Proposal for a Monotonic Multiple Inheritance Linearization.
https://dblp.org/rec/conf/oopsla/DucournauMP09,Empirical assessment of object-oriented implementations with multiple inheritance and static typing.
https://dblp.org/rec/conf/oopsla/DufourDHV03,Dynamic metrics for java.
https://dblp.org/rec/conf/oopsla/DufourGHMSV04,Measuring the dynamic behaviour of AspectJ programs.
https://dblp.org/rec/conf/oopsla/Duggan99,Modular Type-Based Reverse Engineering of Parameterized Types in Java Code.
https://dblp.org/rec/conf/oopsla/DugganT01,Modular Mixin-Based Inheritance for Application Frameworks.
https://dblp.org/rec/conf/oopsla/DuhlD88,A Performance Comparison of Object and Relational Databases Using the Sun Benchmark.
https://dblp.org/rec/conf/oopsla/DumitrasNT10,To upgrade or not to upgrade: impact of online upgrades across multiple administrative domains.
https://dblp.org/rec/conf/oopsla/DurhamJ96,A Framework for Run-Time Systems and its Visual Programming Language.
https://dblp.org/rec/conf/oopsla/Dussud89,TICLOS: An Implementation of CLOS for the Explorer Family.
https://dblp.org/rec/conf/oopsla/DutoitLCP96,The Basic Object System: Supporting a Spectrum From Prototypes To Hardened Code.
https://dblp.org/rec/conf/oopsla/DysonMWJ89,Objects in their Eyes (Panel).
https://dblp.org/rec/conf/oopsla/EcklundDF96,Change Cases: Use Cases that Identify Future Requirements.
https://dblp.org/rec/conf/oopsla/Edwards05,Subtext: uncovering the simplicity of programming.
https://dblp.org/rec/conf/oopsla/Edwards07,"No ifs, ands, or buts: uncovering the simplicity of conditionals."
https://dblp.org/rec/conf/oopsla/EeckhoutGB03,How java programs interact with virtual machines at the microarchitectural level.
https://dblp.org/rec/conf/oopsla/Effinger-DeanLCGB12,IFRit: interference-free regions for dynamic data-race detection.
https://dblp.org/rec/conf/oopsla/EggenschwilerG92,ET++ Swaps Manager: Using Object Technology in the Financial Engineering Domain.
https://dblp.org/rec/conf/oopsla/EifrigST95,Sound Polymorphic Type Inference for Objects.
https://dblp.org/rec/conf/oopsla/EifrigSTZ94,"Application of OOP Type Theory: State, Decidability, Integragtion."
https://dblp.org/rec/conf/oopsla/EkmanH07,The jastadd extensible java compiler.
https://dblp.org/rec/conf/oopsla/ElkarabliehKVM07,Starc: static analysis for efficient repair of complex data.
https://dblp.org/rec/conf/oopsla/EpsteinL88,A Smalltalk Window System Based on Constraints.
https://dblp.org/rec/conf/oopsla/ErdwegBKKM15,A co-contextual formulation of type rules and its application to incremental type checking.
https://dblp.org/rec/conf/oopsla/ErdwegLW15,A sound and optimal incremental build system with dynamic dependencies.
https://dblp.org/rec/conf/oopsla/ErdwegRKO11,SugarJ: library-based syntactic language extensibility.
https://dblp.org/rec/conf/oopsla/Eugster06,Uniform proxies for Java.
https://dblp.org/rec/conf/oopsla/EugsterGD01,On Objects and Events.
https://dblp.org/rec/conf/oopsla/EvansD99,"Zones, Contracts and Absorbing Changes: An Approach to Software Evolution."
https://dblp.org/rec/conf/oopsla/Ewing86,An Object-Oriented Operating System Interface.
https://dblp.org/rec/conf/oopsla/FactorSS04,Instrumentation of standard libraries in object-oriented languages: the twin class hierarchy approach.
https://dblp.org/rec/conf/oopsla/FahndrichL03,Declaring and checking non-null types in an object-oriented language.
https://dblp.org/rec/conf/oopsla/FahndrichX07,Establishing object invariants with delayed types.
https://dblp.org/rec/conf/oopsla/FairbanksGS06,Design fragments make using frameworks easier.
https://dblp.org/rec/conf/oopsla/FeeleyL92,Distributed Shared Memory with Versioned Objects.
https://dblp.org/rec/conf/oopsla/FeldthausM13,Semi-automatic rename refactoring for JavaScript.
https://dblp.org/rec/conf/oopsla/FeldthausM14,Checking correctness of TypeScript interfaces for JavaScript libraries.
https://dblp.org/rec/conf/oopsla/FeldthausMMST11,Tool-supported refactoring for JavaScript.
https://dblp.org/rec/conf/oopsla/FelgentreffMBH15,Checks and balances: constraint solving without surprises in object-constraint programming languages.
https://dblp.org/rec/conf/oopsla/FengWDL15,EXPLORER : query- and demand-driven exploration of interprocedural control flow properties.
https://dblp.org/rec/conf/oopsla/FentonB89,Playground: An Object-Oriented Simulation System With Agent Rules for Children of All Ages.
https://dblp.org/rec/conf/oopsla/Ferber89,Computational Reflection in Class-Based Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/FerraraLF08,Safer unsafe code for .NET.
https://dblp.org/rec/conf/oopsla/FerrelM89,Vamp: The Aldus Application Framework.
https://dblp.org/rec/conf/oopsla/Filman87,Retrofitting Objects.
https://dblp.org/rec/conf/oopsla/FindlerF01,Contract Soundness for Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/FleissnerB07,Epi-aspects: aspect-oriented conscientious software.
https://dblp.org/rec/conf/oopsla/Fong04,Pluggable verification modules: an extensible protection mechanism for the JVM.
https://dblp.org/rec/conf/oopsla/FooteJ89,Reflective Facilities in Smalltalk-80.
https://dblp.org/rec/conf/oopsla/FormanCDR95,Release-to-Release Binary Compatibility in SOM.
https://dblp.org/rec/conf/oopsla/FormanDM94,Composition of Before/After Metaclasses in SOM.
https://dblp.org/rec/conf/oopsla/Forrest10,The case for evolvable software.
https://dblp.org/rec/conf/oopsla/France99,A Problem-Oriented Analysis of Basic UML Static Requirements Modeling Concepts.
https://dblp.org/rec/conf/oopsla/FranklinZ97,A Framework for Scalbale Dissemination-Based Systems.
https://dblp.org/rec/conf/oopsla/FraserBBCCHR94,How Do Teams Shape Objects ? - How Di Object Shape Teams ? (Panel).
https://dblp.org/rec/conf/oopsla/FraserBBCJKR95,Patterns: Cult to Culture? - Panel Session.
https://dblp.org/rec/conf/oopsla/FraserbBCJO97,Beyond the Hype: Do Patterns and Frameworks Reduce Discovery Costs? (Panel).
https://dblp.org/rec/conf/oopsla/FraserCBCCW96,OO Anthropology: Crossing the Chasm (Panel Session).
https://dblp.org/rec/conf/oopsla/FraserDGHHJO98,Software Reuse: Nemesis or Nirvana? (Panel).
https://dblp.org/rec/conf/oopsla/FraserMMLBGFSL96,Translation: Myth or Reality? (Panel Session).
https://dblp.org/rec/conf/oopsla/Freburger87,RAPID: Prototyping Control Panel Interfaces.
https://dblp.org/rec/conf/oopsla/Freeman-Benson89,A Module Mechanism for Constraints in Smalltalk.
https://dblp.org/rec/conf/oopsla/FreundM98,A Type System for Object Initialization in the Java Bytecode Language.
https://dblp.org/rec/conf/oopsla/FreundM99,A Formal Framework for the Java Bytecode Language and Verifier.
https://dblp.org/rec/conf/oopsla/FuBS15,Automated backward error analysis for numerical code.
https://dblp.org/rec/conf/oopsla/FukunagaH86,An Experience with a Prolog-based Object-Oriented Language.
https://dblp.org/rec/conf/oopsla/FurrAF09,Profile-guided static typing for dynamic scripting languages.
https://dblp.org/rec/conf/oopsla/GabelYYGS10,Scalable and systematic detection of buggy inconsistencies in source code.
https://dblp.org/rec/conf/oopsla/Gabriel08,Designed as designer.
https://dblp.org/rec/conf/oopsla/GabrielG06,Conscientious software.
https://dblp.org/rec/conf/oopsla/GabrielS10,Better science through art.
https://dblp.org/rec/conf/oopsla/GarciaJLSW03,A comparative study of language support for generic programming.
https://dblp.org/rec/conf/oopsla/GarrettS86,Building a Timeline Editor from Prefab Parts: The Architecture of an Object-Oriented Application.
https://dblp.org/rec/conf/oopsla/GasiunasMO07,Dependent classes.
https://dblp.org/rec/conf/oopsla/GeorgesBE07,Statistically rigorous java performance evaluation.
https://dblp.org/rec/conf/oopsla/GeorgesBEB04,Method-level phase behavior in java workloads.
https://dblp.org/rec/conf/oopsla/GeorgesEB08,Java performance evaluation through rigorous replay compilation.
https://dblp.org/rec/conf/oopsla/GerakiosBS13,Forsaking inheritance: supercharged delegation in DelphJ.
https://dblp.org/rec/conf/oopsla/Ghelli91,A Static Type System for Message Passing.
https://dblp.org/rec/conf/oopsla/GianantonioHL98,A Lambda Calculus of Objects with Self-Inflicted Extension.
https://dblp.org/rec/conf/oopsla/Gibbs91,Composite Multimedia and Active Objects.
https://dblp.org/rec/conf/oopsla/GilL96,Environmental Acquisition - A New Inheritance-Like Abstraction Mechanism.
https://dblp.org/rec/conf/oopsla/GilM05,Micro patterns in Java code.
https://dblp.org/rec/conf/oopsla/GilM08,Whiteoak: introducing structural typing into java.
https://dblp.org/rec/conf/oopsla/Glew00,An efficient class and object encoding.
https://dblp.org/rec/conf/oopsla/GligoricSPVNL14,Automated migration of build scripts using dynamic analysis and search-based refactoring.
https://dblp.org/rec/conf/oopsla/GodinM93,Building and Maintaining Analysis-Level Class Hierarchies Using Galois Lattices.
https://dblp.org/rec/conf/oopsla/Golan-GuetaBARSY11,Automatic fine-grain locking using shape properties.
https://dblp.org/rec/conf/oopsla/GoldbergFF04,Super and inner: together at last!
https://dblp.org/rec/conf/oopsla/GoldR91,Portia: AN Instance-Centered Environment for Smalltalk.
https://dblp.org/rec/conf/oopsla/GoldsmithOA05,Relational queries over program traces.
https://dblp.org/rec/conf/oopsla/GollamudiC16,Automatic enforcement of expressive security policies using enclaves.
https://dblp.org/rec/conf/oopsla/GopinathanR08,Enforcing object protocols by combining static and runtime analysis.
https://dblp.org/rec/conf/oopsla/GordonPPBD12,Uniqueness and reference immutability for safe parallelism.
https://dblp.org/rec/conf/oopsla/GossainBGLPS95,Objects and Domain Engineering - Panel Session.
https://dblp.org/rec/conf/oopsla/Graube89,Metaclass Compatibility.
https://dblp.org/rec/conf/oopsla/GrayFF05,Fine-grained interoperability through mirrors and contracts.
https://dblp.org/rec/conf/oopsla/GreenfieldboyceF07,Type qualifier inference for java.
https://dblp.org/rec/conf/oopsla/GregorJSSRL06,Concepts: linguistic support for generic programming in C++.
https://dblp.org/rec/conf/oopsla/GregorL05,Lifting sequential graph algorithms for distributed-memory parallel computation.
https://dblp.org/rec/conf/oopsla/GrimshawL87,Mentat: An Object-Oriented Macro Data Flow System.
https://dblp.org/rec/conf/oopsla/GrissABCG91,The Economics of Software Reuse (Panel).
https://dblp.org/rec/conf/oopsla/GrissBHJLT95,Systematic Software Reuse - Panel Session.
https://dblp.org/rec/conf/oopsla/GronbaekM94,Building Tailorable Hypermedia Systems: The Embedded-Interpreter Approach.
https://dblp.org/rec/conf/oopsla/Grossman07,The transactional memory / garbage collection analogy.
https://dblp.org/rec/conf/oopsla/GrossmanE87,Logical Composition of Object-Oriented Interfaces.
https://dblp.org/rec/conf/oopsla/GrothoffPV01,Encapsulating Objects with Confined Types.
https://dblp.org/rec/conf/oopsla/GroveDDC97,Call Graph Construction in Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/GroveDGC95,Profile-Guided Receiver Class Prediction.
https://dblp.org/rec/conf/oopsla/GuBSS12,Reusing debugging knowledge via trace-based bug search.
https://dblp.org/rec/conf/oopsla/GueheneucA04,Recovering binary class relationships: putting icing on the UML cake.
https://dblp.org/rec/conf/oopsla/GuerraouiFGM98,System Support for Object Groups.
https://dblp.org/rec/conf/oopsla/Guimaraes91,Building Generic User Interface Tools: an Experience with Multiple Inheritance.
https://dblp.org/rec/conf/oopsla/Gutfreund87,ManiplIcons in ThinkerToy.
https://dblp.org/rec/conf/oopsla/GuyerM04,Finding your cronies: static analysis for dynamic object colocation.
https://dblp.org/rec/conf/oopsla/GveroK15,Synthesizing Java expressions from free-form queries.
https://dblp.org/rec/conf/oopsla/HaABM09,A concurrent dynamic analysis framework for multicore hardware.
https://dblp.org/rec/conf/oopsla/HagimontCFKLMP94,Persistent Shared Object Support in the Guide System: Evaluation & Related Work.
https://dblp.org/rec/conf/oopsla/HagueLO15,Detecting redundant CSS rules in HTML5 applications: a tree rewriting approach.
https://dblp.org/rec/conf/oopsla/Haines97,An Open Implementation Analysis and Design for Lightweight Threads.
https://dblp.org/rec/conf/oopsla/HainesMR95,SmartFiles: An OO Approach to Data File Interoperabilty.
https://dblp.org/rec/conf/oopsla/HallerL16,LaCasa: lightweight affinity and object capabilities in Scala.
https://dblp.org/rec/conf/oopsla/HammerDHLFHH15,Incremental computation with names.
https://dblp.org/rec/conf/oopsla/HammerNCA11,Self-adjusting stack machines.
https://dblp.org/rec/conf/oopsla/HanappiHD16,Asserting reliable convergence for configuration management scripts.
https://dblp.org/rec/conf/oopsla/Hanenberg10,An experiment about static and dynamic type systems: doubts about the positive impact of static type systems on development time.
https://dblp.org/rec/conf/oopsla/Hanenberg10a,"Faith, hope, and love: an essay on software science's neglect of human factors."
https://dblp.org/rec/conf/oopsla/HannemannK02,Design pattern implementation in Java and aspectJ.
https://dblp.org/rec/conf/oopsla/HansonHR91,Experiences in DBMS Implementation Using an Object-Oriented Persistent Programming Language and a Database Toolkit.
https://dblp.org/rec/conf/oopsla/HarrisAIM11,AC: composable asynchronous IO for native languages.
https://dblp.org/rec/conf/oopsla/HarrisF03,Language support for lightweight transactions.
https://dblp.org/rec/conf/oopsla/HarrisonBR00,Mapping UML designs to Java.
https://dblp.org/rec/conf/oopsla/HarrisonLS97,The Design and Performance of a Hard Real-Time Object Event Service.
https://dblp.org/rec/conf/oopsla/HarrisonO93,Subject-Oriented Programming (A Critique of Pure Objects).
https://dblp.org/rec/conf/oopsla/HarrisonSS89,"Good News, Bad News: Experience Building a Software Development Environment Using the Object-Oriented Paradigm."
https://dblp.org/rec/conf/oopsla/HarrisS98,Lightweight Object-Oriented Shared Variables for Distributed Applications on the Internet.
https://dblp.org/rec/conf/oopsla/HarroldJLLOPSSG01,Regression Test Selection for Java Software.
https://dblp.org/rec/conf/oopsla/HassenAB96,A Flexible Operation Execution Model for Shared Distributed Objects.
https://dblp.org/rec/conf/oopsla/Hauck93,Inheritance Modeled with Explicit Bindings: An Approach to Typed Inheritance.
https://dblp.org/rec/conf/oopsla/HauswirthDSM05,Automating vertical profiling.
https://dblp.org/rec/conf/oopsla/HauswirthSDH04,Vertical profiling: understanding the behavior of object-priented applications.
https://dblp.org/rec/conf/oopsla/HaydenSDHF12,"Kitsune: efficient, general-purpose dynamic software updating for C."
https://dblp.org/rec/conf/oopsla/Hayes91,Using Key Object Opportunism to Collect Old Objects.
https://dblp.org/rec/conf/oopsla/Hayes97,Ephemerons: A New Finalization Mechanism.
https://dblp.org/rec/conf/oopsla/HayesC91,Coherent Models for Object-Oriented Analysis.
https://dblp.org/rec/conf/oopsla/Helm95,Patterns in Practice.
https://dblp.org/rec/conf/oopsla/HelmM91,Integrating Information Retrieval and Domain Specific Approaches for Browsing and Retrieval in Object-Oriented Class Libraries.
https://dblp.org/rec/conf/oopsla/HemelV11,Declaratively programming the mobile web with Mobl.
https://dblp.org/rec/conf/oopsla/HerhutHSS13,River trail: a path to parallelism in JavaScript.
https://dblp.org/rec/conf/oopsla/HerlihyLM06,A flexible framework for implementing software transactional memory.
https://dblp.org/rec/conf/oopsla/HerrmannM00,PIROL: a case study for multidimensional separation of concerns in software engineering environments.
https://dblp.org/rec/conf/oopsla/HertzB05,Quantifying the performance of garbage collection vs. explicit memory management.
https://dblp.org/rec/conf/oopsla/HerzeelC10,Dynamic parallelization of recursive code: part 1: managing control flow interactions with the continuator.
https://dblp.org/rec/conf/oopsla/HeuserDMRW94,Development of Distributed and Client/Server Object-Oriented Applications: Industry Solutions (Panel).
https://dblp.org/rec/conf/oopsla/HillAGKST97,The OT Life-cycle: From Eureka! to Shrink Wrap (Panel).
https://dblp.org/rec/conf/oopsla/HillRDBCJ95,Managing Object Oriented Projects - Panel Session.
https://dblp.org/rec/conf/oopsla/HirzelDH03,Connectivity-based garbage collection.
https://dblp.org/rec/conf/oopsla/HirzelG07,Jeannie: granting java native interface developers their wishes.
https://dblp.org/rec/conf/oopsla/HodaKNM10,Agility in context.
https://dblp.org/rec/conf/oopsla/HoffmanME11,Ribbons: a partially shared memory programming model.
https://dblp.org/rec/conf/oopsla/Hogg91,Islands: Aliasing Protection in Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/HoggW87,OTM: Applying Objects to Tasks.
https://dblp.org/rec/conf/oopsla/HolkNSL14,Region-based memory management for GPU programming languages: enabling rich data structures on a spartan host.
https://dblp.org/rec/conf/oopsla/HoltBCO14,Alembic: automatic locality extraction via migration.
https://dblp.org/rec/conf/oopsla/HolzleU94,A Third-Generation SELF Implementation: Reconsiling Responsiveness with Performance.
https://dblp.org/rec/conf/oopsla/HoppeH13,Do developers benefit from generic types?: an empirical comparison of generic and raw types in java.
https://dblp.org/rec/conf/oopsla/Horn92,Constraint Patterns As a Basis for Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/HoskingC99,Mostly-copying Reachability-based Orthogonal Persistence.
https://dblp.org/rec/conf/oopsla/HoskingM93,Object Fault Handling for Persistent Programming Languages: A Performance Evaluation.
https://dblp.org/rec/conf/oopsla/HoskingMS92,A Comparative Performance Evaluation of Write Barrier Implementations.
https://dblp.org/rec/conf/oopsla/HottelierB15,Synthesis of layout engines from relational constraints.
https://dblp.org/rec/conf/oopsla/HoydalsvikS93,On the Purpose of Object-Oriented Analysis.
https://dblp.org/rec/conf/oopsla/HsiaoCN14,Using web corpus statistics for program analysis.
https://dblp.org/rec/conf/oopsla/HuAN15,Versatile yet lightweight record-and-replay for Android.
https://dblp.org/rec/conf/oopsla/Huang016,Maximal causality reduction for TSO and PSO.
https://dblp.org/rec/conf/oopsla/HuangB13,Efficient context sensitivity for dynamic analyses via calling context uptrees and customized memory management.
https://dblp.org/rec/conf/oopsla/HuangBMMWC04,The garbage collection advantage: improving program locality.
https://dblp.org/rec/conf/oopsla/HuangMDE12,Reim & ReImInfer: checking and inference of reference immutability and method purity.
https://dblp.org/rec/conf/oopsla/HuangR16,Precise and maximal race detection from incomplete traces.
https://dblp.org/rec/conf/oopsla/HuangZ12,LEAN: simplifying concurrency bug reproduction via replay-supported execution reduction.
https://dblp.org/rec/conf/oopsla/HuangZ12a,Execution privatization for scheduler-oblivious concurrent programs.
https://dblp.org/rec/conf/oopsla/HudsonMMM97,Garbage Collecting the World: One Car at a Time.
https://dblp.org/rec/conf/oopsla/HuniJE95,A Framework for Network Protocol Software.
https://dblp.org/rec/conf/oopsla/Hutchins06,Eliminating distinctions of class: using prototypes to model virtual classes.
https://dblp.org/rec/conf/oopsla/IbrahimBHPSS91,OOP and AI (Panel).
https://dblp.org/rec/conf/oopsla/IgarashiPW99,Featherwieght Java: A Minimal Core Calculus for Java and GJ.
https://dblp.org/rec/conf/oopsla/IgarashiV07,Variant path types for scalable extensibility.
https://dblp.org/rec/conf/oopsla/ImamS12,Integrating task parallelism with actors.
https://dblp.org/rec/conf/oopsla/ImNGP11,A syntactic type system for recursive modules.
https://dblp.org/rec/conf/oopsla/InaI11,Gradual typing for generics.
https://dblp.org/rec/conf/oopsla/Ingalls86,A Simple Technique for Handling Multiple Polymorphism.
https://dblp.org/rec/conf/oopsla/IngallsKMWK97,Back to the Future: The Story of Squeak - A Usable Smalltalk Written in Itself.
https://dblp.org/rec/conf/oopsla/IngallsWCLD88,Fabrik: A Visual Programming Environment.
https://dblp.org/rec/conf/oopsla/InoueHWN12,Adaptive multi-level compilation in a trace-based Java JIT compiler.
https://dblp.org/rec/conf/oopsla/InoueN09,How a Java VM can get more from a hardware performance monitor.
https://dblp.org/rec/conf/oopsla/Ishikawa92,Communication Mechanism on Autonomous Objects.
https://dblp.org/rec/conf/oopsla/IshikawaT86,A Concurrent Object-Oriented Knowledge Representation Language Orient84/K: Its Features and Implementation.
https://dblp.org/rec/conf/oopsla/IshizakiKYKN00,A study of devirtualization techniques for a JavaTM Just-In-Time compiler.
https://dblp.org/rec/conf/oopsla/IshizakiTKSGIKOKYOOKN03,Effectiveness of cross-platform optimizations for a java just-in-time compiler.
https://dblp.org/rec/conf/oopsla/IsmailH99,A Performance Evaluation of the Mobile Agent Paradigm.
https://dblp.org/rec/conf/oopsla/ItohYT95,SCONE: Using Concurrent Objects for Low-level Operating System Programming.
https://dblp.org/rec/conf/oopsla/Itzhaky0SYLLC16,Deriving divide-and-conquer dynamic programming algorithms using solver-aided transformations.
https://dblp.org/rec/conf/oopsla/ItzhakyGIS10,A simple inductive synthesis methodology and its applications.
https://dblp.org/rec/conf/oopsla/JackyK86,An Object-Oriented Approach to a Large Scientific Application.
https://dblp.org/rec/conf/oopsla/JacobsBHB98,Reasoning about Java Classes (Preliminary Report).
https://dblp.org/rec/conf/oopsla/Jacobson86,Language Support for Changeable Large Real Time Systems.
https://dblp.org/rec/conf/oopsla/Jacobson87,Object Oriented Development in an Industrial Environment.
https://dblp.org/rec/conf/oopsla/JacobsonL91,Re-engineering of Old Systems to an Object-Oriented Database.
https://dblp.org/rec/conf/oopsla/JantzRKD15,Cross-layer memory management for managed language applications.
https://dblp.org/rec/conf/oopsla/JarviWL05,Associated types and constraint propagation for mainstream object-oriented generics.
https://dblp.org/rec/conf/oopsla/JensenMRDV15,Stateless model checking of event-driven applications.
https://dblp.org/rec/conf/oopsla/JeonGLT11,Kismet: parallel speedup estimates for serial programs.
https://dblp.org/rec/conf/oopsla/Jerrell89,Function Minimization and Automatic Differentiation Using C++.
https://dblp.org/rec/conf/oopsla/JinTLL10,Instrumentation and sampling strategies for cooperative concurrency bug isolation.
https://dblp.org/rec/conf/oopsla/Johnson86,Type-Checking Smalltalk.
https://dblp.org/rec/conf/oopsla/Johnson92,Documenting Frameworks using Patterns.
https://dblp.org/rec/conf/oopsla/JohnsonBBCGW93,How to Get a Paper Accepted at OOPSLA (Panel).
https://dblp.org/rec/conf/oopsla/JohnsonGZ88,TS: An Optimizing Compiler for Smalltalk.
https://dblp.org/rec/conf/oopsla/JoK11,Enhancing locality for recursive traversals of recursive structures.
https://dblp.org/rec/conf/oopsla/JoK12,Automatically enhancing locality for tree traversals with traversal splicing.
https://dblp.org/rec/conf/oopsla/JonesR86,Mach and Matchmaker: Kernel and Language Support for Object-Oriented Distributed Systems.
https://dblp.org/rec/conf/oopsla/JonnalageddaCSRO14,Staged parser combinators for efficient data processing.
https://dblp.org/rec/conf/oopsla/JordanSW94,Streamlining the Project Cycle With Object-Oriented Requirements.
https://dblp.org/rec/conf/oopsla/JoshiGS11,PREFAIL: a programmable tool for multiple-failure injection.
https://dblp.org/rec/conf/oopsla/JovicAH11,Catch me if you can: performance bug detection in the wild.
https://dblp.org/rec/conf/oopsla/Kaehler86,Virtual Memory on a Narrow Machine for an Object-Oriented Language.
https://dblp.org/rec/conf/oopsla/KahnTMB86,Objects in Concurrent Logic Programming Languages.
https://dblp.org/rec/conf/oopsla/KaiserG87,MELDing Data Flow and Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/KaleK93,CHARM++: A Portable Concurrent Object Oriented System Based On C++.
https://dblp.org/rec/conf/oopsla/KaliberaMJV12,A black-box approach to understanding concurrency in DaCapo.
https://dblp.org/rec/conf/oopsla/KambadurK14,An experimental survey of energy management across the stack.
https://dblp.org/rec/conf/oopsla/KangR12,Formal specification of a JavaScript module system.
https://dblp.org/rec/conf/oopsla/KansalSBMMZ13,"The latency, accuracy, and battery (LAB) abstraction: programmer productivity and energy efficiency for continuous mobile context sensing."
https://dblp.org/rec/conf/oopsla/KapurCW10,Refactoring references for library migration.
https://dblp.org/rec/conf/oopsla/KarpovichGF94,Extensible File Systems (ELFS): An Object-Oriented Approach to High Performance File I/O.
https://dblp.org/rec/conf/oopsla/KastnerGREOB11,Variability-aware parsing in the presence of lexical macros and conditional compilation.
https://dblp.org/rec/conf/oopsla/KastnerOE12,A variability-aware module system.
https://dblp.org/rec/conf/oopsla/KatsBV08,Mixing source and bytecode: a case for compilation by normalization.
https://dblp.org/rec/conf/oopsla/KatsJNV09,Providing rapid feedback in generated modular language environments: adding error recovery to scannerless generalized-LR parsing.
https://dblp.org/rec/conf/oopsla/KatsV10,The spoofax language workbench: rules for declarative specification of languages and IDEs.
https://dblp.org/rec/conf/oopsla/KatsVV11,Integrated language definition testing: enabling test-driven language development.
https://dblp.org/rec/conf/oopsla/KatsVW10,Pure and declarative syntax definition: paradise lost and regained.
https://dblp.org/rec/conf/oopsla/KawachiyaKO02,Lock reservation: Java locks can mostly do without atomic operations.
https://dblp.org/rec/conf/oopsla/KawachiyaOO08,Analysis and reduction of memory inefficiencies in Java strings.
https://dblp.org/rec/conf/oopsla/Keefe93,Reconciling Objects and Multilevel Security (Panel).
https://dblp.org/rec/conf/oopsla/Kell10,Component adaptation and assembly using interface relations.
https://dblp.org/rec/conf/oopsla/Kell16,Dynamically diagnosing type errors in unsafe code.
https://dblp.org/rec/conf/oopsla/KellMS16,"The missing link: explaining ELF static linking, semantically."
https://dblp.org/rec/conf/oopsla/KeLZBJD11,Safe parallel programming using dynamic dependence hints.
https://dblp.org/rec/conf/oopsla/KempfHDS87,Experience with CommonLoops.
https://dblp.org/rec/conf/oopsla/KempfS87,Teaching Object-Oriented Programming with the KEE System.
https://dblp.org/rec/conf/oopsla/Kendall99,Role Model Designs and Implementations with Aspect-oriented Programming.
https://dblp.org/rec/conf/oopsla/KennedyR05,Generalized algebraic data types and object-oriented programming.
https://dblp.org/rec/conf/oopsla/Kent97,Constraint Diagrams: Visualizing Assertions in Object-Oriented Models.
https://dblp.org/rec/conf/oopsla/KerrP87,Use of Object-Oriented Programming in a Time Series Analysis System.
https://dblp.org/rec/conf/oopsla/KerstenM99,Atlas: A Case Study in Building a Web-Based Learning Environment using Aspect-oriented Programming.
https://dblp.org/rec/conf/oopsla/KhoshafianC86,Object Identity.
https://dblp.org/rec/conf/oopsla/KhurshidMJ02,An analyzable annotation language.
https://dblp.org/rec/conf/oopsla/KiczalesL92,Issues in the Design and Documentation of Class Libraries.
https://dblp.org/rec/conf/oopsla/KiernanC00,Middleware object query processing with deferred updates and autonomous sources.
https://dblp.org/rec/conf/oopsla/KiernanC95,Extending SQL-92 for OODB Access: Design and Implementation Experience.
https://dblp.org/rec/conf/oopsla/KillijianRF02,Portable serialization of CORBA objects: a reflective approach.
https://dblp.org/rec/conf/oopsla/KimBCGW87,Composite Object Support in an Object-Oriented Database System.
https://dblp.org/rec/conf/oopsla/KimBCGWB88,Integrating an Object-Oriented Programming System with a Database System.
https://dblp.org/rec/conf/oopsla/KimK0KPZR16,Apex: automatic programming assignment error explanation.
https://dblp.org/rec/conf/oopsla/KitMB06,Isolating and relating concerns in requirements using latent semantic analysis.
https://dblp.org/rec/conf/oopsla/KlarlundKS96,Formal Design Constraints.
https://dblp.org/rec/conf/oopsla/KleindienstPT96,Lessons Learned from Implementing the CORBA Persistent Object Service.
https://dblp.org/rec/conf/oopsla/KleinFF10,"Random testing for higher-order, stateful programs."
https://dblp.org/rec/conf/oopsla/KleynG88,GraphTrace - Understanding Object-Oriented Systems Using Concurrently Animated Views.
https://dblp.org/rec/conf/oopsla/KlingMCR12,Bolt: on-demand infinite loop escape in unmodified binaries.
https://dblp.org/rec/conf/oopsla/KloseO10,Modular logic metaprogramming.
https://dblp.org/rec/conf/oopsla/KneussKKS13,Synthesis modulo recursive functions.
https://dblp.org/rec/conf/oopsla/KnollM09,pi: a pattern language.
https://dblp.org/rec/conf/oopsla/KobayashiY94,Type-Theoretic Foundations for Concurrent Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/KojarskiL05,Pluggable AOP: designing aspect mechanisms for third-party composition.
https://dblp.org/rec/conf/oopsla/KojarskiL07,Awesome: an aspect co-weaving system for composing multiple aspect-oriented extensions.
https://dblp.org/rec/conf/oopsla/KonstanR91,Developing a GUIDE Using Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/KorsonHHPT91,Managing the Transition to Object-Oriented Technology (Panel).
https://dblp.org/rec/conf/oopsla/KouP10,From OO to FPGA: fitting round objects into square hardware?
https://dblp.org/rec/conf/oopsla/KovedPK02,Access rights analysis for Java.
https://dblp.org/rec/conf/oopsla/KovedW93,GROOP: An Object-Oriented Toolkit for Animated 3D Graphics.
https://dblp.org/rec/conf/oopsla/KrintzCH99,Reducing Transfer Delay Using Java Class File Splitting and Prefetching.
https://dblp.org/rec/conf/oopsla/Kristensen94,Complex Associations: Abstractions in Object-Oriented Modeling.
https://dblp.org/rec/conf/oopsla/KristensenL95,Problem-Oriented Object Memory: Customizing Consistency.
https://dblp.org/rec/conf/oopsla/KruegerLVA93,Tools for the Development of Application-Specific Virtual Memory Management.
https://dblp.org/rec/conf/oopsla/KuhneS07,Can programming be liberated from the two-level style: multi-level programming with deepjava.
https://dblp.org/rec/conf/oopsla/Kulkarni11,JIT compilation policy for modern machines.
https://dblp.org/rec/conf/oopsla/KulkarniC12,Mitigating the compiler optimization phase-ordering problem using machine learning.
https://dblp.org/rec/conf/oopsla/KulkarniLS10,Task types for pervasive atomicity.
https://dblp.org/rec/conf/oopsla/KulkarniMZN16,Accelerating program analyses by cross-program training.
https://dblp.org/rec/conf/oopsla/KumarFBGT12,Work-stealing without the baggage.
https://dblp.org/rec/conf/oopsla/KumarH14,MIX10: compiling MATLAB to X10 for high performance.
https://dblp.org/rec/conf/oopsla/KurajKJ15,Programming with enumerable sets of structures.
https://dblp.org/rec/conf/oopsla/LaffertyC03,Language-independent aspect-oriented programming.
https://dblp.org/rec/conf/oopsla/LaLondeG88,Building a Backtracking Facility in Smalltalk Without Kernel Support.
https://dblp.org/rec/conf/oopsla/LaLondeTP86,An Exemplar Based Smalltalk.
https://dblp.org/rec/conf/oopsla/Lamping93,Typing the Specialization Interface.
https://dblp.org/rec/conf/oopsla/LangeN95,Interactive Visualization of Design Patterns Can Help in Framework Understanding.
https://dblp.org/rec/conf/oopsla/LangP86,Oaklisp: an Object-Oriented Scheme with First Class Types.
https://dblp.org/rec/conf/oopsla/LanzaD01,A Categorization of Classes based on the Visualization of their Internal Structure: The Class Blueprint.
https://dblp.org/rec/conf/oopsla/LaursenA87,Opus: A Smalltalk Production System.
https://dblp.org/rec/conf/oopsla/LeaFBVRT98,Building Distributed Systems (Panel).
https://dblp.org/rec/conf/oopsla/LeavensM98,Multiple Dispatch as Dispatch on Tuples.
https://dblp.org/rec/conf/oopsla/LeeBZZVG15,RAIVE: runtime assessment of floating-point instability by vectorization.
https://dblp.org/rec/conf/oopsla/LeeHGM09,Debug all your code: portable mixed-environment debugging.
https://dblp.org/rec/conf/oopsla/LeeKK00,A real world object modeling method for creating simulation environment of real-time systems.
https://dblp.org/rec/conf/oopsla/LeeLC03,HydroJ: object-oriented pattern matching for evolvable distributed systems.
https://dblp.org/rec/conf/oopsla/LeeSL99,The Generic Graph Component Library.
https://dblp.org/rec/conf/oopsla/LeffR07,Webrb: evaluating a visual domain-specific language for building relational web-applications.
https://dblp.org/rec/conf/oopsla/LeijenSB09,The design of a task parallel library.
https://dblp.org/rec/conf/oopsla/Leino98,Data Groups: Specifying the Modification of Extended State.
https://dblp.org/rec/conf/oopsla/LeinoM12,Program extrapolation with jennisys.
https://dblp.org/rec/conf/oopsla/LenceviciusHS97,Query-Based Debugging of Object-Oriented Programs.
https://dblp.org/rec/conf/oopsla/LernerVG10,"Supporting dynamic, third-party code customizations in JavaScript using aspects."
https://dblp.org/rec/conf/oopsla/LeSS15,Finding deep compiler bugs via guided stochastic program mutation.
https://dblp.org/rec/conf/oopsla/LevanoniP01,An On-the-Fly Reference Counting Garbage Collector for Java.
https://dblp.org/rec/conf/oopsla/LewisGFT86,Swamp: A Fast Processor for Smalltalk-80.
https://dblp.org/rec/conf/oopsla/LewisHKS91,An Empirical Study of the Object-Oriented Paradigm and Software Reuse.
https://dblp.org/rec/conf/oopsla/LiangB98,Dynamics Class Loading in the Java Virtual Machine.
https://dblp.org/rec/conf/oopsla/LiangTNS10,A dynamic evaluation of the precision of static heap abstractions.
https://dblp.org/rec/conf/oopsla/LieberherrHR88,Object-Oriented Programming: An Objective Sense of Style.
https://dblp.org/rec/conf/oopsla/LieberherrR89,Contributions to Teaching Object Oriented Design and Programming.
https://dblp.org/rec/conf/oopsla/Lieberman86,Using Prototypical Objects to Implement Shared Behavior in Object Oriented Systems.
https://dblp.org/rec/conf/oopsla/LipkindPK99,Object Views: Language Support for Intelligent Object Caching in Parallel and Distributed Computations.
https://dblp.org/rec/conf/oopsla/LiSD11,SOS: saving time in dynamic race detection with stationary analysis.
https://dblp.org/rec/conf/oopsla/LiskovW93,Specifications and Their Use in Defining Subtypes.
https://dblp.org/rec/conf/oopsla/LiSWL13,Steering symbolic execution to less traveled paths.
https://dblp.org/rec/conf/oopsla/LiT11,JET: exception checking in the Java native interface.
https://dblp.org/rec/conf/oopsla/LitmanMP97,Modeling Dynamic Collections of Interdependent Objects Using Path-Based Rules.
https://dblp.org/rec/conf/oopsla/Litvinov98,Contraint-Based Polymorphism in Cecil: Towards a Practical and Static Type System.
https://dblp.org/rec/conf/oopsla/LitvintchoukSBFR93,Evolving Toward Object-Oriented Technolgy in Large Organizations (Panel).
https://dblp.org/rec/conf/oopsla/LiuB11,SHERIFF: precise detection and automatic mitigation of false sharing.
https://dblp.org/rec/conf/oopsla/LiuGG92,What Contributes to Successful Object-Oriented Learning?
https://dblp.org/rec/conf/oopsla/LiuS05,Interaction-based programming with classages.
https://dblp.org/rec/conf/oopsla/LiuS06,A formal framework for component deployment.
https://dblp.org/rec/conf/oopsla/LiuSGRL05,Incrementalization across object abstraction.
https://dblp.org/rec/conf/oopsla/LiuSLG12,From clarity to efficiency for distributed algorithms.
https://dblp.org/rec/conf/oopsla/LiuTZ14,Flint: fixing linearizability violations.
https://dblp.org/rec/conf/oopsla/LiZH10,G-Finder: routing programming questions closer to the experts.
https://dblp.org/rec/conf/oopsla/LogozzoB12,Modular and verified automatic program repair.
https://dblp.org/rec/conf/oopsla/Lohr92,Concurrency Annotations.
https://dblp.org/rec/conf/oopsla/Loncaric0SS16,A practical framework for type inference error explanation.
https://dblp.org/rec/conf/oopsla/LongLR16,First-class effect reflection for effect-guided programming.
https://dblp.org/rec/conf/oopsla/LoomisCMSS95,Object and Database Standards - Panel Session.
https://dblp.org/rec/conf/oopsla/LopesO15,How scale affects structure in Java programs.
https://dblp.org/rec/conf/oopsla/LopezFB94,Implementing Constraint Imperative Programming Languages: The Kaleidospace'93 Virtual Machine.
https://dblp.org/rec/conf/oopsla/LopezMMNSVY15,Protocol-based verification of message-passing parallel programs.
https://dblp.org/rec/conf/oopsla/Lorenz97,Tiling Design Patterns - A Case Study Using the Interpreter Pattern.
https://dblp.org/rec/conf/oopsla/LorenzR11,Cedalion: a language for language oriented programming.
https://dblp.org/rec/conf/oopsla/LortzS94,Combining Contracts and Exemplar-Based Programming for Class Hiding and Customization.
https://dblp.org/rec/conf/oopsla/LublinermanCC09,Parallel programming with object assemblies.
https://dblp.org/rec/conf/oopsla/LublinermanZBCS11,Delegated isolation.
https://dblp.org/rec/conf/oopsla/LucasER12,Detecting problematic message sequences and frequencies in distributed systems.
https://dblp.org/rec/conf/oopsla/Lucco87,Parallel Programming in a Virtual Object Space.
https://dblp.org/rec/conf/oopsla/LujanFG00,OoLALA: an object oriented analysis and design of numerical linear algebra.
https://dblp.org/rec/conf/oopsla/MadhavanK11,Null dereference verification via over-approximated weakest pre-conditions analysis.
https://dblp.org/rec/conf/oopsla/MadhavanMGK15,Automating grammar comparison.
https://dblp.org/rec/conf/oopsla/Madsen99,Semantic Analysis of Virtual Classes and Tested Classes.
https://dblp.org/rec/conf/oopsla/MadsenM89,Virtual Classes: A Powerful Mechanism in Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/MadsenTL15,Static analysis of event-driven Node.js JavaScript applications.
https://dblp.org/rec/conf/oopsla/MaebeBEB06,Javana: a system for building customized Java program analysis tools.
https://dblp.org/rec/conf/oopsla/Maes87,Concepts and Experiments in Computational Reflection.
https://dblp.org/rec/conf/oopsla/MaessenAS00,Improving the Java memory model using CRF.
https://dblp.org/rec/conf/oopsla/MaF07,Inferring aliasing and encapsulation properties for java.
https://dblp.org/rec/conf/oopsla/MagillHSM12,Automating object transformations for dynamic software updating.
https://dblp.org/rec/conf/oopsla/Mahoney09,Software evolution and the moving picture metaphor.
https://dblp.org/rec/conf/oopsla/MaierSOP86,Development of an Object-Oriented DBMS.
https://dblp.org/rec/conf/oopsla/MalanCL95,Lessons from the Experiences of Leading-Edge Object Technology Projects in Hewlett Packard.
https://dblp.org/rec/conf/oopsla/MalayeriA09,CZ: multiple inheritance without diamonds.
https://dblp.org/rec/conf/oopsla/Malenfant95,On the Semantic Diversity of Delegation-Based Programming Languages.
https://dblp.org/rec/conf/oopsla/MaloneyBF89,Constraint Technology fur User-Interface Construction in ThingLab II.
https://dblp.org/rec/conf/oopsla/ManclAHM95,Tailoring OO Analysis and Design Methods - Panel Session.
https://dblp.org/rec/conf/oopsla/Manolescu02,Workflow enactment with continuation and future objects.
https://dblp.org/rec/conf/oopsla/MarcusAHM95,The Future of Distributed Object Computing - Panel Session.
https://dblp.org/rec/conf/oopsla/MarellyHK02,Multiple instances and symbolic variables in executable sequence charts.
https://dblp.org/rec/conf/oopsla/MarinovO03,Object equality profiling.
https://dblp.org/rec/conf/oopsla/MarquesG89,Extending the Operating System to Support an Object-Oriented Environment.
https://dblp.org/rec/conf/oopsla/MarrD15,Tracing vs. partial evaluation: comparing meta-compilation approaches for self-optimizing interpreters.
https://dblp.org/rec/conf/oopsla/MartinLL05,Finding application errors and security flaws using PQL: a program query language.
https://dblp.org/rec/conf/oopsla/MastrangeloPMLH15,Use at your own risk: the Java unsafe API in the wild.
https://dblp.org/rec/conf/oopsla/MasuharaMAY95,Compiling Away the Meta-Level in Object-Oriented Concurrent Reflective Languages Using Partial Evaluation.
https://dblp.org/rec/conf/oopsla/MasuharaMWY92,Object-Oriented Concurrent Reflective Languages can be Implemented Efficiently.
https://dblp.org/rec/conf/oopsla/MatsakisG10,A time-aware type system for data-race protection and guaranteed initialization.
https://dblp.org/rec/conf/oopsla/MatsuokaK88,Using Tuple Space Communication in Distributed Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/MatsuokaTY93,Highly Efficient and Encapsulated Re-use of Synchronization Code in Concurrent Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/MayerHRTS12,An empirical study of the influence of static type systems on the usability of undocumented software.
https://dblp.org/rec/conf/oopsla/McAllesterZ86,Boolean Classes.
https://dblp.org/rec/conf/oopsla/McAuliffeCS98,"Vclusters: A Flexible, Fine-Grained Object Clustering Mechanism."
https://dblp.org/rec/conf/oopsla/McCarthy10,The two-state solution: native and serializable continuations accord.
https://dblp.org/rec/conf/oopsla/McCullough87,Transparent Forwarding: First Steps.
https://dblp.org/rec/conf/oopsla/McCulloughAGGM92,Reuse: Truth or Fiction (Panel).
https://dblp.org/rec/conf/oopsla/McDirmid07,Living it up with a live programming language.
https://dblp.org/rec/conf/oopsla/McDirmidFH01,Jiazzi: New-Age Components for Old-Fashioned Java.
https://dblp.org/rec/conf/oopsla/McDonald89,Object-Oriented Programming for Linear Algebra.
https://dblp.org/rec/conf/oopsla/McGregorBFMT95,OO Testing in the Real World: Lessons for All - Panel Session.
https://dblp.org/rec/conf/oopsla/McIlroyS10,Hera-JVM: a runtime system for heterogeneous multi-core architectures.
https://dblp.org/rec/conf/oopsla/McKennaACNPS88,Panel: OOP in Business.
https://dblp.org/rec/conf/oopsla/MeawadRMV12,Eval begone!: semi-automated removal of eval from javascript programs.
https://dblp.org/rec/conf/oopsla/Meijer07,Confessions of a used programming language salesman.
https://dblp.org/rec/conf/oopsla/Mendez-LojoMP10,Parallel inclusion-based points-to analysis.
https://dblp.org/rec/conf/oopsla/MendezWRMJB93,Panel - Which Method is Best?
https://dblp.org/rec/conf/oopsla/MercadalECL10,A domain-specific approach to architecturing error handling in pervasive computing.
https://dblp.org/rec/conf/oopsla/MerrowL87,A Pragmatic System for Shared Persistent Objects.
https://dblp.org/rec/conf/oopsla/Meulen87,INSIST: Interactive Simulation in Smalltalk.
https://dblp.org/rec/conf/oopsla/Meyer86,Genericity versus Inheritance.
https://dblp.org/rec/conf/oopsla/MeyerovichGBCGBK09,Flapjax: a programming language for Ajax applications.
https://dblp.org/rec/conf/oopsla/MeyerovichR13,Empirical analysis of programming language adoption.
https://dblp.org/rec/conf/oopsla/Meyrowitz86,Intermedia: The Architecture and Construction of an Object-Oriented Hypermedia System and Applications Framework.
https://dblp.org/rec/conf/oopsla/Mezini97,Maintaining the Consistency of Class Libraries During Their Evolution.
https://dblp.org/rec/conf/oopsla/MeziniL98,Adaptive Plug-and-Play Components for Evolutionary Software Development.
https://dblp.org/rec/conf/oopsla/MeziniO02,Integrating independent components with on-demand remodularization.
https://dblp.org/rec/conf/oopsla/MichelH02,A constraint-based architecture for local search.
https://dblp.org/rec/conf/oopsla/MikkilineniTKKF88,Panel: Object-Oriented Knowledge-Based Software Maintenance.
https://dblp.org/rec/conf/oopsla/MillerCLV86,The Application Accelerator Illustration System.
https://dblp.org/rec/conf/oopsla/MillerHBO13,Instant pickles: generating object-oriented pickler combinators for fast and extensible serialization.
https://dblp.org/rec/conf/oopsla/Millstein04,Practical predicate dispatch.
https://dblp.org/rec/conf/oopsla/MillsteinRC03,Relaxed MultiJava: balancing extensibility and modular typechecking.
https://dblp.org/rec/conf/oopsla/MinouraPR93,Structural Active Object Systems for Simulation.
https://dblp.org/rec/conf/oopsla/MinskyR87,A Law-Based Approach to Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/MinskyR89,Controllable Delegation: An Exercise in Law-Governed Systems.
https://dblp.org/rec/conf/oopsla/Miranda87,BrouHaHa - A Portable Smalltalk Interpreter.
https://dblp.org/rec/conf/oopsla/MisailovicCAQR14,Chisel: reliability- and accuracy-aware optimization of approximate computational kernels.
https://dblp.org/rec/conf/oopsla/MishneSY12,Typestate-based semantic code search over partial programs.
https://dblp.org/rec/conf/oopsla/MitchellS07,"The causes of bloat, the limits of health."
https://dblp.org/rec/conf/oopsla/MitchellS13,On-the-fly capacity planning.
https://dblp.org/rec/conf/oopsla/MitschkeEKMS14,i3QL: language-integrated live data views.
https://dblp.org/rec/conf/oopsla/MittalBK86,Virtual Copies - At the Boundary Between Classes and Instances.
https://dblp.org/rec/conf/oopsla/Moller96,A Functional Layer for Description Logics: Knowledge Representation Meets Object-Oriented Programing.
https://dblp.org/rec/conf/oopsla/MonarchiBHJMRW94,Methodology Standards: Help or Hindrance?
https://dblp.org/rec/conf/oopsla/Moon86,Object-Oriented Programming with Flavors.
https://dblp.org/rec/conf/oopsla/Moore96,Automatic Inheritance Hierarchy Restructuring and Method Refactoring.
https://dblp.org/rec/conf/oopsla/MooreDFFC16,Extensible access control with authorization contracts.
https://dblp.org/rec/conf/oopsla/MoorsPO08,Generics of a higher kind.
https://dblp.org/rec/conf/oopsla/MossJSSU89,"Panel: Inheritance: Can We Have Our Cake and Eat it, Too?"
https://dblp.org/rec/conf/oopsla/MouginD03,OOPAL: integrating array programming in object-oriented programming.
https://dblp.org/rec/conf/oopsla/MuletMC95,Towards a Methodology for Explicit Composition of MetaObjects.
https://dblp.org/rec/conf/oopsla/Mullen09,Writing code for other people: cognitive psychology and the fundamentals of good software design principles.
https://dblp.org/rec/conf/oopsla/MullerC12,Towards a practical secure concurrent language.
https://dblp.org/rec/conf/oopsla/MullerR07,Ownership transfer in universe types.
https://dblp.org/rec/conf/oopsla/MullerRKS89,The Use of Multimethods and Method Combination in a CLOS Based Window System Interface.
https://dblp.org/rec/conf/oopsla/MuscheviciPTN08,Multiple dispatch in practice.
https://dblp.org/rec/conf/oopsla/MusluBHEN12,Speculative analysis of integrated development environment recommendations.
https://dblp.org/rec/conf/oopsla/Myers95,Bidirectional Object Layout for Separate Compilation.
https://dblp.org/rec/conf/oopsla/MyersGZ92,Declarative Programming in a Prototype-Instance System: Object-Oriented Programming Without Writing Methods.
https://dblp.org/rec/conf/oopsla/MytkowiczCD09,Inferred call path profiling.
https://dblp.org/rec/conf/oopsla/NaeemL08,Typestate-like analysis of multiple interacting objects.
https://dblp.org/rec/conf/oopsla/Nakamura01,Incremental Computation of Complex Objects Queries.
https://dblp.org/rec/conf/oopsla/NandaCS04,Decentralizing execution of composite web services.
https://dblp.org/rec/conf/oopsla/NandaGC05,Deriving object typestates in the presence of inter-object references.
https://dblp.org/rec/conf/oopsla/NandaMSS09,Demystifying model transformations: an approach based on automated rule inference.
https://dblp.org/rec/conf/oopsla/NazareMSBGP14,Validation of memory accesses through symbolic analyses.
https://dblp.org/rec/conf/oopsla/NguyenNWNKN10,A graph-based approach to API usage adaptation.
https://dblp.org/rec/conf/oopsla/NienhuisMS16,An operational semantics for C/C++11 concurrency.
https://dblp.org/rec/conf/oopsla/Nierstrasz87,Active Objects in Hybrid.
https://dblp.org/rec/conf/oopsla/Nierstrasz93,Regular Types for Active Objects.
https://dblp.org/rec/conf/oopsla/Nierstrasz93a,Panel: Distributed Processing.
https://dblp.org/rec/conf/oopsla/NiesBSH89,Panel: Using Ada within an Object-Oriented Software Development Paradigm.
https://dblp.org/rec/conf/oopsla/NishimuraOT96,An Equational Object-Oriented Data Model and its Data-Parallel Query Language.
https://dblp.org/rec/conf/oopsla/NiWABBCGKNOPSTT08,Design and implementation of transactional constructs for C/C++.
https://dblp.org/rec/conf/oopsla/NobleHP00,Exclusion for composite objects.
https://dblp.org/rec/conf/oopsla/NollG13,Online feedback-directed optimizations for parallel Java code.
https://dblp.org/rec/conf/oopsla/NorrisD13,CDSchecker: checking concurrent data structures written with C/C++ atomics.
https://dblp.org/rec/conf/oopsla/NtzikG15,Reasoning about the POSIX file system: local update and global pathnames.
https://dblp.org/rec/conf/oopsla/NunezGB16,Prioritized garbage collection: explicit GC support for software caches.
https://dblp.org/rec/conf/oopsla/NystromCM04,Scalable extensibility via nested inheritance.
https://dblp.org/rec/conf/oopsla/NystromQM06,J&: nested intersection for scalable software composition.
https://dblp.org/rec/conf/oopsla/NystromSPG08,Constrained types for object-oriented languages.
https://dblp.org/rec/conf/oopsla/OanceaW05,Parametric polymorphism for software component architectures.
https://dblp.org/rec/conf/oopsla/OBrienHK87,The Trellis Programming Environment.
https://dblp.org/rec/conf/oopsla/OdehP93,Object-Oriented Execution of OPS5 Production Systems.
https://dblp.org/rec/conf/oopsla/OderskyZ05,Scalable component abstractions.
https://dblp.org/rec/conf/oopsla/Ogasawara09,NUMA-aware memory manager with dominant-thread-based copying GC.
https://dblp.org/rec/conf/oopsla/OgasawaraKN01,A Study of Exception Handling and Its Dynamic Optimization in Java.
https://dblp.org/rec/conf/oopsla/OgataMKTO10,A study of Java's non-Java memory.
https://dblp.org/rec/conf/oopsla/OgataOKKN06,Replay compilation: improving debuggability of a just-in-time compiler.
https://dblp.org/rec/conf/oopsla/OhoriB89,Static Type Inference for Parametric Classes.
https://dblp.org/rec/conf/oopsla/OhYY15,Learning a strategy for adapting a program analysis via bayesian optimisation.
https://dblp.org/rec/conf/oopsla/OlerLC97,Migrating Relational Data to an OODB: Strategies and Lessons from a Molecular Biology Experience.
https://dblp.org/rec/conf/oopsla/OliveiraMO10,Type classes as objects and implicits.
https://dblp.org/rec/conf/oopsla/OliveiraWG08,"The visitor pattern as a reusable, generic, type-safe component."
https://dblp.org/rec/conf/oopsla/OlkenJMPA98,Object Lessons Learned from a Distributed System for Remote Building Monitoring and Operation.
https://dblp.org/rec/conf/oopsla/Olthoff86,Augmentation of Object-Oriented Programming by Concepts of Abstract Data Type Theory: The ModPascal Experience.
https://dblp.org/rec/conf/oopsla/Onodera94,Experience with Representing C++ Program Information in an Object-Oriented Database.
https://dblp.org/rec/conf/oopsla/OnoderaK99,A Study of Locking Objects with Bimodal Fields.
https://dblp.org/rec/conf/oopsla/OrtigosaCM00,Towards agent-oriented assistance for framework instantiation.
https://dblp.org/rec/conf/oopsla/OSheaBHS86,The Learnability of Object-Oriented Programming Systems - Panel.
https://dblp.org/rec/conf/oopsla/OssherBSAACDVFK10,Flexible modeling tools for pre-requirements analysis: conceptual architecture and research challenges.
https://dblp.org/rec/conf/oopsla/OssherH92,Combination of Inheritance Hierarchies.
https://dblp.org/rec/conf/oopsla/OssherKHKK95,Subject-Oriented Composition Rules.
https://dblp.org/rec/conf/oopsla/OstermannM01,Object-Oriented Composition Untangled.
https://dblp.org/rec/conf/oopsla/OsvaldEWAR16,Gentrification gone too far? affordable 2nd-class values for fun and (co-)effect.
https://dblp.org/rec/conf/oopsla/OuD15,AutoMO: automatic inference of memory order parameters for C/C++11.
https://dblp.org/rec/conf/oopsla/OverbeyJ09,Regrowing a language: refactoring tools allow programming languages to evolve.
https://dblp.org/rec/conf/oopsla/OvlingerW99,A Language for Specifying Recursive Traversals of Object Structures.
https://dblp.org/rec/conf/oopsla/PaceC05,ArchMatE: from architectural styles to object-oriented models through exploratory tool support.
https://dblp.org/rec/conf/oopsla/Paepcke89,PCLOS: A Critical Review.
https://dblp.org/rec/conf/oopsla/PageBCM89,An Object-Oriented Modeling Environment.
https://dblp.org/rec/conf/oopsla/PaiP16,A compiler for throughput optimization of graph algorithms on GPUs.
https://dblp.org/rec/conf/oopsla/PalaczVCD02,Incommunicado: efficient communication for isolates.
https://dblp.org/rec/conf/oopsla/PalmerS11,Backstage Java: making a difference in metaprogramming.
https://dblp.org/rec/conf/oopsla/PalsbergS91,Object-Oriented Type Inference.
https://dblp.org/rec/conf/oopsla/PanchekhaT16,Automated reasoning for web page layout.
https://dblp.org/rec/conf/oopsla/ParizekL12,Predicate abstraction of Java programs with collections.
https://dblp.org/rec/conf/oopsla/ParrHF14,Adaptive LL(*) parsing: the power of dynamic analysis.
https://dblp.org/rec/conf/oopsla/PartushY14,Abstract semantic differencing via speculative correlation.
https://dblp.org/rec/conf/oopsla/Pascoe86,Encapsulators: A New Software Paradigm in Smalltalk-80.
https://dblp.org/rec/conf/oopsla/PauwHKV93,Visualizing the Behavior of Object-Oriented Systems.
https://dblp.org/rec/conf/oopsla/PavlinovicKW14,Finding minimum type error sources.
https://dblp.org/rec/conf/oopsla/PechtchanskiS01,Dynamic Optimistic Interprocedural Analysis: A Framework and an Application.
https://dblp.org/rec/conf/oopsla/Pedersen89,Extending Ordinary Inheritance Schemes to Include Generalization.
https://dblp.org/rec/conf/oopsla/PenneyS87,Class Modification in the GemStone Object-Oriented DBMS.
https://dblp.org/rec/conf/oopsla/PetersKTC16,OrcO: a concurrency-first approach to objects.
https://dblp.org/rec/conf/oopsla/PetrashkoULO16,Call graphs for languages with parametric polymorphism.
https://dblp.org/rec/conf/oopsla/Pierce10,"Art, science, and fear."
https://dblp.org/rec/conf/oopsla/Piersol86,Object Oriented Spreadsheets: The Analytic Spreadsheet Package.
https://dblp.org/rec/conf/oopsla/PinaVH14,Rubah: DSU for Java on a stock JVM.
https://dblp.org/rec/conf/oopsla/PintoCL14,Understanding energy behaviors of thread management constructs.
https://dblp.org/rec/conf/oopsla/PintoDDGW11,A simple abstraction for complex concurrent indexes.
https://dblp.org/rec/conf/oopsla/PlevyakC94,Precise Concrete Type Inference for Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/PluquetLW09,Executing code in the past: efficient in-memory object graph versioning.
https://dblp.org/rec/conf/oopsla/PolitzMMWPLCK13,Python: the full monty.
https://dblp.org/rec/conf/oopsla/PolozovG15,FlashMeta: a framework for inductive program synthesis.
https://dblp.org/rec/conf/oopsla/PotaninNCB06,Generic ownership for generic Java.
https://dblp.org/rec/conf/oopsla/PothierTP07,Scalable omniscient debugging.
https://dblp.org/rec/conf/oopsla/PradelSNS14,EventBreak: analyzing the responsiveness of user interfaces through performance-guided test generation.
https://dblp.org/rec/conf/oopsla/PratikakisSH04,Transparent proxies for java futures.
https://dblp.org/rec/conf/oopsla/PraunG01,Object Race Detection.
https://dblp.org/rec/conf/oopsla/PriceD97,Analyzing and Measuring Reusability in Object-Oriented Designs.
https://dblp.org/rec/conf/oopsla/PrintezisJ02,GCspy: an adaptable heap visualisation framework.
https://dblp.org/rec/conf/oopsla/ProkopskiV08,Analyzing the performance of code-copying virtual machines.
https://dblp.org/rec/conf/oopsla/PrountzosMP12,Elixir: a system for synthesizing concurrent graph programs.
https://dblp.org/rec/conf/oopsla/Puaut94,A Distributed Garbage Collector for Active Objects.
https://dblp.org/rec/conf/oopsla/PuBS11,Synthesis of first-order dynamic programming algorithms.
https://dblp.org/rec/conf/oopsla/Pucella02,Towards a formalization for COM part i: the primitive calculus.
https://dblp.org/rec/conf/oopsla/PurandareDE10,Monitor optimization via stutter-equivalent loop transformation.
https://dblp.org/rec/conf/oopsla/PurdySCAAS89,Panel: Architectural Alternatives for Object-Oriented Database Management.
https://dblp.org/rec/conf/oopsla/PylaRV11,Exploiting coarse-grain speculative parallelism.
https://dblp.org/rec/conf/oopsla/QianGC00,A formal specification of JavaTM class loading.
https://dblp.org/rec/conf/oopsla/QiM10,Homogeneous family sharing.
https://dblp.org/rec/conf/oopsla/QuillienRW09,Agile anthropology and Alexander's architecture: an essay in three voices.
https://dblp.org/rec/conf/oopsla/QuillienW10,"Rubber ducks, nightmares, and unsaturated predicates: proto-scientific schemata are good for agile."
https://dblp.org/rec/conf/oopsla/R96,Reorganizing Split Objects.
https://dblp.org/rec/conf/oopsla/RadoiFRS14,Translating imperative code to MapReduce.
https://dblp.org/rec/conf/oopsla/RajanKR10,"Concurrency by modularity: design patterns, a case in point."
https://dblp.org/rec/conf/oopsla/RamanYVY11,Sprint: speculative prefetching of remote data.
https://dblp.org/rec/conf/oopsla/RaoELMS97,"Exploring Largebess, Complexity and Scalability from the OOT Perspective (Panel)."
https://dblp.org/rec/conf/oopsla/RavichandranP13,Multiverse: efficiently supporting distributed high-level speculation.
https://dblp.org/rec/conf/oopsla/RaychevBV16,Probabilistic model for code with decision trees.
https://dblp.org/rec/conf/oopsla/RaychevSSV13,Refactoring with synthesis.
https://dblp.org/rec/conf/oopsla/RaychevVS13,Effective race detection for event-driven programs.
https://dblp.org/rec/conf/oopsla/RaysideC00,An Aristotelian understanding of object-oriented programming.
https://dblp.org/rec/conf/oopsla/ReedCGM91,Issues in Moving from C to C++ (Panel).
https://dblp.org/rec/conf/oopsla/ReenskaugS89,An Environment for Literate Smalltalk Programming.
https://dblp.org/rec/conf/oopsla/ReichenbachISAG10,What can the GC compute efficiently?: a language for heap assertions at GC time.
https://dblp.org/rec/conf/oopsla/RendelBO14,From object algebras to attribute grammars.
https://dblp.org/rec/conf/oopsla/RenSTRC04,Chianti: a tool for change impact analysis of java programs.
https://dblp.org/rec/conf/oopsla/ResendeAA94,Semantic Locking in Object-Oriented Database Systems.
https://dblp.org/rec/conf/oopsla/RichardsGEV11,Automated construction of JavaScript benchmarks.
https://dblp.org/rec/conf/oopsla/RichardsHNJV13,Flexible access control for javascript.
https://dblp.org/rec/conf/oopsla/RichardsonSC92,CACL: Efficient Fine-Grained Protection for Objects.
https://dblp.org/rec/conf/oopsla/Riehle09,Design pattern density defined.
https://dblp.org/rec/conf/oopsla/Riehle95,How and Why to Encapsulate Class Trees.
https://dblp.org/rec/conf/oopsla/Riehle97,Composite Design Patterns.
https://dblp.org/rec/conf/oopsla/RiehleFBO01,The Architecture of a UML Virtual Machine.
https://dblp.org/rec/conf/oopsla/RiehleG98,Role Model Based Framework Design and Integration.
https://dblp.org/rec/conf/oopsla/Rinard07,Using early phase termination to eliminate load imbalances at barrier synchronization points.
https://dblp.org/rec/conf/oopsla/Rinard07a,Living in the comfort zone.
https://dblp.org/rec/conf/oopsla/RinardHMS10,Patterns and statistical analysis for understanding reduced resource computing.
https://dblp.org/rec/conf/oopsla/RinatMS99,Correspondence Polymorphism for Object-Oriented Languages.
https://dblp.org/rec/conf/oopsla/RobersonB10,Efficient modular glass box software model checking.
https://dblp.org/rec/conf/oopsla/RobersonHDB08,Efficient software model checking of soundness of type systems.
https://dblp.org/rec/conf/oopsla/RobertsonCMRAK94,"ODE: A Self-Guided, Scenario-Based Learning Environment for Object-Oriented Design Principles."
https://dblp.org/rec/conf/oopsla/RompfA16,Type soundness for dependent object types (DOT).
https://dblp.org/rec/conf/oopsla/Rose88,Fast Dispatch Mechanisms for Stock Hardware.
https://dblp.org/rec/conf/oopsla/RosenblattWW89,OROS: Toward a Type Model for Software Development Environments.
https://dblp.org/rec/conf/oopsla/RosnerBPKAFK14,Bounded exhaustive test input generation from hybrid invariants.
https://dblp.org/rec/conf/oopsla/Rossie98,Logical Observable Entities.
https://dblp.org/rec/conf/oopsla/RossieF95,An Algebraic Semantics of Subobjects.
https://dblp.org/rec/conf/oopsla/RossoJ16,"Purposes, concepts, misfits, and a redesign of git."
https://dblp.org/rec/conf/oopsla/RossonG89,Problem-Solution Mapping in Object-Oriented Design.
https://dblp.org/rec/conf/oopsla/RosuS12,Checking reachability using matching logic.
https://dblp.org/rec/conf/oopsla/Rothering94,Development of an OO Infrastructure for Mainframe Database Applications.
https://dblp.org/rec/conf/oopsla/RountevMR01,Points-To Analysis for Java using Annotated Constraints.
https://dblp.org/rec/conf/oopsla/RubinJMG88,A Smalltalk Implementation of an Intelligent Operator's Associate.
https://dblp.org/rec/conf/oopsla/RubyL00,Safely creating correct subclasses without seeing superclass code.
https://dblp.org/rec/conf/oopsla/Rumbaugh87,Relations as Semantic Constructs in an Object-Oriented Language.
https://dblp.org/rec/conf/oopsla/Rumbaugh88,Controlling Propagation of Operations Using Attributes on Relations.
https://dblp.org/rec/conf/oopsla/RussellD06,Eliminating synchronization-related atomic operations with biased locking and bulk rebiasing.
https://dblp.org/rec/conf/oopsla/Russo08,Join patterns for visual basic.
https://dblp.org/rec/conf/oopsla/RussoC89,Virtual Memory and Backing Storage Management in Multiprocessor Operating Systems Using Object-Oriented Design Techniques.
https://dblp.org/rec/conf/oopsla/RussoJC88,Process Management and Exception Handling in Multiprocessor Operating Systems.
https://dblp.org/rec/conf/oopsla/SachindranEM03,Mark-copy: fast copying GC with less space overhead.
https://dblp.org/rec/conf/oopsla/SachindranMB04,MC2: high-performance garbage collection for memory-constrained environments.
https://dblp.org/rec/conf/oopsla/SahavechaphanC06,XSnippet: mining For sample code.
https://dblp.org/rec/conf/oopsla/SaitoI09,Self type constructors.
https://dblp.org/rec/conf/oopsla/SalkeldK13,Interacting with dead objects.
https://dblp.org/rec/conf/oopsla/SamakR14,Multithreaded test synthesis for deadlock detection.
https://dblp.org/rec/conf/oopsla/SamakTR16,Directed synthesis of failing concurrent executions.
https://dblp.org/rec/conf/oopsla/SamplesUH86,SOAR: Smalltalk Without Bytecodes.
https://dblp.org/rec/conf/oopsla/Sandberg86,An Alternative to Subclassing.
https://dblp.org/rec/conf/oopsla/Sandhu93,Security for OODBMS (Or Systems) - Panel.
https://dblp.org/rec/conf/oopsla/SaneC95,"Object-Oriented State Machines: Subclassing, Composition, Delegation and Genericity."
https://dblp.org/rec/conf/oopsla/SangalJSJ05,Using dependency models to manage complex software architecture.
https://dblp.org/rec/conf/oopsla/SartorE12,Exploring multi-threaded Java application performance on multicore hardware.
https://dblp.org/rec/conf/oopsla/SasitornC07,Component nextgen: a sound and expressive component framework for java.
https://dblp.org/rec/conf/oopsla/SatohT92,A Formalism for Real-Time Concurrent Object-Oriented Computing.
https://dblp.org/rec/conf/oopsla/ScalettiJ88,An Interactive Environment for Object-Oriented Music Composition and Sound Synthesis.
https://dblp.org/rec/conf/oopsla/SchaferEM08,Sound and extensible renaming for java.
https://dblp.org/rec/conf/oopsla/SchaferM10,Specifying and implementing refactorings.
https://dblp.org/rec/conf/oopsla/SchaffertCBKW86,An Introduction to Trellis/Owl.
https://dblp.org/rec/conf/oopsla/ScharliBD04,Object-oriented encapsulation for dynamically typed languages.
https://dblp.org/rec/conf/oopsla/Schelvis89,Incremental Distribution of Timestamp Packets: A New Approach to Distributed Garbage Collection.
https://dblp.org/rec/conf/oopsla/SchillerE12,Reducing the barriers to writing verified specifications.
https://dblp.org/rec/conf/oopsla/SchippersJHH08,Delegation-based semantics for modularizing crosscutting concerns.
https://dblp.org/rec/conf/oopsla/Schmidt95,Creating the Architecture of a Manufacturing Framework by Design Patterns.
https://dblp.org/rec/conf/oopsla/SchneiderMSA08,Dynamic optimization for efficient strong atomicity.
https://dblp.org/rec/conf/oopsla/SefikaSC96,Architecture-Oriented Visualization.
https://dblp.org/rec/conf/oopsla/Seidewitz87,Object-Oriented Programming in Smalltalk and ADA.
https://dblp.org/rec/conf/oopsla/Seidewitz94,Genericity versus Inheritance Reconsidered: Self-Reference Using Generics.
https://dblp.org/rec/conf/oopsla/SeidewitzBAWC93,Developing Software for Large-Scal Reuse (Panel).
https://dblp.org/rec/conf/oopsla/Sell93,Object Oriented Approach to MLS Database Application Design (Panel).
https://dblp.org/rec/conf/oopsla/SergeyNBD16,Hoare-style specifications as correctness conditions for non-linearizable concurrent objects.
https://dblp.org/rec/conf/oopsla/SerranoBMG00,Quicksilver: a quasi-static compiler for Java.
https://dblp.org/rec/conf/oopsla/ServettoZ10,MetaFJig: a meta-circular composition language for Java-like classes.
https://dblp.org/rec/conf/oopsla/SeweMSB11,Da capo con scala: design and analysis of a scala benchmark suite for the java virtual machine.
https://dblp.org/rec/conf/oopsla/ShachamBASVY11,Testing atomicity of composed concurrent operations.
https://dblp.org/rec/conf/oopsla/ShaferWMPG88,Panel: Teaching OOP.
https://dblp.org/rec/conf/oopsla/ShahRHB89,DSM: An Object-Relationship Modeling Language.
https://dblp.org/rec/conf/oopsla/ShahriyarBM14,Fast conservative garbage collection.
https://dblp.org/rec/conf/oopsla/ShahriyarBYM13,Taking off the gloves with reference counting Immix.
https://dblp.org/rec/conf/oopsla/ShaliC11,Hybrid partial evaluation.
https://dblp.org/rec/conf/oopsla/Shan89,An Event-Driven Model-View-Controller Framework for Smalltalk.
https://dblp.org/rec/conf/oopsla/ShanABAGLT94,"Smalltalk in the Business World: The Good, the Bad, and the Future (Panel)."
https://dblp.org/rec/conf/oopsla/ShanAN16,Finding resume and restart errors in Android applications.
https://dblp.org/rec/conf/oopsla/ShanCCCLS93,Panel - Is Multiple Inheritance Essential to OOP?
https://dblp.org/rec/conf/oopsla/ShanerLN07,Modular verification of higher-order methods with mandatory calls specified by model programs.
https://dblp.org/rec/conf/oopsla/ShankarAB08,Jolt: lightweight dynamic analysis and removal of object churn.
https://dblp.org/rec/conf/oopsla/ShankarSBS05,Runtime specialization with optimistic heap analysis.
https://dblp.org/rec/conf/oopsla/ShanMPTTW96,Objects on the Server: Are We Ready? (Panel Session).
https://dblp.org/rec/conf/oopsla/SharmaS91,Parallel Generational Garbage Collection.
https://dblp.org/rec/conf/oopsla/Shibayama88,How To Invent Distributed Implementation Schemes of an Object-Based Concurrent Language: A Transformational Approach.
https://dblp.org/rec/conf/oopsla/ShiBH13,Code optimizations using formally verified properties.
https://dblp.org/rec/conf/oopsla/ShillingS89,Three Steps to Views: Extending the Object-Oriented Paradigm.
https://dblp.org/rec/conf/oopsla/ShiPYLZCZ10,Do I use the wrong definition?: DeFuse: definition-use invariants for detecting concurrency and sequential bugs.
https://dblp.org/rec/conf/oopsla/ShufGFAS02,Creating and preserving locality of java applications at allocation and garbage collection times.
https://dblp.org/rec/conf/oopsla/SiddiquiK12,Scaling symbolic execution using ranged analysis.
https://dblp.org/rec/conf/oopsla/SimmelG91,"The Kala Basket: A Semantic Primitive Unifying Object Transactions, Access Control, Versions, and Configurations."
https://dblp.org/rec/conf/oopsla/Simons98,"Borrow, Copy or Steal? Loans and Larceny in the Orthodox Canonical Form."
https://dblp.org/rec/conf/oopsla/SimonyiCC06,Intentional software.
https://dblp.org/rec/conf/oopsla/SimpkinsBIM08,Towards adaptive programming: integrating reinforcement learning into a programming language.
https://dblp.org/rec/conf/oopsla/SkarraZ86,The Management of Changing Types in an Object-Oriented Database.
https://dblp.org/rec/conf/oopsla/SmaragdakisBK13,Set-based pre-processing for points-to analysis.
https://dblp.org/rec/conf/oopsla/SmaragdakisKBY07,Transactions with isolation and cooperation.
https://dblp.org/rec/conf/oopsla/Smith95,Using a Prototype-based Language for User Interface: The Newton Project's Experience.
https://dblp.org/rec/conf/oopsla/SmithC08,Java type inference is broken: can we fix it?
https://dblp.org/rec/conf/oopsla/SmithDB86,Impulse-86: A Substrate for Object-Oriented Interface Design.
https://dblp.org/rec/conf/oopsla/SmithLSTU94,Prototype-Based Languages: Object Lessons from Class-Free Programming (Panel).
https://dblp.org/rec/conf/oopsla/SmithMU95,"The Self-4.0 User Interface: Manifesting a System-wide Vision of Concreteness, Uniformity and Flexibility."
https://dblp.org/rec/conf/oopsla/SmithZ87,Intermedia: A Case Study of the Differences Between Relational and Object-Oriented Database Systems.
https://dblp.org/rec/conf/oopsla/Snyder86,Encapsulation and Inheritance in Object-Oriented Programming Languages.
https://dblp.org/rec/conf/oopsla/Snyder91,How to Get Your Paper Accepted at OOPSLA.
https://dblp.org/rec/conf/oopsla/SoaresLB02,Implementing distribution and persistence aspects with aspectJ.
https://dblp.org/rec/conf/oopsla/SolodkyyRS12,Open and efficient type switch for C++.
https://dblp.org/rec/conf/oopsla/SolorzanoA98,Parametric Polymorphism for Java: A Reflective Solution.
https://dblp.org/rec/conf/oopsla/SongL14,Statistical debugging for real-world performance problems.
https://dblp.org/rec/conf/oopsla/SongT09,Enhancing source-level programming tools with an awareness of transparent program transformations.
https://dblp.org/rec/conf/oopsla/SonMS11,RoleCast: finding missing security checks when you do not know what checks are.
https://dblp.org/rec/conf/oopsla/SorensenDBGR16,Portable inter-workgroup barrier synchronisation for GPUs.
https://dblp.org/rec/conf/oopsla/SorensenG10,Programming with time: cyber-physical programming with impromptu.
https://dblp.org/rec/conf/oopsla/SpinelliSCR94,MI - An Object Oriented Environment for Integration of Scientific Applications.
https://dblp.org/rec/conf/oopsla/SpringPGV07,Streamflex: high-throughput stream programming in java.
https://dblp.org/rec/conf/oopsla/SreeramP12,Safe compiler-driven transaction checkpointing and recovery.
https://dblp.org/rec/conf/oopsla/Sridhar88,Configuring Stand-Alone Smalltalk-80 Applications.
https://dblp.org/rec/conf/oopsla/SridharanAPGTB11,F4F: taint analysis of framework-based web applications.
https://dblp.org/rec/conf/oopsla/SridharanGSB05,Demand-driven points-to analysis for Java.
https://dblp.org/rec/conf/oopsla/SrinivasanR15,Partial evaluation of machine code.
https://dblp.org/rec/conf/oopsla/SrinivasanR16,An improved algorithm for slicing machine code.
https://dblp.org/rec/conf/oopsla/SrinivasanSR16,Speeding up machine-code synthesis.
https://dblp.org/rec/conf/oopsla/St-AmourTF12,Optimization coaching: optimizers learn to communicate with programmers.
https://dblp.org/rec/conf/oopsla/StacyHKM92,Ensuring Semantic Integrity of Reusable Objects (Panel).
https://dblp.org/rec/conf/oopsla/StadenC10,Reasoning about multiple related abstractions with MultiStar.
https://dblp.org/rec/conf/oopsla/Stanley10,"To achieve our highest goals, we must be willing to abandon them."
https://dblp.org/rec/conf/oopsla/Stark93,Impacts of Object-Oriented Technologies: Seven Years of SEL Studies.
https://dblp.org/rec/conf/oopsla/StataG95,Modular Reasoning in the Presence of Subclassing.
https://dblp.org/rec/conf/oopsla/SteeCFLO93,Status of Object-Oriented COBOL (Panel).
https://dblp.org/rec/conf/oopsla/SteeleLF14,Fast splittable pseudorandom number generators.
https://dblp.org/rec/conf/oopsla/StefanescuPYLR16,Semantics-based program verifiers for all languages.
https://dblp.org/rec/conf/oopsla/StefanovicMM99,Age-Based Garbage Collection.
https://dblp.org/rec/conf/oopsla/Steimann06,The paradoxical success of aspect-oriented programming.
https://dblp.org/rec/conf/oopsla/SteimannHU16,Computing repair alternatives for malformed programs using constraint attribute grammars.
https://dblp.org/rec/conf/oopsla/Stein87,Delegation Is Inheritance.
https://dblp.org/rec/conf/oopsla/SteindorferV15,Optimizing hash-array mapped tries for fast and lean immutable JVM collections.
https://dblp.org/rec/conf/oopsla/SteyaertLMD96,Reuse Contracts: Managing the Evolution of Reusable Assets.
https://dblp.org/rec/conf/oopsla/Strauss93,"IRIS Inventor, A 3D Graphics Toolkit."
https://dblp.org/rec/conf/oopsla/StreckenbachS04,Refactoring class hierarchies with KABA.
https://dblp.org/rec/conf/oopsla/StricklandTFF12,Chaperones and impersonators: run-time support for reasonable interposition.
https://dblp.org/rec/conf/oopsla/StrniaaSP07,The java module system: core design and semantic definition.
https://dblp.org/rec/conf/oopsla/SuenagaFI12,Type-based safe resource deallocation for shared-memory concurrency.
https://dblp.org/rec/conf/oopsla/SuganumaYKKN01,A Dynamic Optimization Framework for a Java Just-In-Time Compiler.
https://dblp.org/rec/conf/oopsla/SummersM11,Freedom before commitment: a lightweight type system for object initialisation.
https://dblp.org/rec/conf/oopsla/SundaresanHRVLGG00,Practical virtual method call resolution for Java.
https://dblp.org/rec/conf/oopsla/SunLS16,Finding compiler bugs via live code mutation.
https://dblp.org/rec/conf/oopsla/SunshineNSAT11,First-class state change in plaid.
https://dblp.org/rec/conf/oopsla/SurendranS16,Automatic parallelization of pure method calls via conditional future synthesis.
https://dblp.org/rec/conf/oopsla/Sutherland11,The sequential prison.
https://dblp.org/rec/conf/oopsla/SutterBB02,Sifting out the mud: low level C++ code reuse.
https://dblp.org/rec/conf/oopsla/SwaineTDFF10,Back to the futures: incremental parallelization of existing sequential runtime systems.
https://dblp.org/rec/conf/oopsla/SweeneyG99,Space and Time-Efficient Memory Layout for Multiple Inheritance.
https://dblp.org/rec/conf/oopsla/SzczurM88,"Transportable Applications Environment (TAE) Plus Experiences in ""Object""-ively Modernizing a User Interface Environment."
https://dblp.org/rec/conf/oopsla/SzekelyM88,A User Interface Toolkit Based on Graphical Objects and Constraints.
https://dblp.org/rec/conf/oopsla/Taft93,Ada 9X: From Abstraction-Oriented to Object-Oriented.
https://dblp.org/rec/conf/oopsla/TakashioT92,DROL: An Object-Oriented Programming Language for Distributed Real-Time Systems.
https://dblp.org/rec/conf/oopsla/TakikawaSDTF12,Gradual typing for first-class classes.
https://dblp.org/rec/conf/oopsla/TamayoABS12,Understanding the behavior of database operations under program control.
https://dblp.org/rec/conf/oopsla/TanM07,Ilea: inter-language analysis across java and c.
https://dblp.org/rec/conf/oopsla/TanseyT08,Annotation refactoring: inferring upgrade transformations for legacy applications.
https://dblp.org/rec/conf/oopsla/TanterNCC03,Partial behavioral reflection: spatial and temporal selection of reification.
https://dblp.org/rec/conf/oopsla/TardieuNPS12,Constrained kinds.
https://dblp.org/rec/conf/oopsla/TatlockTSJL08,Deep typechecking and refactoring.
https://dblp.org/rec/conf/oopsla/TetaliLMM13,MrCrypt: static analysis for secure cloud computations.
https://dblp.org/rec/conf/oopsla/ThomasGCCH93,"A Discussion of ""On the Purpose of Object-Oriented Analysis"" (Panel)."
https://dblp.org/rec/conf/oopsla/ThomasJ88,Orwell - A Configuration Management System for Team Programming.
https://dblp.org/rec/conf/oopsla/Thorelli87,Modules and Type Checking in PL/LL.
https://dblp.org/rec/conf/oopsla/ThummalapentaXTHS11,Synthesizing method sequences for high-coverage testing.
https://dblp.org/rec/conf/oopsla/Thuraisingham89,Mandatory Security in Object-Oriented Database Systems.
https://dblp.org/rec/conf/oopsla/Thuraisingham93,Integrating Object-Oriented Technolgy and Security Technology: A Panel Discussion.
https://dblp.org/rec/conf/oopsla/TianJZS10,An input-centric paradigm for program dynamic optimizations.
https://dblp.org/rec/conf/oopsla/TianZS11,A step towards transparent integration of input-consciousness into dynamic program optimizations.
https://dblp.org/rec/conf/oopsla/Ting93,Modeling Security Requirements for Applications (Panel).
https://dblp.org/rec/conf/oopsla/TipCFR96,Slicing Class Hierarchies in C++.
https://dblp.org/rec/conf/oopsla/TipKB03,Refactoring for generalization using type constraints.
https://dblp.org/rec/conf/oopsla/TipLSS99,Practical Experience with an Application Extractor for Java.
https://dblp.org/rec/conf/oopsla/TipP00,Scalable propagation-based call graph construction algorithms.
https://dblp.org/rec/conf/oopsla/TipS97,Class Hierarchy Specialization.
https://dblp.org/rec/conf/oopsla/Titzer06,Virgil: objects on the head of a pin.
https://dblp.org/rec/conf/oopsla/Tobin-HochstadtH12,Higher-order symbolic execution via contracts.
https://dblp.org/rec/conf/oopsla/ToffolaPG15,Performance problems you can fix: a dynamic analysis of memoization opportunities.
https://dblp.org/rec/conf/oopsla/TomlinsonS89,Inheritance and Synchronization with Enabled Sets.
https://dblp.org/rec/conf/oopsla/ToroT15,Customizable gradual polymorphic effects for Scala.
https://dblp.org/rec/conf/oopsla/ToschB14,SurveyMan: programming and automatically debugging surveys.
https://dblp.org/rec/conf/oopsla/TovP11,A theory of substructural types and control.
https://dblp.org/rec/conf/oopsla/TravassosSFB99,Detecting Defects in Object-Oriented Designs: Using Reading Techniques to Increase Software Quality.
https://dblp.org/rec/conf/oopsla/TreichlerBA13,"Language support for dynamic, hierarchical data partitioning."
https://dblp.org/rec/conf/oopsla/TreichlerBSSA16,Dependent partitioning.
https://dblp.org/rec/conf/oopsla/TrippKS13,Turning nondeterminism into parallelism.
https://dblp.org/rec/conf/oopsla/TrippYFS11,HAWKEYE: effective discovery of dataflow impediments to parallelization.
https://dblp.org/rec/conf/oopsla/TsafrirWBS09,Minimizing dependencies within generic classes for faster and smaller programs.
https://dblp.org/rec/conf/oopsla/TschantzE05,Javari: adding reference immutability to Java.
https://dblp.org/rec/conf/oopsla/TsengT12,Software data-triggered threads.
https://dblp.org/rec/conf/oopsla/TuronR11,Scalable join patterns.
https://dblp.org/rec/conf/oopsla/TuronVD14,"GPS: navigating weak memory with ghosts, protocols, and separation."
https://dblp.org/rec/conf/oopsla/UhlerD14,Smten with satisfiability-based search.
https://dblp.org/rec/conf/oopsla/Ungar95,Annotating Objects for Transport to Other Worlds.
https://dblp.org/rec/conf/oopsla/UngarJ88,Tenuring Policies for Generation-Based Storage Reclamation.
https://dblp.org/rec/conf/oopsla/UngarLSH88,Panel: Treaty of Orlando Revisited.
https://dblp.org/rec/conf/oopsla/UngarS87,Self: The Power of Simplicity.
https://dblp.org/rec/conf/oopsla/UpadhyayaMP10,Automatic atomic region identification in shared memory SPMD programs.
https://dblp.org/rec/conf/oopsla/UpadhyayaR15,Effectively mapping linguistic abstractions for message-passing concurrency to threads on the Java virtual machine.
https://dblp.org/rec/conf/oopsla/UrecheBO14,Late data layout: unifying data representation transformations.
https://dblp.org/rec/conf/oopsla/UrecheBSO15,Automating ad hoc data representation transformations.
https://dblp.org/rec/conf/oopsla/UrecheTO13,Miniboxing: improving the speed to code size tradeoff in parametric polymorphism translations.
https://dblp.org/rec/conf/oopsla/VafeiadisN13,Relaxed separation logic: a program logic for C11 concurrency.
https://dblp.org/rec/conf/oopsla/Vajda95,Lessons from the Battlefield.
https://dblp.org/rec/conf/oopsla/Vanderburg05,A simple model of agile software processes - or - extreme programming annealed.
https://dblp.org/rec/conf/oopsla/VanHilstN96,Using Role Components to Implement Collaboration-Based Designs.
https://dblp.org/rec/conf/oopsla/Vegdahl86,Moving Structures between Smalltalk Images.
https://dblp.org/rec/conf/oopsla/VerwaestBGLN10,Pinocchio: bringing reflection to life with first-class interpreters.
https://dblp.org/rec/conf/oopsla/VerwaestBLN11,Flexible object layouts: enabling lightweight language extensions by intercepting slot access.
https://dblp.org/rec/conf/oopsla/Vion-DuryS94,Virtual Images: Interactive Visualization of Distributed Object-Oriented Systems.
https://dblp.org/rec/conf/oopsla/ViroliN00,Parametric polymorphism in Java: an approach to translation based on reflective features.
https://dblp.org/rec/conf/oopsla/Visser01,Visitor Combination and Traversal Control.
https://dblp.org/rec/conf/oopsla/VitekB99,Confined Types.
https://dblp.org/rec/conf/oopsla/VitekHK97,Efficient Type Inclusion Tests.
https://dblp.org/rec/conf/oopsla/VoelterDKE15,Using C language extensions for developing embedded software: a case study.
https://dblp.org/rec/conf/oopsla/VolanschiCMC97,Declarative Specialization of Object-Oriented Programs.
https://dblp.org/rec/conf/oopsla/VoraKG14,ASPIRE: exploiting asynchronous parallelism in iterative algorithms using a relaxed consistency based DSM.
https://dblp.org/rec/conf/oopsla/Waldo06,On system design.
https://dblp.org/rec/conf/oopsla/WalkerMFWSI98,Visualizing Dynamic Software System Information Through High-Level Models.
https://dblp.org/rec/conf/oopsla/WallaceW96,A Situated Evaluation of the Object Management Group's (OMG) Object Management Architecture (OMA).
https://dblp.org/rec/conf/oopsla/Walsh92,Preliminary Defect Data from the Iterative Development of a Large C++ Program.
https://dblp.org/rec/conf/oopsla/WaltherP89,Strategies for Scientific Prototyping in Smalltalk.
https://dblp.org/rec/conf/oopsla/WangCC14,Compiler verification meets cross-language linking via data abstraction.
https://dblp.org/rec/conf/oopsla/WangGS16,FIDEX: filtering spreadsheet data using examples.
https://dblp.org/rec/conf/oopsla/WanglerH92,Visualizing Objects: Methods for Exploring Human Computer Interaction Concepts.
https://dblp.org/rec/conf/oopsla/WangPW15,Vectorization of apply to reduce interpretation overhead of R.
https://dblp.org/rec/conf/oopsla/WarthSM06,Statically scoped object adaptation with expanders.
https://dblp.org/rec/conf/oopsla/WasserrabNST06,An operational semantics and type safety prooffor multiple inheritance in C++.
https://dblp.org/rec/conf/oopsla/WatanabeY88,Reflection in an Object-Oriented Concurrent Language.
https://dblp.org/rec/conf/oopsla/WeeratungeZJ11,Accentuating the positive: atomicity inference and enforcement using correct executions.
https://dblp.org/rec/conf/oopsla/WegielK10,"Cross-language, type-safe, and transparent object sharing for co-located managed runtimes."
https://dblp.org/rec/conf/oopsla/Wegner87,Dimensions of Object-Based Language Design.
https://dblp.org/rec/conf/oopsla/WegnerSPLJ92,Object-Oriented Megaprogramming (Panel).
https://dblp.org/rec/conf/oopsla/Weihe97,Reuse of Algorithms: Still a Challenge to Object-Oriented Programming.
https://dblp.org/rec/conf/oopsla/WeimerN04,Finding and preventing run-time error handling mistakes.
https://dblp.org/rec/conf/oopsla/WeinandGM88,ET++ - An Object-Oriented Application Framework in C++.
https://dblp.org/rec/conf/oopsla/WeitzWTEKT16,Scalable verification of border gateway protocol configurations with an SMT solver.
https://dblp.org/rec/conf/oopsla/WelcJH05,Safe futures for Java.
https://dblp.org/rec/conf/oopsla/Whaley01,Partial Method Compilation using Dynamic Profile Information.
https://dblp.org/rec/conf/oopsla/WhaleyR99,Compositional Pointer and Escape Analysis for Java Programs.
https://dblp.org/rec/conf/oopsla/WickersonBBD15,"Remote-scope promotion: clarified, rectified, and verified."
https://dblp.org/rec/conf/oopsla/Wiebe86,A Distributed Repository for Immutable Persistent Objects.
https://dblp.org/rec/conf/oopsla/WiedermannIC08,Interprocedural query extraction for transparent persistence.
https://dblp.org/rec/conf/oopsla/WilhelmPOJEL86,Object-Oriented Programming for Product Development - Panel.
https://dblp.org/rec/conf/oopsla/Wilk91,Equate: An Object-Oriented Constraint Solver.
https://dblp.org/rec/conf/oopsla/WillisPN08,Caching and incrementalisation in the java query language.
https://dblp.org/rec/conf/oopsla/WilsonM89,Design of the Opportunistic Garbage Collector.
https://dblp.org/rec/conf/oopsla/Wirfs-Brock88,An Integrated Color Smalltalk-80 System.
https://dblp.org/rec/conf/oopsla/Wirfs-BrockW88,An Overview of Modular Smalltalk.
https://dblp.org/rec/conf/oopsla/Wirfs-BrockW89,Object-Oriented Design: A Responsibility-Driven Approach.
https://dblp.org/rec/conf/oopsla/WoodSCG10,Composable specifications for structured shared-memory communication.
https://dblp.org/rec/conf/oopsla/WuHIN11,Reducing trace selection footprint for large-scale Java applications without performance loss.
https://dblp.org/rec/conf/oopsla/WurthingerABWM11,Safe and atomic run-time code evolution for Java and its application to dynamic AOP.
https://dblp.org/rec/conf/oopsla/WuZSJGS12,Exploiting inter-sequence correlations for program behavior prediction.
https://dblp.org/rec/conf/oopsla/XianSJ07,Microphase: an approach to proactively invoking garbage collection for improved performance.
https://dblp.org/rec/conf/oopsla/XianSJ08,Contention-aware scheduler: unlocking execution parallelism in multithreaded java programs.
https://dblp.org/rec/conf/oopsla/XiaoGZZZYWLCZ14,Cybertron: pushing the limit on I/O reduction in data-parallel programs.
https://dblp.org/rec/conf/oopsla/Xu12,Finding reusable data structures.
https://dblp.org/rec/conf/oopsla/Xu13,Resurrector: a tunable object lifetime profiling technique for optimizing real-world programs.
https://dblp.org/rec/conf/oopsla/YangBFSM11,Why nothing matters: the impact of zeroing.
https://dblp.org/rec/conf/oopsla/YaseenSL91,An Extensible Kernel Object Management System.
https://dblp.org/rec/conf/oopsla/Yelland92,Experimental Classification Facilities for Smalltalk.
https://dblp.org/rec/conf/oopsla/Yelland96,Creating Host Compliance in a Portable Framework: A Study in the Use of Existing Design Patterns.
https://dblp.org/rec/conf/oopsla/YellinS94,"Interfaces, Protocols, and the Semi-Automatic Construction of Software Adaptors."
https://dblp.org/rec/conf/oopsla/YessenovXS11,Data-driven synthesis for object-oriented frameworks.
https://dblp.org/rec/conf/oopsla/Yokote92,The Apertos Reflective Operating System: The Concept and its Implementation.
https://dblp.org/rec/conf/oopsla/YokoteT86,The Design and Implementation of ConcurrentSmalltalk.
https://dblp.org/rec/conf/oopsla/YokoteT87,Experience and Evolution of ConcurrentSmalltalk.
https://dblp.org/rec/conf/oopsla/YonezawaBS86,Object-Oriented Concurrent Programming in ABCL/1.
https://dblp.org/rec/conf/oopsla/YoshidaH88,An Object-Oriented Framework of Pattern Recognition Systems.
https://dblp.org/rec/conf/oopsla/Young87,An Object-Oriented Framework for Interactive Data Graphics.
https://dblp.org/rec/conf/oopsla/YuNPP12,Maple: a coverage-driven testing tool for multithreaded programs.
https://dblp.org/rec/conf/oopsla/ZaksFA00,Sealed calls in Java packages.
https://dblp.org/rec/conf/oopsla/ZdonikBSW89,Panel on Transactions in Object-Oriented Systems.
https://dblp.org/rec/conf/oopsla/ZdunA05,Modeling architectural patterns using architectural primitives.
https://dblp.org/rec/conf/oopsla/ZeeR02,Write barrier removal by static analysis.
https://dblp.org/rec/conf/oopsla/ZendraCC97,Efficient Dynamic Dispatch without Virtual Function Tables: The SmallEiffel Compiler.
https://dblp.org/rec/conf/oopsla/Zhang0K13,Injecting mechanical faults to localize developer faults for evolving software.
https://dblp.org/rec/conf/oopsla/Zhang0LZMY12,Refactoring android Java code for on-demand computation offloading.
https://dblp.org/rec/conf/oopsla/ZhangCOS15,Scrap your boilerplate with object algebras.
https://dblp.org/rec/conf/oopsla/ZhangJ04a,Resolving feature convolution in middleware systems.
https://dblp.org/rec/conf/oopsla/ZhangLBF14,Accelerating iterators in optimizing AST interpreters.
https://dblp.org/rec/conf/oopsla/ZhangXZYS14,Efficient subcubic alias analysis for C.
https://dblp.org/rec/conf/oopsla/ZhaoLBCS13,Isolation for nested task parallelism.
https://dblp.org/rec/conf/oopsla/ZhaoPV03,Lightweight confinement for featherweight Java.
https://dblp.org/rec/conf/oopsla/ZhaoPYQWGOPMET12,The HipHop compiler for PHP.
https://dblp.org/rec/conf/oopsla/ZhaoSZWLS09,Allocation wall: a limiting factor of Java applications on emerging multi-core platforms.
https://dblp.org/rec/conf/oopsla/ZhaoWZDSSW14,Call sequence prediction through probabilistic calling automata.
https://dblp.org/rec/conf/oopsla/ZhengBB15,Accurate profiling in the presence of dynamic compilation.
https://dblp.org/rec/conf/oopsla/ZhongS13,Detecting API documentation errors.
https://dblp.org/rec/conf/oopsla/ZhouSGY14,Space-efficient multi-versioning for input-adaptive feedback-driven program optimizations.
https://dblp.org/rec/conf/oopsla/ZibinG01,Efficient Subtyping Tests with PQ-Encoding.
https://dblp.org/rec/conf/oopsla/ZibinG02,Fast algorithm for creating space efficient dispatching tables with application to multi-dispatching.
https://dblp.org/rec/conf/oopsla/ZibinPLAE10,Ownership and immutability in generic Java.
https://dblp.org/rec/conf/oopsla/ZorzoS99,A Distributed Object-Oriented Framework for Dependable Multiparty Interactions.
https://dblp.org/rec/conf/oopsla/ZuoFKXL16,Low-overhead and fully automated statistical debugging with abstraction refinement.
https://dblp.org/rec/conf/pldi/0001CLLRSV16,A design and verification methodology for secure isolated regions.
https://dblp.org/rec/conf/pldi/0001DSD19,Synthesizing database programs for schema refactoring.
https://dblp.org/rec/conf/pldi/0001HM16,On the complexity and performance of parsing with derivatives.
https://dblp.org/rec/conf/pldi/0001K21,Termination analysis without the tears.
https://dblp.org/rec/conf/pldi/0001MWA22,Semantic soundness for language interoperability.
https://dblp.org/rec/conf/pldi/0001R19,Using active learning to synthesize models of applications that access databases.
https://dblp.org/rec/conf/pldi/0001R21,"Snapshot-free, transparent, and robust memory reclamation for lock-free data structures."
https://dblp.org/rec/conf/pldi/0001SBH21,Wire sorts: a language abstraction for safe hardware composition.
https://dblp.org/rec/conf/pldi/0001TKVSH22,PyLSE: a pulse-transfer level language for superconductor electronics.
https://dblp.org/rec/conf/pldi/0001W17,"Low-synchronization, mostly lock-free, elastic scheduling for streaming runtimes."
https://dblp.org/rec/conf/pldi/0002BC22,Kleene algebra modulo theories: a framework for concrete KATs.
https://dblp.org/rec/conf/pldi/0002CS21,Demanded abstract interpretation.
https://dblp.org/rec/conf/pldi/0002H20,PMEvo: portable inference of port mappings for out-of-order processors by evolutionary optimization.
https://dblp.org/rec/conf/pldi/0002JWTWLX21,JPortal: precise and efficient control-flow tracing for JVM programs with Intel processor trace.
https://dblp.org/rec/conf/pldi/0002P22,Finding the dwarf: recovering precise types from WebAssembly binaries.
https://dblp.org/rec/conf/pldi/0002ZLY18,A general path-based representation for predicting program properties.
https://dblp.org/rec/conf/pldi/0002ZPLLWLX21,Chianina: an evolving graph system for flow- and context-sensitive analyses of million lines of C code.
https://dblp.org/rec/conf/pldi/0010ZTZ15,Light: replay via tightly bounded recording.
https://dblp.org/rec/conf/pldi/0022S20,"Blended, precise semantic program embeddings."
https://dblp.org/rec/conf/pldi/0024WVWVK20,A study of the learnability of relational properties: model counting meets machine learning (MCML).
https://dblp.org/rec/conf/pldi/AanjaneyaLN22,Progressive polynomial approximations for fast correctly rounded math libraries.
https://dblp.org/rec/conf/pldi/AbdullaAAK19,Verification of programs under the release-acquire semantics.
https://dblp.org/rec/conf/pldi/AbdullaACDDJLHW20,Efficient handling of string-number conversion.
https://dblp.org/rec/conf/pldi/AbdullaACDHRR17,Flatten and conquer: a framework for efficient analysis of string constraints.
https://dblp.org/rec/conf/pldi/AcarBBT06,An experimental analysis of self-adjusting computation.
https://dblp.org/rec/conf/pldi/AcarBLTT10,Traceable data types for self-adjusting computation.
https://dblp.org/rec/conf/pldi/AcarCGRS18,Heartbeat scheduling: provable efficiency for nested parallelism.
https://dblp.org/rec/conf/pldi/AcayRGMS21,"Viaduct: an extensible, optimizing compiler for secure distributed programs."
https://dblp.org/rec/conf/pldi/AcharyaB018,Polyhedral auto-transformation with no integer linear programming.
https://dblp.org/rec/conf/pldi/AchourSR16,Configuration synthesis for programmable analog devices with Arco.
https://dblp.org/rec/conf/pldi/Adams18,Ryū: fast float-to-string conversion.
https://dblp.org/rec/conf/pldi/AdamsCS93,First-Class Data-Type Representations in SchemeXerox.
https://dblp.org/rec/conf/pldi/Adl-TabatabaiCLPS98,"Fast, Effective Code Generation in a Just-In-Time Java Compiler."
https://dblp.org/rec/conf/pldi/Adl-TabatabaiG93,Detection and Recovery of Endangered Variables Caused by Instruction Scheduling.
https://dblp.org/rec/conf/pldi/Adl-TabatabaiG96,Source-Level Debugging of Scalar Optimized Code.
https://dblp.org/rec/conf/pldi/Adl-TabatabaiHSS04,Prefetch inection based on hardware monitoring and object metadata.
https://dblp.org/rec/conf/pldi/Adl-TabatabaiLLW96,Efficient and Language-Independent Mobile Programs.
https://dblp.org/rec/conf/pldi/Adl-TabatabaiLMMSS06,Compiler and runtime support for efficient software transactional memory.
https://dblp.org/rec/conf/pldi/AdveM98,Using Integer Sets for Data-Parallel Program Analysis and Optimization.
https://dblp.org/rec/conf/pldi/AftandilianG09,GC assertions: using the garbage collector to check heap properties.
https://dblp.org/rec/conf/pldi/AgesenDM98,Garbage Collection and Local Variable Type-Precision and Liveness in Java Virtual Machines.
https://dblp.org/rec/conf/pldi/AggarwalR01,Related Field Analysis.
https://dblp.org/rec/conf/pldi/Agrawal94,On Slicing Programs with Jump Statements.
https://dblp.org/rec/conf/pldi/AgrawalH90,Dynamic Program Slicing.
https://dblp.org/rec/conf/pldi/AgrawalSD95,Interprocedural Partial Redundancy Elimination and its Application to Distributed Memory Compilation.
https://dblp.org/rec/conf/pldi/AhmadiDGP22,Efficient approximations for cache-conscious data placement.
https://dblp.org/rec/conf/pldi/AhnCSGT14,Improving JavaScript performance by deconstructing the type system.
https://dblp.org/rec/conf/pldi/AhrensKA22,Autoscheduling for sparse tensor algebra with an asymptotic cost model.
https://dblp.org/rec/conf/pldi/AikenFKT03,Checking and inferring local non-aliasing.
https://dblp.org/rec/conf/pldi/AikenFL95,Better Static Memory Management: Improving Region-Based Analysis of Higher-Order Languages.
https://dblp.org/rec/conf/pldi/AikenN88,Optimal Loop Parallelization.
https://dblp.org/rec/conf/pldi/AkramSME18,Write-rationing garbage collection for hybrid memories.
https://dblp.org/rec/conf/pldi/AlbarghouthiKNR12,Parallelizing top-down interprocedural analyses.
https://dblp.org/rec/conf/pldi/AletaCGK05,Demystifying on-the-fly spill code.
https://dblp.org/rec/conf/pldi/AlglaveMT14,"Herding cats: modelling, simulation, testing, and data-mining for weak memory."
https://dblp.org/rec/conf/pldi/AllamanisBDG20,Typilus: neural type hints.
https://dblp.org/rec/conf/pldi/AllenJ88,"Compiling C for Vectorization, Parallelization, and Inline Expansion."
https://dblp.org/rec/conf/pldi/AlmasiP02,MaJIC: Compiling MATLAB for Speed and Responsiveness.
https://dblp.org/rec/conf/pldi/AltidorHS11,Taming the wildcards: combining definition- and use-site variance.
https://dblp.org/rec/conf/pldi/AltmanGG95,Scheduling and Mapping: Software Pipelining in the Presence of Structural Hazards.
https://dblp.org/rec/conf/pldi/AmagbegnonBG95,Implementation of the Data-Flow Synchronous Language SIGNAL.
https://dblp.org/rec/conf/pldi/AmarasingheL93,Communication Optimization and Code Generation for Distributed Memory Machines.
https://dblp.org/rec/conf/pldi/AminTVWJ08,Automatic volume management for programmable microfluidics.
https://dblp.org/rec/conf/pldi/AmmarguellatH90,Automatic Recognition of Induction Variables and Recurrence Relations by Abstract Interpretation.
https://dblp.org/rec/conf/pldi/AmmeDFR01,SafeTSA: A Type Safe and Referentially Secure Mobile-Code Representation Based on Static Single Assignment Form.
https://dblp.org/rec/conf/pldi/AmmonsBL97,Exploiting Hardware Performance Counters with Flow and Context Sensitive Profiling.
https://dblp.org/rec/conf/pldi/AmmonsL98,Improving Data-flow Analysis with Path Profiles.
https://dblp.org/rec/conf/pldi/AmmonsMBL03,Debugging temporal specifications with concept analysis.
https://dblp.org/rec/conf/pldi/AndersonBW21,Concurrent deferred reference counting with constant-time overhead.
https://dblp.org/rec/conf/pldi/AndersonBW22,Turning manual concurrent memory reclamation into automatic reference counting.
https://dblp.org/rec/conf/pldi/AndersonGEB08,SharC: checking data sharing strategies for multithreaded C.
https://dblp.org/rec/conf/pldi/AndersonGN09,Lightweight annotations for controlling sharing in concurrent data structures.
https://dblp.org/rec/conf/pldi/AndersonH90,Compilation of Haskell Array Comprehensions for Scientific Computing.
https://dblp.org/rec/conf/pldi/AndersonL93,Global Optimizations for Parallelism and Locality on Scalable Parallel Machines.
https://dblp.org/rec/conf/pldi/AndersonPDC19,Optimization and abstraction: a synergistic approach for analyzing neural network robustness.
https://dblp.org/rec/conf/pldi/AndrewsHY88,Design and Implementation of the UW Illustrated Compiler.
https://dblp.org/rec/conf/pldi/AnselCWOZEA09,PetaBricks: a language and compiler for algorithmic choice.
https://dblp.org/rec/conf/pldi/AnselMETCSSBY11,Language-independent sandboxing of just-in-time compilation and self-modifying code.
https://dblp.org/rec/conf/pldi/AntoniadisFKRAS20,"Static analysis of Java enterprise applications: frameworks and caches, the elephants in the room."
https://dblp.org/rec/conf/pldi/AntonopoulosGHK17,Decomposition instead of self-composition for proving the absence of timing channels.
https://dblp.org/rec/conf/pldi/ApinisSV13,How to combine widening and narrowing for non-monotonic systems of equations.
https://dblp.org/rec/conf/pldi/ApostolakisXTCC20,SCAF: a speculation-aware collaborative dependence analysis framework.
https://dblp.org/rec/conf/pldi/Appel04,"Social processes and proofs of theorems and programs, revisited."
https://dblp.org/rec/conf/pldi/Appel15,Verification of a cryptographic primitive: SHA-256 (abstract).
https://dblp.org/rec/conf/pldi/AppelEL88,Real-Time Concurrent Collection on Stock Multiprocessors.
https://dblp.org/rec/conf/pldi/AppelG01,Optimal Spilling for CISC Machines with Few Registers.
https://dblp.org/rec/conf/pldi/AppelM94,Separate Compilation for Standard ML.
https://dblp.org/rec/conf/pldi/ArnoldR01,A Framework for Reducing the Cost of Instrumented Code.
https://dblp.org/rec/conf/pldi/ArztRFBBKTOM14,"FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps."
https://dblp.org/rec/conf/pldi/AsadiC0GM21,Polynomial reachability witnesses via Stellensätze.
https://dblp.org/rec/conf/pldi/AstorgaMSWX19,Learning stateful preconditions modulo a test generator.
https://dblp.org/rec/conf/pldi/AtkinsonDHJKW89,Experiences Creating a Portable Cedar.
https://dblp.org/rec/conf/pldi/AugustineSP019,Generating piecewise-regular code from irregular structures.
https://dblp.org/rec/conf/pldi/AungHJR14,Specialization slicing.
https://dblp.org/rec/conf/pldi/AuslanderPCEB96,"Fast, Effective Dynamic Compilation."
https://dblp.org/rec/conf/pldi/AustinBS94,Efficient Detection of All Pointer and Array Access Errors.
https://dblp.org/rec/conf/pldi/AvgustinovCHKLLMSST05,Optimising aspectJ.
https://dblp.org/rec/conf/pldi/AyersGS97,Aggressive Inlining.
https://dblp.org/rec/conf/pldi/AyersJPS98,Scalable Cross-Module Optimization.
https://dblp.org/rec/conf/pldi/AyersSMARW05,TraceBack: first fault diagnosis by reconstruction of distributed control flow.
https://dblp.org/rec/conf/pldi/BaconALRS01,Java without the Coffee Breaks: A Nonintrusive Multiprocessor Garbage Collector.
https://dblp.org/rec/conf/pldi/BaconCS12,And then there were none: a stall-free real-time garbage collector for reconfigurable hardware.
https://dblp.org/rec/conf/pldi/BaconKMS98,Thin Locks: Featherweight Synchronization for Java.
https://dblp.org/rec/conf/pldi/BaekC10,Green: a framework for supporting energy-conscious programming using controlled approximation.
https://dblp.org/rec/conf/pldi/BaghsorkhiVW16,FlexVec: auto-vectorization for irregular loops.
https://dblp.org/rec/conf/pldi/BahlkeMS87,A generator for language-specific debugging systems.
https://dblp.org/rec/conf/pldi/BaileyD96,Target-Sensitive Construction of Diagnostic Programs for Procedure Calling Sequence Generators.
https://dblp.org/rec/conf/pldi/BakerH02,Maya: Multiple-Dispatch Syntax Extension in Java.
https://dblp.org/rec/conf/pldi/BalaDB00,Dynamo: a transparent dynamic optimization system.
https://dblp.org/rec/conf/pldi/BalasundaramK89,A Technique for Summarizing Data Access and Its Use in Parallelism Enhancing Transformations.
https://dblp.org/rec/conf/pldi/BallanceBG88,Grammatical Abstraction and Incremental Syntax Analysis in a Language-Based Editor.
https://dblp.org/rec/conf/pldi/BallanceMO90,"The Program Dependence Web: A Representation Supporting Control, Data, and Demand-Driven Interpretation of Imperative Languages."
https://dblp.org/rec/conf/pldi/BallBGIKSSV14,VeriCon: towards verifying controller programs in software-defined networks.
https://dblp.org/rec/conf/pldi/BallL93,Branch Prediction For Free.
https://dblp.org/rec/conf/pldi/BallMMR01,Automatic Predicate Abstraction of C Programs.
https://dblp.org/rec/conf/pldi/Barklund87,Efficient interpretation of Prolog programs.
https://dblp.org/rec/conf/pldi/BarowyGHZ15,FlashRelate: extracting relational data from semi-structured spreadsheets using examples.
https://dblp.org/rec/conf/pldi/BarrettZ93,Using Lifetime Predictors to Improve Memory Allocation Performance.
https://dblp.org/rec/conf/pldi/BarrettZ95,Garbage Collection Using a Dynamic Threatening Boundary.
https://dblp.org/rec/conf/pldi/BartonCAZFCA06,Shared memory programming for large scale machines.
https://dblp.org/rec/conf/pldi/Bastani0AL17,Synthesizing program input grammars.
https://dblp.org/rec/conf/pldi/Bastani0AL18,Active learning of points-to specifications.
https://dblp.org/rec/conf/pldi/BasuME21,"Frequent background polling on a shared thread, using light-weight compiler interrupts."
https://dblp.org/rec/conf/pldi/BaudartBHMS21,Compiling Stan to generative probabilistic languages and extension to deep probabilistic programming.
https://dblp.org/rec/conf/pldi/BaudartMASPC20,Reactive probabilistic programming.
https://dblp.org/rec/conf/pldi/BauerLW05,Composing security policies with polymer.
https://dblp.org/rec/conf/pldi/BaxterNPKG18,Putting in all the stops: execution control for JavaScript.
https://dblp.org/rec/conf/pldi/BeckettGW16,Temporal NetKAT.
https://dblp.org/rec/conf/pldi/BeckettMMPW17,Network configuration synthesis with abstract topologies.
https://dblp.org/rec/conf/pldi/BeckmanN11,"Probabilistic, modular and scalable inference of typestate specifications."
https://dblp.org/rec/conf/pldi/BeillahiCEE20,Behavioral simulation for smart contracts.
https://dblp.org/rec/conf/pldi/BendrissouGZ22,"""Synthesizing input grammars"": a replication study."
https://dblp.org/rec/conf/pldi/BenitezD88,A Portable Global Optimizer and Linker.
https://dblp.org/rec/conf/pldi/BenzHH12,A dynamic program analysis to find floating-point accuracy problems.
https://dblp.org/rec/conf/pldi/BergerZ06,DieHard: probabilistic memory safety for unsafe languages.
https://dblp.org/rec/conf/pldi/BergerZM01,Composing High-Performance Memory Allocators.
https://dblp.org/rec/conf/pldi/BergnerDEO97,Spill Code Minimization via Interference Region Spilling.
https://dblp.org/rec/conf/pldi/BerndlLQHU03,Points-to analysis using BDDs.
https://dblp.org/rec/conf/pldi/BernsteinGGKMNP89,Spill Code Minimization Techniques for Optimizing Compilers.
https://dblp.org/rec/conf/pldi/BernsteinR91,Global Instruction Scheduling for Superscalar Machines.
https://dblp.org/rec/conf/pldi/BerryS20,HipHop.js: (A)Synchronous reactive web programming.
https://dblp.org/rec/conf/pldi/Bertot91,Occurences in Debugger Specifications.
https://dblp.org/rec/conf/pldi/BestMMRFB11,Synchronization via scheduling: techniques for efficiently managing shared state.
https://dblp.org/rec/conf/pldi/BeutnerO21,On probabilistic termination of functional programs with continuous distributions.
https://dblp.org/rec/conf/pldi/BeutnerOZ22,Guaranteed bounds for posterior inference in universal probabilistic programming.
https://dblp.org/rec/conf/pldi/BeyerHMR07,Path invariants.
https://dblp.org/rec/conf/pldi/BichselBGV20,Silq: a high-level quantum language with safe uncomputation and intuitive semantics.
https://dblp.org/rec/conf/pldi/BilardiP96,Generalized Dominance and Control Dependence.
https://dblp.org/rec/conf/pldi/BillesMP17,Systematic black-box analysis of collaborative web applications.
https://dblp.org/rec/conf/pldi/BiswasHSB14,DoubleChecker: efficient sound and precise atomicity checking.
https://dblp.org/rec/conf/pldi/BlackburnJMM02,Beltway: Getting Around Garbage Collection Gridlock.
https://dblp.org/rec/conf/pldi/BlackburnM08,"Immix: a mark-region garbage collector with space efficiency, fast collection, and mutator performance."
https://dblp.org/rec/conf/pldi/BlackshearCS13,Thresher: precise refutations for heap reachability.
https://dblp.org/rec/conf/pldi/BlackshearL13,Almost-correct specifications: a modular semantic framework for assigning confidence to warnings.
https://dblp.org/rec/conf/pldi/BlanchetCCFMMMR03,A static analyzer for large safety-critical software.
https://dblp.org/rec/conf/pldi/BlellochC99,On Bounding Time and Space for Multiprocessor Garbage Collection.
https://dblp.org/rec/conf/pldi/BoddenTRBBM13,SPLLIFT: statically analyzing software product lines in minutes instead of years.
https://dblp.org/rec/conf/pldi/BodikG97,Partial Dead Code Elimination using Slicing Transformations.
https://dblp.org/rec/conf/pldi/BodikGS00,ABCD: eliminating array bounds checks on demand.
https://dblp.org/rec/conf/pldi/BodikGS97,Interprocedural Conditional Branch Elimination.
https://dblp.org/rec/conf/pldi/BodikGS98,Complete Removal of Redundant Computations.
https://dblp.org/rec/conf/pldi/BodikGS99,Load-Reuse Analysis: Design and Evaluation.
https://dblp.org/rec/conf/pldi/Boehm05,Threads cannot be implemented as a library.
https://dblp.org/rec/conf/pldi/Boehm20,Towards an API for the real numbers.
https://dblp.org/rec/conf/pldi/Boehm87,Constructive real interpretation of numerical programs.
https://dblp.org/rec/conf/pldi/Boehm89,Type Inference in the Presence of Type Abstraction.
https://dblp.org/rec/conf/pldi/Boehm93,Space Efficient Conservative Garbage Collection.
https://dblp.org/rec/conf/pldi/Boehm96,Simple Garbage-Collector-Safety.
https://dblp.org/rec/conf/pldi/BoehmA08,Foundations of the C++ concurrency memory model.
https://dblp.org/rec/conf/pldi/BoehmDS91,Mostly Parallel Garbage Collection.
https://dblp.org/rec/conf/pldi/BohmKKFT11,Generalized just-in-time trace compilation using a parallel task farm in a dynamic binary translator.
https://dblp.org/rec/conf/pldi/BohrerTMMP18,VeriPhy: verified controller executables from verified cyber-physical system models.
https://dblp.org/rec/conf/pldi/BonaertDBV21,Fast and precise certification of transformers.
https://dblp.org/rec/conf/pldi/BondBG10,Breadcrumbs: efficient context sensitivity for dynamic bug detection analyses.
https://dblp.org/rec/conf/pldi/BondCM10,PACER: proportional detection of data races.
https://dblp.org/rec/conf/pldi/BondhugulaHRS08,A practical automatic polyhedral parallelizer and locality optimizer.
https://dblp.org/rec/conf/pldi/Boothe00,Efficient algorithms for bidirectional debugging.
https://dblp.org/rec/conf/pldi/BorgesFdPV14,Compositional solution space quantification for probabilistic software analysis.
https://dblp.org/rec/conf/pldi/BornholtT17,Synthesizing memory models from framework sketches and Litmus tests.
https://dblp.org/rec/conf/pldi/BouajjaniDES11,On inter-procedural analysis of programs with lists and data.
https://dblp.org/rec/conf/pldi/Bourdoncle93,Abstract Debugging of Higher-Order Imperative Languages.
https://dblp.org/rec/conf/pldi/BourgeatPCA20,The essence of Bluespec: a core language for rule-based hardware design.
https://dblp.org/rec/conf/pldi/BourkeBDLPR17,A formally verified compiler for Lustre.
https://dblp.org/rec/conf/pldi/BowmanA18,Typed closure conversion for the calculus of constructions.
https://dblp.org/rec/conf/pldi/BowmanMSD15,Profile-guided meta-programming.
https://dblp.org/rec/conf/pldi/BoyapatiSBR03,Ownership types for safe region-based memory management in real-time Java.
https://dblp.org/rec/conf/pldi/BoydW93,Isolation and Analysis of Optimization Errors.
https://dblp.org/rec/conf/pldi/BradleeHE91,The Marion System for Retargetable Instruction Scheduling.
https://dblp.org/rec/conf/pldi/BreckCKR20,Templates and recurrences: better together.
https://dblp.org/rec/conf/pldi/BrentGLSS20,Ethainter: a smart contract security analyzer for composite vulnerabilities.
https://dblp.org/rec/conf/pldi/BridgesVOA06,Automatic instruction scheduler retargeting by reverse-engineering.
https://dblp.org/rec/conf/pldi/BriggsC94,Effective Partial Redundancy Elimination.
https://dblp.org/rec/conf/pldi/BriggsCKT89,Coloring Heuristics for Register Allocation.
https://dblp.org/rec/conf/pldi/BriggsCT92,Rematerialization.
https://dblp.org/rec/conf/pldi/BriggsP22,Choosing mathematical function implementations for speed and accuracy.
https://dblp.org/rec/conf/pldi/BromleyHMS91,Fortran at Ten Gigaflops: The Connection Machine Convolution Compiler.
https://dblp.org/rec/conf/pldi/BrooksHS92,A New Approach to Debugging Optimized Code.
https://dblp.org/rec/conf/pldi/BrownRNLSS20,Towards a verified range analysis for JavaScript JITs.
https://dblp.org/rec/conf/pldi/BruggemanWD96,Representing Control in the Presence of One-Shot Continuations.
https://dblp.org/rec/conf/pldi/BruniGGR22,Abstract interpretation repair.
https://dblp.org/rec/conf/pldi/BrunoJWA21,Compiler-assisted object inlining with value fields.
https://dblp.org/rec/conf/pldi/BrutschyD0V18,Static serializability analysis for causal consistency.
https://dblp.org/rec/conf/pldi/BudiLJL11,kb-anonymity: a model for anonymized behaviour-preserving test and debugging data.
https://dblp.org/rec/conf/pldi/BudimlicCHKOR02,Fast Copy Coalescing and Live-Range Identification.
https://dblp.org/rec/conf/pldi/BurckhardtAM07,CheckFence: checking consistency of concurrent data types on relaxed memory models.
https://dblp.org/rec/conf/pldi/BurckhardtDMT10,Line-up: a complete and automatic linearizability checker.
https://dblp.org/rec/conf/pldi/BurckhardtFHMMTK13,It's alive! continuous feedback in UI programming.
https://dblp.org/rec/conf/pldi/BurgerD96,Printing Floating-Point Numbers Quickly and Accurately.
https://dblp.org/rec/conf/pldi/BurgerWD95,"Register Allocation Using Lazy Saves, Eager Restores, and Greedy Shuffling."
https://dblp.org/rec/conf/pldi/BurnimENS11,NDSeq: runtime checking for nondeterministic sequential specifications of parallel correctness.
https://dblp.org/rec/conf/pldi/BurtscherDH02,Static Load Classification for Improving the Value Predictability of Data-Cache Misses.
https://dblp.org/rec/conf/pldi/CaiGRO14,A theory of changes for higher-order languages: incrementalizing λ-calculi by static differentiation.
https://dblp.org/rec/conf/pldi/CaiSV07,Certified self-modifying code.
https://dblp.org/rec/conf/pldi/CaiYZ21,Canary: practical static detection of inter-thread value-flow bugs.
https://dblp.org/rec/conf/pldi/CaiZZNXS18,Calling-to-reference context translation via constraint-guided CFL-reachability.
https://dblp.org/rec/conf/pldi/CalderGLMMZ95,Corpus-Based Static Branch Prediction.
https://dblp.org/rec/conf/pldi/Callahan88,The Program Summary Graph and Flow-Sensitive InterproceduralData Flow Analysis.
https://dblp.org/rec/conf/pldi/CallahanCK90,Improving Register Allocation for Subscripted Variables.
https://dblp.org/rec/conf/pldi/CallahanK91,Register Allocation via Hierarchical Graph Coloring.
https://dblp.org/rec/conf/pldi/CampagnaXMSL19,Genie: a generator of natural language semantic parsers for virtual assistant commands.
https://dblp.org/rec/conf/pldi/CaninoL17,Proactive and adaptive energy-aware programming with mixed typechecking.
https://dblp.org/rec/conf/pldi/CannarozziPC00,Contaminated garbage collection.
https://dblp.org/rec/conf/pldi/CarbinKMR12,Proving acceptability properties of relaxed nondeterministic approximate programs.
https://dblp.org/rec/conf/pldi/Carbonneaux0RS14,End-to-end verification of stack-space bounds for C programs.
https://dblp.org/rec/conf/pldi/Carbonneaux0S15,Compositional certified resource bounds.
https://dblp.org/rec/conf/pldi/CariniH95,Flow-Sensitive Interprocedural Constant Propagation.
https://dblp.org/rec/conf/pldi/CarlstromMCCMKO06,The Atomos transactional programming language.
https://dblp.org/rec/conf/pldi/CarteyLM12,Synthesising graphics card programs from DSLs.
https://dblp.org/rec/conf/pldi/CartwrightF89,The Semantics of Program Dependence.
https://dblp.org/rec/conf/pldi/CartwrightF91,Soft Typing.
https://dblp.org/rec/conf/pldi/Castro-Perez0GY21,Zooid: a DSL for certified multiparty computation: from mechanised metatheory to certified multiparty processes.
https://dblp.org/rec/conf/pldi/CauligiDGTSRB20,Constant-time foundations for the new spectre era.
https://dblp.org/rec/conf/pldi/CauligiSJBWRGBJ19,FaCT: a DSL for timing-sensitive computation.
https://dblp.org/rec/conf/pldi/CavazosEM04,Inducing heuristics to decide whether to schedule.
https://dblp.org/rec/conf/pldi/ChabbiR22,A study of real-world data races in Golang.
https://dblp.org/rec/conf/pldi/ChajedTKZ19,Argosy: verifying layered storage systems with recovery refinement.
https://dblp.org/rec/conf/pldi/ChakrabartiGC96,Global Communication Analysis and Optimization.
https://dblp.org/rec/conf/pldi/ChaliasosSSGLM22,Finding typing compiler bugs.
https://dblp.org/rec/conf/pldi/ChambersRPAHBW10,"FlumeJava: easy, efficient data-parallel pipelines."
https://dblp.org/rec/conf/pldi/ChambersU89,"Customization: Optimizing Compiler Technology for SELF, A Dynamically-Typed Object-Oriented Programming Language."
https://dblp.org/rec/conf/pldi/ChambersU90,Iterative Type Analysis and Extended Message Splitting: Optimizing Dynamically-Typed Object-Oriented Programs.
https://dblp.org/rec/conf/pldi/ChamithSDN16,Living on the edge: rapid-toggling probes with cross-modification on x86.
https://dblp.org/rec/conf/pldi/ChamithSDN17,Instruction punning: lightweight instrumentation for x86-64.
https://dblp.org/rec/conf/pldi/ChandraCCMNA97,Data Distribution Support on Distributed Shared Memory Multiprocessors.
https://dblp.org/rec/conf/pldi/ChandraFS09,Snugglebug: a powerful approach to weakest preconditions.
https://dblp.org/rec/conf/pldi/ChandraRL96,Teapot: Language Support for Writing Memory Coherence Protocols.
https://dblp.org/rec/conf/pldi/Chase88,Safety Considerations for Storage Allocation Optimizations.
https://dblp.org/rec/conf/pldi/ChaseH87,Selective interpretation as a technique for debugging computationally intensive programs.
https://dblp.org/rec/conf/pldi/ChaseWZ90,Analysis of Pointers and Structures.
https://dblp.org/rec/conf/pldi/Chatterjee0GG20,Polynomial invariant generation for non-deterministic recursive programs.
https://dblp.org/rec/conf/pldi/ChatterjeeBF91,Size and Access Inference for Data-Parallel Programs.
https://dblp.org/rec/conf/pldi/ChatterjeeG0Z21,Proving non-termination by program reversal.
https://dblp.org/rec/conf/pldi/ChatterjeePHL01,Exact Analysis of the Cache Behavior of Nested Loops.
https://dblp.org/rec/conf/pldi/ChaudhuriS10,Smooth interpretation.
https://dblp.org/rec/conf/pldi/Chen0YDD20,Multi-modal synthesis of regular expressions.
https://dblp.org/rec/conf/pldi/Chen12,Polyhedra scanning revisited.
https://dblp.org/rec/conf/pldi/ChenBCGC06,Profile-guided proactive garbage collection for locality optimization.
https://dblp.org/rec/conf/pldi/ChenC92,Prototyping Fortran-90 Compilers for Massively Parallel Machines.
https://dblp.org/rec/conf/pldi/ChenCS10,Type-preserving compilation of end-to-end verification of security enforcement.
https://dblp.org/rec/conf/pldi/ChenDA12,Type-directed automatic incrementalization.
https://dblp.org/rec/conf/pldi/ChengB01,"A Parallel, Real-Time Garbage Collector."
https://dblp.org/rec/conf/pldi/ChengH00,"Modular interprocedural pointer analysis using access paths: design, implementation, and evaluation."
https://dblp.org/rec/conf/pldi/ChengHL98,Generational Stack Collection and Profile-Driven Pretenuring.
https://dblp.org/rec/conf/pldi/ChenGZWFER13,Taming compiler fuzzers.
https://dblp.org/rec/conf/pldi/ChenH20,Proving almost-sure termination by omega-regular decomposition.
https://dblp.org/rec/conf/pldi/ChenHEFPTW10,Evaluating iterative optimization across 1000 datasets.
https://dblp.org/rec/conf/pldi/ChenHLLTTZ18,Advanced automata-based algorithms for program termination checking.
https://dblp.org/rec/conf/pldi/ChenHPECCP08,Type-preserving compilation for large-scale optimizing object-oriented compilers.
https://dblp.org/rec/conf/pldi/ChenL0DBD21,Web question answering with neurosymbolic program synthesis.
https://dblp.org/rec/conf/pldi/ChenLDP18,Locality analysis through static parallel sampling.
https://dblp.org/rec/conf/pldi/ChenLKI06,Reducing NoC energy consumption through compiler-directed channel voltage scaling.
https://dblp.org/rec/conf/pldi/ChenLLLLLJ05,Shangri-La: achieving high performance from compiled network applications while enabling ease of programming.
https://dblp.org/rec/conf/pldi/ChenMA22,All you need is superword-level parallelism: systematic control-flow vectorization with SLP.
https://dblp.org/rec/conf/pldi/ChenSSSZ16,Coverage-directed differential testing of JVM implementations.
https://dblp.org/rec/conf/pldi/ChenWAF03,A provably sound TAL for back-end optimization.
https://dblp.org/rec/conf/pldi/ChenWSLG16,Toward compositional verification of interruptible OS kernels and device drivers.
https://dblp.org/rec/conf/pldi/ChenY022,Visualization question answering using introspective program synthesis.
https://dblp.org/rec/conf/pldi/CheremCG08,Inferring locks for atomic sections.
https://dblp.org/rec/conf/pldi/CheremPR07,Practical memory leak detection using guarded value-flow analysis.
https://dblp.org/rec/conf/pldi/CheungSM13,Optimizing database-backed applications with query synthesis.
https://dblp.org/rec/conf/pldi/ChibotaruBRV19,Scalable taint specification inference with big code.
https://dblp.org/rec/conf/pldi/ChiD89,Unified Management of Registers and Cache Using Liveness and Cache Bypass.
https://dblp.org/rec/conf/pldi/Chilimbi01,Efficient Representations and Abstractions for Quantifying and Exploiting Data Reference Locality.
https://dblp.org/rec/conf/pldi/ChilimbiDL99,Cache-Conscious Structure Definition.
https://dblp.org/rec/conf/pldi/ChilimbiH02,Dynamic Hot Data Stream Prefetching for General-Purpose Programs.
https://dblp.org/rec/conf/pldi/ChilimbiHL99,Cache-Conscious Structure Layout.
https://dblp.org/rec/conf/pldi/ChilimbiS06,Cache-conscious coallocation of hot data streams.
https://dblp.org/rec/conf/pldi/ChinCQR04,Region inference for an object-oriented language.
https://dblp.org/rec/conf/pldi/ChinMM05,Semantic type qualifiers.
https://dblp.org/rec/conf/pldi/ChiwKRSS12,Diderot: a parallel DSL for image analysis and visualization.
https://dblp.org/rec/conf/pldi/Chlipala07,A certified type-preserving compiler from lambda calculus to assembly language.
https://dblp.org/rec/conf/pldi/Chlipala10,Ur: statically-typed metaprogramming with type-level record computation.
https://dblp.org/rec/conf/pldi/Chlipala11,Mostly-automated verification of low-level programs in computational separation logic.
https://dblp.org/rec/conf/pldi/ChoiFPS22,Can reactive synthesis and syntax-guided synthesis be friends?
https://dblp.org/rec/conf/pldi/ChoiLLOSS02,Efficient and Precise Datarace Detection for Multithreaded Object-Oriented Programs.
https://dblp.org/rec/conf/pldi/ChoiST19,Reusable inline caching for JavaScript performance.
https://dblp.org/rec/conf/pldi/ChoLHL21,Modular data-race-freedom guarantees in the promising semantics.
https://dblp.org/rec/conf/pldi/ChoLLHL22,Sequential reasoning for optimizing compilers under weak memory concurrency.
https://dblp.org/rec/conf/pldi/ChoLRK21,Revamping hardware persistency models: view-based and axiomatic persistency models for Intel-x86 and Armv8.
https://dblp.org/rec/conf/pldi/ChongSW18,"The semantics of transactions and weak memory in x86, Power, ARM, and C++."
https://dblp.org/rec/conf/pldi/ChouKA20,Automatic generation of efficient sparse tensor format conversion routines.
https://dblp.org/rec/conf/pldi/Chow88,Minimizing Register Usage Penalty at Procedure Calls.
https://dblp.org/rec/conf/pldi/ChowCKLLT97,A New Algorithm for Partial Redundancy Elimination based on SSA Form.
https://dblp.org/rec/conf/pldi/ChowdharyLN20,Debugging and detecting numerical errors in computation with posits.
https://dblp.org/rec/conf/pldi/ChowKLLT98,Register Promotion by Partial Redundancy Elimination of Loads and Stores.
https://dblp.org/rec/conf/pldi/ChuFM03,Region-based hierarchical operation partitioning for multicluster processors.
https://dblp.org/rec/conf/pldi/ChughHSA16,"Programmatic and direct manipulation, together at last."
https://dblp.org/rec/conf/pldi/ChughMJL09,Staged information flow for javascript.
https://dblp.org/rec/conf/pldi/ChughVJL08,Dataflow analysis for concurrent programs using datarace detection.
https://dblp.org/rec/conf/pldi/ChuJT15,Automatic induction proofs of data-structures in imperative programs.
https://dblp.org/rec/conf/pldi/ChurchillP0A19,Semantic program alignment for equivalence checking.
https://dblp.org/rec/conf/pldi/ChuWCS17,HoTTSQL: proving query rewrites with univalent SQL semantics.
https://dblp.org/rec/conf/pldi/CicekQBG019,Bidirectional type checking for relational properties.
https://dblp.org/rec/conf/pldi/CierniakL95,Unifying Data and Control Transformations for Distributed Shared Memory Machines.
https://dblp.org/rec/conf/pldi/CierniakLS00,Practicing JUDO: Java under dynamic optimizations.
https://dblp.org/rec/conf/pldi/Clark87,The JADE interpreter: a RISC interpreter for syntax directed editing.
https://dblp.org/rec/conf/pldi/Click95,Global Code Motion / Global Value Mumbering.
https://dblp.org/rec/conf/pldi/Clinger90,How to Read Floating-Point Numbers Accurately.
https://dblp.org/rec/conf/pldi/Clinger98,Proper Tail Recursion and Space Efficiency.
https://dblp.org/rec/conf/pldi/ClingerH97,Generational Garbage Collection and the Radioactive Decay Model.
https://dblp.org/rec/conf/pldi/CociorvaBLSRNBH02,Space-Time Trade-Off Optimization for a Class of Electronic Structure Calculations.
https://dblp.org/rec/conf/pldi/CohenP13,Limitations of partial compaction: towards practical bounds.
https://dblp.org/rec/conf/pldi/ColbyGJ98,Automatically Closing Open Reactive Programs.
https://dblp.org/rec/conf/pldi/ColbyLNBPC00,A certifying compiler for Java.
https://dblp.org/rec/conf/pldi/ColemanM95,Tile Size Selection Using Cache Organization and Data Layout.
https://dblp.org/rec/conf/pldi/Collberg97,Reverse Interpretation + Mutation Analysis = Automatic Retargeting.
https://dblp.org/rec/conf/pldi/CollbergCDHKLS04,Dynamic path-based software watermarking.
https://dblp.org/rec/conf/pldi/ConditHMNW03,CCured in the real world.
https://dblp.org/rec/conf/pldi/ConselK91,Parameterized Partial Evaluation.
https://dblp.org/rec/conf/pldi/CookK13,Reasoning about nondeterminism in programs.
https://dblp.org/rec/conf/pldi/CookPR06,Termination proofs for systems code.
https://dblp.org/rec/conf/pldi/CookPR07,Proving thread termination.
https://dblp.org/rec/conf/pldi/CooperK88,Interprocedural Side-Effect Analysis in Linear Time.
https://dblp.org/rec/conf/pldi/CooperL97,Register Promotion in C Programs.
https://dblp.org/rec/conf/pldi/CooperM99,Enhanced Code Compression for Embedded RISC Processors.
https://dblp.org/rec/conf/pldi/CoopriderR07,Offline compression for on-chip ram.
https://dblp.org/rec/conf/pldi/CoppaDF12,Input-sensitive profiling.
https://dblp.org/rec/conf/pldi/CordyG87,Design of an interpretive environment for Turing.
https://dblp.org/rec/conf/pldi/Cormack89,An LR Substring Parser for Noncorrecting Syntax Error Recovery.
https://dblp.org/rec/conf/pldi/CormackW90,Type-Dependent Parameter Inference.
https://dblp.org/rec/conf/pldi/CostanzoSG16,End-to-end verification of information-flow security for C and assembly programs.
https://dblp.org/rec/conf/pldi/CoutantMR88,DOC: A Practical Approach to Source-Level Debugging of Globally Optimized Code.
https://dblp.org/rec/conf/pldi/CowanDATLR21,Porcupine: a synthesizing compiler for vectorized homomorphic encryption.
https://dblp.org/rec/conf/pldi/CraryHP99,What is a Recursive Module?
https://dblp.org/rec/conf/pldi/CraryS15,Peer-to-peer affine commitment using bitcoin.
https://dblp.org/rec/conf/pldi/CrichtonPAH22,Modular information flow through ownership.
https://dblp.org/rec/conf/pldi/Cusumano-Towner18a,Incremental inference for probabilistic programs.
https://dblp.org/rec/conf/pldi/Cusumano-Towner19,Gen: a general-purpose probabilistic programming system with programmable inference.
https://dblp.org/rec/conf/pldi/CytronFS90,Compact Representations for Control Dependence.
https://dblp.org/rec/conf/pldi/CytronG93,Efficient Accomodation of May-Alias Information in SSA Form.
https://dblp.org/rec/conf/pldi/CytronHH89,Automatic Generation of DAG Parallelism.
https://dblp.org/rec/conf/pldi/CzaplickiC13,Asynchronous functional reactive programming for GUIs.
https://dblp.org/rec/conf/pldi/DaiHLH05,Automatically partitioning packet processing applications for pipelined architectures.
https://dblp.org/rec/conf/pldi/DangJCNMKD22,Compass: strong and compositional library specifications in relaxed memory separation logic.
https://dblp.org/rec/conf/pldi/DAntoniVLM14,Fast: a transducer-based language for tree manipulation.
https://dblp.org/rec/conf/pldi/DAntrasGGL17,Low overhead dynamic binary translation on ARM.
https://dblp.org/rec/conf/pldi/Danvy87,Memory allocation and higher-order functions.
https://dblp.org/rec/conf/pldi/Das00,Unification-based pointer analysis with directional assignments.
https://dblp.org/rec/conf/pldi/Dasgupta0KAR19,A complete formal semantics of x86-64 user-level instruction set architecture.
https://dblp.org/rec/conf/pldi/DasguptaDVAF20,Scalable validation of binary lifters.
https://dblp.org/rec/conf/pldi/DasLS02,ESP: Path-Sensitive Program Verification in Polynomial Time.
https://dblp.org/rec/conf/pldi/DathathriGHDBDS18,Gluon: a communication-optimizing substrate for distributed heterogeneous graph analytics.
https://dblp.org/rec/conf/pldi/DathathriKSDLM20,EVA: an encrypted vector arithmetic language and compiler for efficient homomorphic computation.
https://dblp.org/rec/conf/pldi/DathathriS0LLMM19,CHET: an optimizing compiler for fully-homomorphic neural-network inferencing.
https://dblp.org/rec/conf/pldi/DavidPY16,Statistical similarity of binaries.
https://dblp.org/rec/conf/pldi/DavidPY17,Similarity of binaries through re-optimization.
https://dblp.org/rec/conf/pldi/DavidsonG87,Cint: a RISC interpreter for the C programming language.
https://dblp.org/rec/conf/pldi/DavidsonJ94,Memory Access Coalescing: A technique for Eliminating Redundant memory Accesses.
https://dblp.org/rec/conf/pldi/DavidY14,Tracelet-based code search in executables.
https://dblp.org/rec/conf/pldi/DawsonRW96,Practical Program Analysis Using General Purpose Logic Programming Systems - A Case Study.
https://dblp.org/rec/conf/pldi/DeanCG95,Selective Specialization for Object-Oriented Languages.
https://dblp.org/rec/conf/pldi/Debray88,Unfold/Fold Transformations and Loop Optimization of Logic Programs.
https://dblp.org/rec/conf/pldi/DebrayE02,Profile-Guided Code Compression.
https://dblp.org/rec/conf/pldi/DebrayLH90,Task Granularity Analysis in Logic Programs.
https://dblp.org/rec/conf/pldi/DegenbaevEEMP16,Idle time garbage collection scheduling.
https://dblp.org/rec/conf/pldi/DEliaD18,"On-stack replacement, distilled."
https://dblp.org/rec/conf/pldi/DEliaDF11,Mining hot calling contexts in small space.
https://dblp.org/rec/conf/pldi/DeligiannisDKLT15,"Asynchronous programming, analysis and testing with state machines."
https://dblp.org/rec/conf/pldi/DeLineF01,Enforcing High-Level Protocols in Low-Level Software.
https://dblp.org/rec/conf/pldi/DesaiGJQRZ13,P: safe asynchronous event-driven programming.
https://dblp.org/rec/conf/pldi/Deutsch94,Interprocedural May-Alias Analysis for Pointers: Beyond k-limiting.
https://dblp.org/rec/conf/pldi/DeVitoHAHV13,Terra: a multi-stage language for high-performance computing.
https://dblp.org/rec/conf/pldi/DeVitoRFAH14,First-class runtime generation of high-performance types using exotypes.
https://dblp.org/rec/conf/pldi/DhamdhereRZ92,How to Analyze Large Programs Efficiently and Informatively.
https://dblp.org/rec/conf/pldi/DhulipalaB0022,PaC-trees: supporting parallel and compressed purely-functional collections.
https://dblp.org/rec/conf/pldi/DhulipalaBS19,Low-latency graph streaming using compressed purely-functional trees.
https://dblp.org/rec/conf/pldi/DhurjatiKA06,SAFECode: enforcing alias analysis for weakly typed languages.
https://dblp.org/rec/conf/pldi/DilligDA07,Static error detection using semantic inconsistency inference.
https://dblp.org/rec/conf/pldi/DilligDA08,"Sound, complete and scalable path-sensitive analysis."
https://dblp.org/rec/conf/pldi/DilligDA12,Automated error diagnosis using abductive inference.
https://dblp.org/rec/conf/pldi/DilligDAS11,Precise and compact modular procedure summaries for heap manipulating programs.
https://dblp.org/rec/conf/pldi/DimitrovRVK14,Commutativity race detection.
https://dblp.org/rec/conf/pldi/DincklageD08,Explaining failures of program analyses.
https://dblp.org/rec/conf/pldi/DingAVSOA15,Autotuning algorithmic choice for input sensitivity.
https://dblp.org/rec/conf/pldi/DingK99,Improving Cache Performance in Dynamic Applications through Data and Computation Reorganization at Run Time.
https://dblp.org/rec/conf/pldi/DingNGS17,Generalizations of the theory and deployment of triangular inequality for compiler-based strength reduction.
https://dblp.org/rec/conf/pldi/DingSKTHZ07,Software behavior oriented parallelization.
https://dblp.org/rec/conf/pldi/DingTKZK15,Optimizing off-chip accesses in multicores.
https://dblp.org/rec/conf/pldi/DingZ03,Predicting whole-program locality through reuse distance analysis.
https://dblp.org/rec/conf/pldi/DinizR97,Dynamic Feedback: An Effective Technique for Adaptive Computing.
https://dblp.org/rec/conf/pldi/DiwanMH92,Compiler Support for Garbage Collection in a Statically Typed Language.
https://dblp.org/rec/conf/pldi/DiwanMM98,Type-Based Alias Analysis.
https://dblp.org/rec/conf/pldi/DoengesKSFM22,Leapfrog: certified equivalence for protocol parsers.
https://dblp.org/rec/conf/pldi/DolanSM18,Bounding data races in space and time.
https://dblp.org/rec/conf/pldi/Dolby97,Automatic Inline Allocation of Objects.
https://dblp.org/rec/conf/pldi/DolbyC00,An automatic object inlining optimization and its evaluation.
https://dblp.org/rec/conf/pldi/DomaniKP00,A generational on-the-fly garbage collector for Java.
https://dblp.org/rec/conf/pldi/DonaldsonTTMMK21,Test-case reduction and deduplication almost for free with transformation-based compiler testing.
https://dblp.org/rec/conf/pldi/DongHLCW22,WebRobot: web robotic process automation using interactive programming-by-demonstration.
https://dblp.org/rec/conf/pldi/DorRS03,CSSV: towards a realistic tool for statically detecting all buffer overflows in C.
https://dblp.org/rec/conf/pldi/DoychevK17,Rigorous analysis of software countermeasures against cache attacks.
https://dblp.org/rec/conf/pldi/DragojevicGK09,Stretching transactional memory.
https://dblp.org/rec/conf/pldi/DrewsAD20,Proving data-poisoning robustness in decision trees.
https://dblp.org/rec/conf/pldi/DubachCRBF12,Compiling a high-level language for GPUs: (via language support for architectures and compilers).
https://dblp.org/rec/conf/pldi/DuckGR20,Binary rewriting without control flow recovery.
https://dblp.org/rec/conf/pldi/DuckY18,EffectiveSan: type and memory error detection using dynamically typed C/C++.
https://dblp.org/rec/conf/pldi/DuesterwaldGS93,A Practical Data Flow Framework for Array Reference Analysis and its Use in Optimizations.
https://dblp.org/rec/conf/pldi/DuLLYZN04,A cost-driven compilation framework for speculative parallelization of sequential programs.
https://dblp.org/rec/conf/pldi/DurstFHADBPFH20,Type-directed scheduling of streaming accelerators.
https://dblp.org/rec/conf/pldi/DussartHH97,Module-Sensitive Program Specialisation.
https://dblp.org/rec/conf/pldi/DybvigBE93,Guardians in a Generation-Based Garbage Collector.
https://dblp.org/rec/conf/pldi/EbciogluGKSZ94,VLIW Compilation Techniques in a Superscalar Environment.
https://dblp.org/rec/conf/pldi/EberhardtSRV19,Unsupervised learning of API aliasing specifications.
https://dblp.org/rec/conf/pldi/EckartL87,Distributed garbage collection.
https://dblp.org/rec/conf/pldi/EdelmannHK20,Zippy LL(1) parsing with derivatives.
https://dblp.org/rec/conf/pldi/Eggers10,2010 Athena lecture.
https://dblp.org/rec/conf/pldi/EichenbergerD96,A Reduced Multipipeline Machine Description that Preserves Scheduling Constraints.
https://dblp.org/rec/conf/pldi/EichenbergerD97,Efficient Formulation for Optimal Modulo Schedulers.
https://dblp.org/rec/conf/pldi/EichenbergerWO04,Vectorization for SIMD architectures with alignment constraints.
https://dblp.org/rec/conf/pldi/EideFFLL97,"Flick: A Flexible, Optimizing IDL Compiler."
https://dblp.org/rec/conf/pldi/EisenbergJ17,Levity polymorphism.
https://dblp.org/rec/conf/pldi/EizenbergHPD16,Remix: online detection and repair of cache contention for the JVM.
https://dblp.org/rec/conf/pldi/EizenbergPPMD17,BARRACUDA: binary-level analysis of runtime RAces in CUDA programs.
https://dblp.org/rec/conf/pldi/El-HassanyMBVV16,SDNRacer: concurrency analysis for software-defined networks.
https://dblp.org/rec/conf/pldi/EllisWNSMHCST21,DreamCoder: bootstrapping inductive program synthesis with wake-sleep library learning.
https://dblp.org/rec/conf/pldi/ElmasBNS13,CONCURRIT: a domain specific language for reproducing concurrency bugs.
https://dblp.org/rec/conf/pldi/ElmasQT07,Goldilocks: a race and transaction-aware java runtime.
https://dblp.org/rec/conf/pldi/ElmasTQ05,VYRD: verifYing concurrent programs by runtime refinement-violation detection.
https://dblp.org/rec/conf/pldi/ElwazeerAKSB13,Scalable variable and data type detection in a binary rewriter.
https://dblp.org/rec/conf/pldi/EmamiGH94,Context-Sensitive Interprocedural Points-to Analysis in the Presence of Function Pointers.
https://dblp.org/rec/conf/pldi/EmaniO15,Celebrating diversity: a mixture of experts approach for runtime mapping in dynamic environments.
https://dblp.org/rec/conf/pldi/EmmelmannSL89,BEG - A Generator for Efficient Back Ends.
https://dblp.org/rec/conf/pldi/EmmiEH15,Monitoring refinement via symbolic reasoning.
https://dblp.org/rec/conf/pldi/EmmiMM10,Parameterized verification of transactional memories.
https://dblp.org/rec/conf/pldi/EmrichLSCC20,FreezeML: complete and easy type inference for first-class polymorphism.
https://dblp.org/rec/conf/pldi/Engler96,"VCODE: a Retargetable, Extensible, Very Fast Dynamic Code Generation System."
https://dblp.org/rec/conf/pldi/EomD12,Self-stabilizing Java.
https://dblp.org/rec/conf/pldi/ErbsenGCWC21,Integration verification across software and hardware for a simple embedded system.
https://dblp.org/rec/conf/pldi/ErdwegSP21,"Concise, type-safe, and efficient structural diffing."
https://dblp.org/rec/conf/pldi/ErnstEFLP97,Code Compression.
https://dblp.org/rec/conf/pldi/Ertl95,Stack Caching for Interpreters.
https://dblp.org/rec/conf/pldi/ErtlCG06,Fast and flexible instruction selection with on-demand tree-parsing automata.
https://dblp.org/rec/conf/pldi/ErtlG03,Optimizing indirect branch prediction accuracy in virtual machine interpreters.
https://dblp.org/rec/conf/pldi/Evans96,Static Detection of Dynamic Memory Errors.
https://dblp.org/rec/conf/pldi/EvansF01,Bytecode Compression via Profiled Grammar Rewriting.
https://dblp.org/rec/conf/pldi/FaddegonC15,Algorithmic debugging of real-world haskell programs: deriving dependencies from the cost centre stack.
https://dblp.org/rec/conf/pldi/FaddegonC16,Lightweight computation tree tracing for lazy functional languages.
https://dblp.org/rec/conf/pldi/FahndrichD02,Adoption and Focus: Practical Linear Types for Imperative Programming.
https://dblp.org/rec/conf/pldi/FahndrichFSA98,Partial Online Cycle Elimination in Inclusion Constraint Graphs.
https://dblp.org/rec/conf/pldi/FahndrichRD00,Scalable context-sensitive flow analysis using instantiation constraints.
https://dblp.org/rec/conf/pldi/FarrowS89,A VHDL Compiler Based on Attribute Grammar Methodology.
https://dblp.org/rec/conf/pldi/FarvardinR20,From folklore to fact: comparing implementations of stacks and continuations.
https://dblp.org/rec/conf/pldi/FarzanKP22,Sound sequentialization for concurrent program verification.
https://dblp.org/rec/conf/pldi/FarzanLN22,Recursion synthesis with unrealizability witnesses.
https://dblp.org/rec/conf/pldi/FarzanN17,Synthesis of divide and conquer parallelism for loops.
https://dblp.org/rec/conf/pldi/FarzanN19,Modular divide-and-conquer parallelization of nested loops.
https://dblp.org/rec/conf/pldi/FarzanN21,Phased synthesis of divide and conquer programs.
https://dblp.org/rec/conf/pldi/FaustiniW87,An eductive interpreter for Lucid.
https://dblp.org/rec/conf/pldi/FedyukovichAB17,Gradual synthesis for static parallelization of single-pass array-processing programs.
https://dblp.org/rec/conf/pldi/FehrNRA0G22,IRDL: an IR definition language for SSA compilers.
https://dblp.org/rec/conf/pldi/FeiM06,Artemis: practical runtime monitoring of applications for execution anomalies.
https://dblp.org/rec/conf/pldi/FengGN12,Effective parallelization of loops in the presence of I/O operations.
https://dblp.org/rec/conf/pldi/FengMBD18,Program synthesis using conflict-driven learning.
https://dblp.org/rec/conf/pldi/FengMGDC17,Component-based synthesis of table consolidation and transformation tasks from examples.
https://dblp.org/rec/conf/pldi/FengSDG08,Certifying low-level programs with hardware interrupts and preemptive threads.
https://dblp.org/rec/conf/pldi/FengSVXN06,Modular verification of assembly code with stack-based control abstractions.
https://dblp.org/rec/conf/pldi/FerlesGDS18,Symbolic reasoning for automatic signal placement.
https://dblp.org/rec/conf/pldi/Fernandez95,Simple and Effective Link-Time Optimization of Modula-3 Programs.
https://dblp.org/rec/conf/pldi/FeserCD15,Synthesizing data structure transformations from input-output examples.
https://dblp.org/rec/conf/pldi/FessantPS98,"An Implementation for Complete, Asynchronous, Distributed Garbage Collection."
https://dblp.org/rec/conf/pldi/FischerCCL21,DIY assistant: a multi-modal end-user programmable virtual assistant.
https://dblp.org/rec/conf/pldi/FischerME12,Engage: a deployment management system.
https://dblp.org/rec/conf/pldi/FisherG05,PADS: a domain-specific language for processing ad hoc data.
https://dblp.org/rec/conf/pldi/FisherG94,Parallelizing Complex Scans and Reductions.
https://dblp.org/rec/conf/pldi/FisherR99,The Design of a Class Mechanism for Moby.
https://dblp.org/rec/conf/pldi/FlanaganF00,Type-based race detection for Java.
https://dblp.org/rec/conf/pldi/FlanaganF09,FastTrack: efficient and precise dynamic race detection.
https://dblp.org/rec/conf/pldi/FlanaganF10,Adversarial memory for detecting destructive races.
https://dblp.org/rec/conf/pldi/FlanaganF97,Componential Set-Based Analysis.
https://dblp.org/rec/conf/pldi/FlanaganFKWF96,Static Debugging: Browsing the Web of Program Invariants.
https://dblp.org/rec/conf/pldi/FlanaganFY08,Velodrome: a sound and complete dynamic atomicity checker for multithreaded programs.
https://dblp.org/rec/conf/pldi/FlanaganLLNSS02,Extended Static Checking for Java.
https://dblp.org/rec/conf/pldi/FlanaganQ03,A type and effect system for atomicity.
https://dblp.org/rec/conf/pldi/FlanaganSDF93,The Essence of Compiling with Continuations.
https://dblp.org/rec/conf/pldi/FlattD20,Compiler and runtime support for continuation marks.
https://dblp.org/rec/conf/pldi/FlattF04,Kill-safe synchronization abstractions.
https://dblp.org/rec/conf/pldi/FlattF98,Units: Cool Modules for HOT Languages.
https://dblp.org/rec/conf/pldi/FluckigerJKV22,Deoptless: speculation with dispatched on-stack replacement and specialized continuations.
https://dblp.org/rec/conf/pldi/FosterFA99,A Theory of Type Qualifiers.
https://dblp.org/rec/conf/pldi/FosterTA02,Flow-Sensitive Type Qualifiers.
https://dblp.org/rec/conf/pldi/FranchettiVP05,Formal loop merging for signal transforms.
https://dblp.org/rec/conf/pldi/Fraser89,A Language for Writing Code Generators.
https://dblp.org/rec/conf/pldi/Fraser99,Automatic Inference of Models for Statistical Code Compression.
https://dblp.org/rec/conf/pldi/FraserP99,Finite-Static Code Generation.
https://dblp.org/rec/conf/pldi/FraserW88,Automatic Generation of Fast Optimizing Code Generators.
https://dblp.org/rec/conf/pldi/FreemanP91,Refinement Types for ML.
https://dblp.org/rec/conf/pldi/FremontDGYSS19,Scenic: a language for scenario specification and scene generation.
https://dblp.org/rec/conf/pldi/FriedmanBWBP20,"NVTraverse: in NVRAM data structures, the destination is more important than the journey."
https://dblp.org/rec/conf/pldi/FriedmanPR21,Mirror: making lock-free data structures persistent.
https://dblp.org/rec/conf/pldi/Frigo99,A Fast Fourier Transform Compiler.
https://dblp.org/rec/conf/pldi/FrigoLR98,The Implementation of the Cilk-5 Multithreaded Language.
https://dblp.org/rec/conf/pldi/FritzsonGKS91,Generalized Algorithmic Debugging and Testing.
https://dblp.org/rec/conf/pldi/FurrF05,Checking type safety of foreign function calls.
https://dblp.org/rec/conf/pldi/FuS17,Achieving high coverage for floating-point code via unconstrained programming.
https://dblp.org/rec/conf/pldi/FuS19,Effective floating-point analysis via weak-distance minimization.
https://dblp.org/rec/conf/pldi/GalESAMHKHZORSRBCF09,Trace-based just-in-time type specialization for dynamic languages.
https://dblp.org/rec/conf/pldi/GammieHE15,Relaxing safely: verified on-the-fly garbage collection for x86-TSO.
https://dblp.org/rec/conf/pldi/GaoSBMBL13,Using managed runtime systems to tolerate holes in wearable memories.
https://dblp.org/rec/conf/pldi/GaoWN91,A Timed Petri-Net Model for Fine-Grain Loop Scheduling.
https://dblp.org/rec/conf/pldi/GarciaJLT11,Kremlin: rethinking and rebooting gprof for the multicore age.
https://dblp.org/rec/conf/pldi/Gargi02,A Sparse Algorithm for Predicated Global Value Numbering.
https://dblp.org/rec/conf/pldi/GayA01,Language Support for Regions.
https://dblp.org/rec/conf/pldi/GayA98,Memory Management with Explicit Regions.
https://dblp.org/rec/conf/pldi/GayLBWBC03,The nesC language: A holistic approach to networked embedded systems.
https://dblp.org/rec/conf/pldi/GazzilloG12,SuperC: parsing all of C by taming the preprocessor.
https://dblp.org/rec/conf/pldi/GehrMTVWV18,Bayonet: probabilistic inference for networks.
https://dblp.org/rec/conf/pldi/GehrSV20,λPSI: exact inference for higher-order probabilistic programs.
https://dblp.org/rec/conf/pldi/GelernterJL87,"Parallelism, persistence and meta-cleanliness in the symmetric Lisp interpreter."
https://dblp.org/rec/conf/pldi/GencBX20,"Crafty: efficient, HTM-compatible persistent transactions."
https://dblp.org/rec/conf/pldi/GenevesLS07,Efficient static analysis of XML paths and types.
https://dblp.org/rec/conf/pldi/GeorgeB03,Taming the IXP network processor.
https://dblp.org/rec/conf/pldi/GershuniAGNNRRS19,Simple and precise static analysis of untrusted Linux kernel extensions.
https://dblp.org/rec/conf/pldi/GhemawatRS00,Field analysis: getting useful and low-cost interprocedural information.
https://dblp.org/rec/conf/pldi/GhiyaLS01,On the Importance of Points-to Analysis and Other Memory Disambiguation Methods for C Programs.
https://dblp.org/rec/conf/pldi/GiannarakisLBW20,NV: an intermediate language for verification of network control planes.
https://dblp.org/rec/conf/pldi/Giegerich90,On the Structure of Verifiable Code Generator Specifications.
https://dblp.org/rec/conf/pldi/GleissenthallBR16,Cardinalities and universal quantifiers for verifying parameterized systems.
https://dblp.org/rec/conf/pldi/Godefroid11,Higher-order test generation.
https://dblp.org/rec/conf/pldi/GodefroidKL08,Grammar-based whitebox fuzzing.
https://dblp.org/rec/conf/pldi/GodefroidKS05,DART: directed automated random testing.
https://dblp.org/rec/conf/pldi/GodefroidT12,Automated synthesis of symbolic instruction encodings from I/O samples.
https://dblp.org/rec/conf/pldi/GoffKT91,Practical Dependence Testing.
https://dblp.org/rec/conf/pldi/GogteDWNCW18,Persistency for synchronization-free regions.
https://dblp.org/rec/conf/pldi/Golan-GuetaRSY13,Concurrent libraries with foresight.
https://dblp.org/rec/conf/pldi/Goldberg89,Generational Reference Counting: A Reduced-Communication Distributed Storage Reclamation Scheme.
https://dblp.org/rec/conf/pldi/Goldberg91,Tag-Free Garbage Collection for Strongly Typed Programming Languages.
https://dblp.org/rec/conf/pldi/GonnordMR15,Synthesis of ranking functions using extremal counterexamples.
https://dblp.org/rec/conf/pldi/Goodwin97,Interprocedural Dataflow Analysis in an Executable Optimizer.
https://dblp.org/rec/conf/pldi/GopinathGSS19,Compiling KB-sized machine learning models to tiny IoT devices.
https://dblp.org/rec/conf/pldi/GordonEG13,Rely-guarantee references for refinement types over aliased mutable data.
https://dblp.org/rec/conf/pldi/GorjiaraLLXD22,Checking robustness to weak persistency models.
https://dblp.org/rec/conf/pldi/GotsmanBCS07,Thread-modular shape analysis.
https://dblp.org/rec/conf/pldi/GrahamLS93,Orchestrating Interactions Among Parallel Computations.
https://dblp.org/rec/conf/pldi/GranlundK92,Eliminating Branches using a Superoptimizer and the GNU C Compiler.
https://dblp.org/rec/conf/pldi/GranlundM94,Division by Invariant Integers using Multiplication.
https://dblp.org/rec/conf/pldi/GrantPMCE99,An Evaluation of Staged Run-Time Optimizations in DyC.
https://dblp.org/rec/conf/pldi/GrebenshchikovLPR12,Synthesizing software verifiers from proof rules.
https://dblp.org/rec/conf/pldi/GreenawayLAK14,Don't sweat the small stuff: formal verification of C code without the pain.
https://dblp.org/rec/conf/pldi/GreenLRSV13,Quipper: a scalable quantum programming language.
https://dblp.org/rec/conf/pldi/Greenman22,Deep and shallow types for gradual languages.
https://dblp.org/rec/conf/pldi/GreenmanMT14,Getting F-bounded polymorphism into shape.
https://dblp.org/rec/conf/pldi/GrewalDH22,P4BID: information flow control in p4.
https://dblp.org/rec/conf/pldi/Grimm06,Better extensibility through modular syntax.
https://dblp.org/rec/conf/pldi/GrossmanMJHWC02,Region-Based Memory Management in Cyclone.
https://dblp.org/rec/conf/pldi/GrossZZ89,Parallel Compilation for a Parallel Machine.
https://dblp.org/rec/conf/pldi/GroveT93,Interprocedural Constant Propagation: A Study of Jump Function Implementations.
https://dblp.org/rec/conf/pldi/GrunwaldZH93,Improving the Cache Locality of Memory Allocation.
https://dblp.org/rec/conf/pldi/GuanSL19,Wootz: a compiler-based framework for fast CNN pruning via composability.
https://dblp.org/rec/conf/pldi/GuerraouiHJS08,Model checking transactional memories.
https://dblp.org/rec/conf/pldi/GuerraouiKL12,Speculative linearizability.
https://dblp.org/rec/conf/pldi/GuhaRF13,Machine-verified network controllers.
https://dblp.org/rec/conf/pldi/GulwaniJK09,Control-flow refinement and progress invariants for bound analysis.
https://dblp.org/rec/conf/pldi/GulwaniJTV11,Synthesis of loop-free programs.
https://dblp.org/rec/conf/pldi/GulwaniKT11,Synthesizing geometry constructions.
https://dblp.org/rec/conf/pldi/GulwaniRZ18,Automated clustering and program repair for introductory programming assignments.
https://dblp.org/rec/conf/pldi/GulwaniSV08,Program analysis as constraint solving.
https://dblp.org/rec/conf/pldi/GulwaniT06,Combining abstract interpreters.
https://dblp.org/rec/conf/pldi/GulwaniZ10,The reachability-bound problem.
https://dblp.org/rec/conf/pldi/GuoCT0SP22,Type-directed program synthesis for RESTful APIs.
https://dblp.org/rec/conf/pldi/GuoVA07,Shape analysis with inductive recursion synthesis.
https://dblp.org/rec/conf/pldi/Gupta90,A Fresh Look at Optimizing Array Bound Checking.
https://dblp.org/rec/conf/pldi/GuptaSS14,Globally precise-restartable execution of parallel programs.
https://dblp.org/rec/conf/pldi/GuptaSS89,Register Allocation via Clique Separators.
https://dblp.org/rec/conf/pldi/GuriaFH21,RbSyn: type- and effect-guided program synthesis.
https://dblp.org/rec/conf/pldi/GuriaVGP22,ANOSY: approximated knowledge synthesis with refinement types for declassification.
https://dblp.org/rec/conf/pldi/GuSKWKS0CR18,Certified concurrent abstraction layers.
https://dblp.org/rec/conf/pldi/GuyerMF06,Free-Me: a static analysis for automatic individual object reclamation.
https://dblp.org/rec/conf/pldi/GveroKKP13,Complete completion using types and weights.
https://dblp.org/rec/conf/pldi/GysiGBH19,A fast analytical model of fully associative caches.
https://dblp.org/rec/conf/pldi/HaasRSTHGWZB17,Bringing the web up to speed with WebAssembly.
https://dblp.org/rec/conf/pldi/HackettG12,Fast and precise hybrid type inference for JavaScript.
https://dblp.org/rec/conf/pldi/HackG08,Copy coalescing by graph recoloring.
https://dblp.org/rec/conf/pldi/HalbwachsP08,Discovering properties about arrays in simple programs.
https://dblp.org/rec/conf/pldi/HallahanXBJP19,Lazy counterfactual symbolic execution.
https://dblp.org/rec/conf/pldi/HallemCXE02,"A System and Language for Building System-Specific, Static Analyses."
https://dblp.org/rec/conf/pldi/HallenbergET02,Combining Region Inference and Garbage Collection.
https://dblp.org/rec/conf/pldi/HammerAC09,CEAL: a C-based language for self-adjusting computation.
https://dblp.org/rec/conf/pldi/HammerKHF14,"Adapton: composable, demand-driven incremental computation."
https://dblp.org/rec/conf/pldi/HansonP01,Dynamic Variables.
https://dblp.org/rec/conf/pldi/HanxledenDMSMAMO14,SCCharts: sequentially constructive statecharts for safety-critical applications: HW/SW-synthesis for a conservative extension of synchronous statecharts.
https://dblp.org/rec/conf/pldi/HanxledenK92,Relaxing SIMD Control Flow Constraints using Loop Transformations.
https://dblp.org/rec/conf/pldi/HanxledenK94,GIVE-N-TAKE - A Balanced Code Placement Framework.
https://dblp.org/rec/conf/pldi/HardekopfL07,The ant and the grasshopper: fast and accurate pointer analysis for millions of lines of code.
https://dblp.org/rec/conf/pldi/HaRDRRPCW07,Improved error reporting for software that uses black-box components.
https://dblp.org/rec/conf/pldi/HarrES87,Interpreting ABF - a language for document construction.
https://dblp.org/rec/conf/pldi/HarrisG11,Spreadsheet table transformations from examples.
https://dblp.org/rec/conf/pldi/HarrisPST06,Optimizing memory transactions.
https://dblp.org/rec/conf/pldi/HashemiKC97,Efficient Procedure Mapping Using Cache Line Coloring.
https://dblp.org/rec/conf/pldi/HastiH98,Using Static Single Assignment Form to Improve Flow-Insensitive Pointer Analysis.
https://dblp.org/rec/conf/pldi/HathhornER15,Defining the undefinedness of C.
https://dblp.org/rec/conf/pldi/HawkinsAFRS11,Data representation synthesis.
https://dblp.org/rec/conf/pldi/HawkinsAFRS12,Concurrent data representation synthesis.
https://dblp.org/rec/conf/pldi/HeeringKR89,Incremental Generation of Parsers.
https://dblp.org/rec/conf/pldi/HeineL03,A practical flow-sensitive and context-sensitive C and C++ memory leak detector.
https://dblp.org/rec/conf/pldi/HeintzeM97,Linear-time Subtransitive Control Flow Analysis.
https://dblp.org/rec/conf/pldi/HeintzeT01,Demand-Driven Pointer Analysis.
https://dblp.org/rec/conf/pldi/HeintzeT01a,Ultra-fast Aliasing Analysis using CLA: A Million Lines of C Code in a Second.
https://dblp.org/rec/conf/pldi/HeLRV21,Learning to find naming issues with big code and small supervision.
https://dblp.org/rec/conf/pldi/HendrenHN92,Abstractions for Recursive Pointer Data Structures: Improving the Analysis of Imperative Programs.
https://dblp.org/rec/conf/pldi/HenriksenSEHO17,Futhark: purely functional GPU-programming with nested parallelism and in-place array updates.
https://dblp.org/rec/conf/pldi/HenryWF90,The University of Washington Illustrating Compiler.
https://dblp.org/rec/conf/pldi/HentenryckCC94,Type Analysis of Prolog Using Type Graphs.
https://dblp.org/rec/conf/pldi/HentenryckR94,Backtracking without Trailing in CLP(RLin).
https://dblp.org/rec/conf/pldi/HenzingerJM04,Race checking by context inference.
https://dblp.org/rec/conf/pldi/HenzingerK02,"The Embedded Machine: Predictable, Portable Real-Time Code."
https://dblp.org/rec/conf/pldi/HeoRSN19,Continuously reasoning about programs using differential Bayesian inference.
https://dblp.org/rec/conf/pldi/Herlihy05,The transactional manifesto: software engineering and non-blocking synchronization.
https://dblp.org/rec/conf/pldi/Herman20,Faster general parsing through context-free memoization.
https://dblp.org/rec/conf/pldi/HertzFB05,Garbage collection without paging.
https://dblp.org/rec/conf/pldi/HeSF21,Satisfiability modulo ordering consistency theory for multi-threaded program verification.
https://dblp.org/rec/conf/pldi/HeSPV20,Learning fast and precise numerical analysis.
https://dblp.org/rec/conf/pldi/HeuleS0A16,Stratified synthesis: automatically learning the x86-64 instruction set.
https://dblp.org/rec/conf/pldi/HeydonLY00,Caching function calls using precise dependencies.
https://dblp.org/rec/conf/pldi/HicksMN01,Dynamic Software Updating.
https://dblp.org/rec/conf/pldi/HiebDB90,Representing Control in the Presence of First-Class Continuations.
https://dblp.org/rec/conf/pldi/Hoare14,Laws of concurrent programming.
https://dblp.org/rec/conf/pldi/HoffmanEJ09,Semantics-aware trace analysis.
https://dblp.org/rec/conf/pldi/HolewinskiRRFPRS12,Dynamic trace-based analysis of vectorization potential of applications.
https://dblp.org/rec/conf/pldi/HolzleCU92,Debugging Optimized Code with Dynamic Deoptimization.
https://dblp.org/rec/conf/pldi/HolzleU94,Optimizing Dynamically-Dispatched Calls with Run-Time Type Feedback.
https://dblp.org/rec/conf/pldi/HongB0KPRRS16,Effective padding of multidimensional arrays to avoid cache conflict misses.
https://dblp.org/rec/conf/pldi/HongG93,Compiling Real-Time Programs into Schedulable Code.
https://dblp.org/rec/conf/pldi/HongSKRKPRS18,GPU code optimization using abstract kernel emulation and sensitivity analysis.
https://dblp.org/rec/conf/pldi/HonoreSKS22,Adore: atomic distributed objects with certified reconfiguration.
https://dblp.org/rec/conf/pldi/HooimeijerW09,A decision procedure for subset constraints over regular languages.
https://dblp.org/rec/conf/pldi/Hoover92,Alphonse: Incremental Computation as a Programming Abstraction.
https://dblp.org/rec/conf/pldi/HorwatCD89,Experience with CST: Programming and Implementation.
https://dblp.org/rec/conf/pldi/Horwitz90,Identifying the Semantic and Textual Differences Between Two Versions of a Program.
https://dblp.org/rec/conf/pldi/HorwitzPR89,Dependence Analysis for Pointer Variables.
https://dblp.org/rec/conf/pldi/HorwitzRB88,Interprocedural Slicing Using Dependence Graphs.
https://dblp.org/rec/conf/pldi/HoushmandSL22,Hamband: RDMA replicated data types.
https://dblp.org/rec/conf/pldi/HsiaoPYPNCKF14,Race detection for event-driven mobile applications.
https://dblp.org/rec/conf/pldi/HsuK03,"The design, implementation, and evaluation of a compiler algorithm for CPU energy reduction."
https://dblp.org/rec/conf/pldi/Huang15,Stateless model checking concurrent programs with maximal causality reduction.
https://dblp.org/rec/conf/pldi/HuangMR14,Maximal sound predictive race detection with control flow abstraction.
https://dblp.org/rec/conf/pldi/HuangQSW20,Reconciling enumerative and deductive program synthesis.
https://dblp.org/rec/conf/pldi/HuangS08,Expressive and safe static reflection with MorphJ.
https://dblp.org/rec/conf/pldi/HuangTM17,Compiling Markov chain Monte Carlo algorithms for probabilistic modeling.
https://dblp.org/rec/conf/pldi/HuangZD13,CLAP: recording local executions to reproduce concurrency failures.
https://dblp.org/rec/conf/pldi/HuCDR20,Exact and approximate methods for proving unrealizability of syntax-guided synthesis problems.
https://dblp.org/rec/conf/pldi/HuD17,Automatic program inversion using symbolic transducers.
https://dblp.org/rec/conf/pldi/Huff93,Lifetime-Sensitive Modulo Scheduling.
https://dblp.org/rec/conf/pldi/HuguetLT87,A block-and-actions generator as an alternative to a simulator for collecting architecture measurements.
https://dblp.org/rec/conf/pldi/HummelHN94,"A General Data Dependence Test for Dynamic, Pointer-Based Data Structures."
https://dblp.org/rec/conf/pldi/HungG13,AutoSynch: an automatic-signal monitor based on predicate tagging.
https://dblp.org/rec/conf/pldi/HurNRS14,Slicing probabilistic programs.
https://dblp.org/rec/conf/pldi/HuZJS21,An efficient interpreter for Datalog by de-specializing relations.
https://dblp.org/rec/conf/pldi/HwuC89,Inline Function Expansion for Compiling C Programs.
https://dblp.org/rec/conf/pldi/IkarashiBRGR22,Exocompilation for productive programming of hardware accelerators.
https://dblp.org/rec/conf/pldi/InagakiOKN03,Stride prefetching by dynamically inspecting objects.
https://dblp.org/rec/conf/pldi/InoueKN09,A study of memory management for web-based applications on multicore processors.
https://dblp.org/rec/conf/pldi/IsradisaikulM13,Reconciling exhaustive pattern matching with objects.
https://dblp.org/rec/conf/pldi/IsradisaikulM15,Finding counterexamples from parsing conflicts.
https://dblp.org/rec/conf/pldi/ItzhakyPPRS21,Cyclic program synthesis.
https://dblp.org/rec/conf/pldi/IyerJPRR19,Synthesis and machine learning for heterogeneous extraction.
https://dblp.org/rec/conf/pldi/JablinPJJBA11,Automatic CPU-GPU communication management and optimization.
https://dblp.org/rec/conf/pldi/JacekCMM16,Assessing the limits of program-specific garbage collection performance.
https://dblp.org/rec/conf/pldi/Jacobs90,Type Declarations as Subtype Constraints in Logic Programming.
https://dblp.org/rec/conf/pldi/JaffarMSY92,An Abstract Machine for CLP(R).
https://dblp.org/rec/conf/pldi/JaffarMY91,A Methodology for Managing Hard Constraints in CLP Systems.
https://dblp.org/rec/conf/pldi/JagannathanP92,A Customizable Substrate for Concurrent Languages.
https://dblp.org/rec/conf/pldi/JagannathanPVPL14,Atomicity refinement for verified compilation.
https://dblp.org/rec/conf/pldi/JagannathanW96,Flow-directed Inlining.
https://dblp.org/rec/conf/pldi/Jain91,Circular Scheduling: A New Technique to Perform Software Pipelining.
https://dblp.org/rec/conf/pldi/JainT88,An Efficient Approach to Data Flow Analysis in a Multi Pass Global Optimizer.
https://dblp.org/rec/conf/pldi/JarviGWLS06,Algorithm specialization in generic programming: challenges of constrained generics in C++.
https://dblp.org/rec/conf/pldi/JensenJKS97,Automatic Verification of Pointer Programs using Monadic Second-Order Logic.
https://dblp.org/rec/conf/pldi/JhalaM05,Path slicing.
https://dblp.org/rec/conf/pldi/Jiang0TGSKZ21,Fluid: a framework for approximate concurrency via controlled dependency relaxation.
https://dblp.org/rec/conf/pldi/JiangLXZF19,Towards certified separate compilation for concurrent programs.
https://dblp.org/rec/conf/pldi/JiLXZH20,Question selection for interactive program synthesis.
https://dblp.org/rec/conf/pldi/Jimenez05,Code placement for improving dynamic branch prediction accuracy.
https://dblp.org/rec/conf/pldi/JinMGR11,Garbage collection for monitoring parametric properties.
https://dblp.org/rec/conf/pldi/JinSSSL12,Understanding and detecting real-world performance bugs.
https://dblp.org/rec/conf/pldi/JinSZLL11,Automated atomicity-violation fixing.
https://dblp.org/rec/conf/pldi/Johnson87,GL-a denotational testbed with continuations and partial continuations as first-class objects.
https://dblp.org/rec/conf/pldi/JohnsonE06,Context-sensitive domain-independent algorithm composition and selection.
https://dblp.org/rec/conf/pldi/JohnsonEV04,Min-cut program decomposition for thread-level speculation.
https://dblp.org/rec/conf/pldi/JohnsonKPZA12,Speculative separation for privatization and reductions.
https://dblp.org/rec/conf/pldi/JohnsonOZA13,Fast condensation of the program dependence graph.
https://dblp.org/rec/conf/pldi/JohnsonP93,Dependence-Based Program Analysis.
https://dblp.org/rec/conf/pldi/JohnsonPP94,The Program Structure Tree: Computing Control Regions in Linear Time.
https://dblp.org/rec/conf/pldi/JohnsonWMC15,Exploring and enforcing security guarantees via program dependence graphs.
https://dblp.org/rec/conf/pldi/JoishaB03,Static array storage optimization in MATLAB.
https://dblp.org/rec/conf/pldi/JonesOR22,CycleQ: an efficient basis for cyclic equational reasoning.
https://dblp.org/rec/conf/pldi/JonesRHHM99,A Semantics for Imprecise Exceptions.
https://dblp.org/rec/conf/pldi/JoseM11,Cause clue clauses: error localization using maximum satisfiability.
https://dblp.org/rec/conf/pldi/JoshiNR02,Denali: A Goal-directed Superoptimizer.
https://dblp.org/rec/conf/pldi/JoshiPSN09,A randomized dynamic program analysis technique for detecting real deadlocks.
https://dblp.org/rec/conf/pldi/JourdanPJDB90,"Design, Implementation and Evaluation of the FNC-2 Attribute Grammar System."
https://dblp.org/rec/conf/pldi/JouvelotG89,Reasoning about Continuations with Control Effects.
https://dblp.org/rec/conf/pldi/JungDL21,DeepCuts: a deep learning optimization framework for versatile GPU workloads.
https://dblp.org/rec/conf/pldi/JungRRCP11,Brainy: effective selection of data structures.
https://dblp.org/rec/conf/pldi/Kahlon08,Bootstrapping: a technique for scalable flow and context-sensitive pointer alias analysis.
https://dblp.org/rec/conf/pldi/KakiPL22,RunTime-assisted convergence in replicated data types.
https://dblp.org/rec/conf/pldi/KalhaugeP21,Logical bytecode reduction.
https://dblp.org/rec/conf/pldi/KamilCIS16,Verified lifting of stencil computations.
https://dblp.org/rec/conf/pldi/KamruzzamanST10,Software data spreading: leveraging distributed caches to improve single thread performance.
https://dblp.org/rec/conf/pldi/KandemirT0RK21,Distance-in-time versus distance-in-space.
https://dblp.org/rec/conf/pldi/KandemirYMSIZ10,Cache topology aware computation mapping for multicores.
https://dblp.org/rec/conf/pldi/KangHMGZV15,A formal C memory model supporting integer-pointer casts.
https://dblp.org/rec/conf/pldi/KangJ20,A marriage of pointer- and epoch-based reclamation.
https://dblp.org/rec/conf/pldi/KangKSLPSKCCHY18,Crellvm: verified credible compilation for LLVM.
https://dblp.org/rec/conf/pldi/KapusIIRC19,Computing summaries of string loops in C for better testing and refactoring.
https://dblp.org/rec/conf/pldi/KarinthiW87,Incremental re-execution of programs.
https://dblp.org/rec/conf/pldi/KastrinisS13,Hybrid context-sensitivity for points-to analysis.
https://dblp.org/rec/conf/pldi/KawaguchiRBJ12,Deterministic parallelism via liquid effects.
https://dblp.org/rec/conf/pldi/KawaguchiRJ09,Type-based data structure verification.
https://dblp.org/rec/conf/pldi/KawahitoKN02,Effective Sign Extension Elimination.
https://dblp.org/rec/conf/pldi/KazerounianGVFH19,Type-level computations for Ruby libraries.
https://dblp.org/rec/conf/pldi/KearnsF87,CCAL: An interpreted language for experimentation in concurrent control.
https://dblp.org/rec/conf/pldi/KediaCPVVB17,"Simple, fast, and safe manual memory management."
https://dblp.org/rec/conf/pldi/KennedyS01,Design and Implementation of Generics for the .NET Common Language Runtime.
https://dblp.org/rec/conf/pldi/KentKT16,Occurrence typing modulo theories.
https://dblp.org/rec/conf/pldi/KermanyP06,"The Compressor: concurrent, incremental, and parallel compaction."
https://dblp.org/rec/conf/pldi/KernsE93,Balanced Scheduling: Instruction Scheduling When Memory Latency is Uncertain.
https://dblp.org/rec/conf/pldi/Kessler90,Fast Breakpoints: Design and Implementation.
https://dblp.org/rec/conf/pldi/KeutzerW88,Anatomy of a Hardware Compiler.
https://dblp.org/rec/conf/pldi/KhanZPMK19,Huron: hybrid false sharing detection and repair.
https://dblp.org/rec/conf/pldi/KhooCF10,Mixing type checking and symbolic execution.
https://dblp.org/rec/conf/pldi/KillianABJV07,Mace: language support for building distributed systems.
https://dblp.org/rec/conf/pldi/KimJJKL16,A distributed OpenCL framework using redundant computation and data replication.
https://dblp.org/rec/conf/pldi/KimR11,Verification of semantic commutativity conditions and inverse operations on linked data structures.
https://dblp.org/rec/conf/pldi/KimZLALJ20,Compiler-directed soft error resilience for lightweight GPU register file protection.
https://dblp.org/rec/conf/pldi/KincaidBBR17,Compositional recurrence analysis revisited.
https://dblp.org/rec/conf/pldi/KiniM017,Dynamic race prediction in linear time.
https://dblp.org/rec/conf/pldi/KishonHC91,"Monitoring Semantics: A Formal Framework for Specifying, Implementing, and Reasoning about Execution Monitors."
https://dblp.org/rec/conf/pldi/KislalKTKJ18,Enhancing computation-to-core assignment with physical location information.
https://dblp.org/rec/conf/pldi/KnoblockR96,Data Specialization.
https://dblp.org/rec/conf/pldi/KnoopRS92,Lazy Code Motion.
https://dblp.org/rec/conf/pldi/KnoopRS94,Partial Dead Code Elimination.
https://dblp.org/rec/conf/pldi/KnoopRS95,The Power of Assignment Motion.
https://dblp.org/rec/conf/pldi/KnothWP019,Resource-guided program synthesis.
https://dblp.org/rec/conf/pldi/KobayashiSU11,Predicate abstraction and CEGAR for higher-order model checking.
https://dblp.org/rec/conf/pldi/KoBS15,LaminarIR: compile-time queues for structured streams.
https://dblp.org/rec/conf/pldi/KodukulaAP97,Data-centric Multi-level Blocking.
https://dblp.org/rec/conf/pldi/KodumalA04,The set constraint/CFL reachability connection in practice.
https://dblp.org/rec/conf/pldi/KodumalA07,Regularly annotated set constraints.
https://dblp.org/rec/conf/pldi/KoenigPA21,Adaptive restarts for stochastic synthesis.
https://dblp.org/rec/conf/pldi/KoenigPIA20,First-order quantified separators.
https://dblp.org/rec/conf/pldi/KoenigS21,CompCertO: compiling certified open C components.
https://dblp.org/rec/conf/pldi/KoeplingerFPZHF18,Spatial: a language and compiler for application accelerators.
https://dblp.org/rec/conf/pldi/KoesG06,A global progressive register allocator.
https://dblp.org/rec/conf/pldi/Kokologiannakis19,Model checking for weakly consistent libraries.
https://dblp.org/rec/conf/pldi/KolteH93,Load/Store Range Analysis for Global Register Allocation.
https://dblp.org/rec/conf/pldi/KolteW95,Elimination of Redundant Array Subscript Range Checks.
https://dblp.org/rec/conf/pldi/KongP19,Model-driven transformations for multi- and many-core CPUs.
https://dblp.org/rec/conf/pldi/KongVSFPS13,When polyhedral transformations meet SIMD code generation.
https://dblp.org/rec/conf/pldi/KongYCGHM022,Software-hardware codesign for efficient in-memory regular pattern matching.
https://dblp.org/rec/conf/pldi/KoopmanL89,A Fresh Look at Combinator Graph Reduction.
https://dblp.org/rec/conf/pldi/KortbeekGHCP22,WARio: efficient code generation for intermittent computing.
https://dblp.org/rec/conf/pldi/KosekiKN02,Preference-Directed Graph Coloring.
https://dblp.org/rec/conf/pldi/KoskimiesP87,TOOLS: a unifying approach to object-oriented language interpretation.
https://dblp.org/rec/conf/pldi/KoskinenP15,The Push/Pull model of transactions.
https://dblp.org/rec/conf/pldi/KostyukovMF21,Beyond the elementary representations of program invariants over algebraic data types.
https://dblp.org/rec/conf/pldi/KothariGMG07,Reliable and efficient programming abstractions for wireless sensor networks.
https://dblp.org/rec/conf/pldi/KraglEHMQ20,Inductive sequentialization of asynchronous programs.
https://dblp.org/rec/conf/pldi/Krall87,Implementation of a high-speed Prolog interpreter.
https://dblp.org/rec/conf/pldi/Krall94,Improving Semi-static Branch Prediction by Code Replication.
https://dblp.org/rec/conf/pldi/KranzHM89,Mul-T: A High-Performance Parallel Lisp.
https://dblp.org/rec/conf/pldi/KrintzC01,Using Annotation to Reduce Dynamic Optimization Time.
https://dblp.org/rec/conf/pldi/KrishnamoorthyBBRRS07,Effective automatic parallelization of stencil computations.
https://dblp.org/rec/conf/pldi/KrishnamurthyY95,Optimizing Parallel Programs with Explicit Synchronization.
https://dblp.org/rec/conf/pldi/KrishnaPSW20,Verifying concurrent search structure templates.
https://dblp.org/rec/conf/pldi/KrishnaswamiA05,Permission-based ownership: encapsulating state in higher-order typed languages.
https://dblp.org/rec/conf/pldi/KrishnaswamiY19,"A typed, algebraic approach to parsing."
https://dblp.org/rec/conf/pldi/KruijfSJ12,Static analysis and compiler design for idempotent processing.
https://dblp.org/rec/conf/pldi/KudlurM08,Orchestrating the execution of stream programs on multicore platforms.
https://dblp.org/rec/conf/pldi/KuhlenschmidtAS19,Toward efficient gradual typing for structural types via coercions.
https://dblp.org/rec/conf/pldi/KulkarniHHWDJ04,Fast searches for effective optimization phase sequences.
https://dblp.org/rec/conf/pldi/KulkarniNPSP11,Exploiting the commutativity lattice.
https://dblp.org/rec/conf/pldi/KulkarniPWRBC07,Optimistic parallelism requires abstractions.
https://dblp.org/rec/conf/pldi/KumarMYL01,ESP: A Language for Programmable Devices.
https://dblp.org/rec/conf/pldi/KuncakMPS10,Complete functional synthesis.
https://dblp.org/rec/conf/pldi/KunduTL09,Proving optimizations correct using parameterized program equivalence.
https://dblp.org/rec/conf/pldi/KupersteinVY11,Partial-coherence abstractions for relaxed memory models.
https://dblp.org/rec/conf/pldi/KuperTTN14,Taming the parallel effect zoo: extensible deterministic parallelism with LVish.
https://dblp.org/rec/conf/pldi/KurlanderF94,Zero-cost Range Splitting.
https://dblp.org/rec/conf/pldi/KuznetsovKBC12,Efficient state merging in symbolic execution.
https://dblp.org/rec/conf/pldi/LahavB20,Decidable verification under a causally consistent shared memory.
https://dblp.org/rec/conf/pldi/LahavM19,Robustness against release/acquire semantics.
https://dblp.org/rec/conf/pldi/LahavVKHD17,Repairing sequential consistency in C/C++11.
https://dblp.org/rec/conf/pldi/LalQ15,DAG inlining: a decision procedure for reachability-modulo-theories in hierarchical programs.
https://dblp.org/rec/conf/pldi/Lam88,Software Pipelining: An Effective Scheduling Technique for VLIW Machines.
https://dblp.org/rec/conf/pldi/LambTA03,Linear analysis and optimization of stream programs.
https://dblp.org/rec/conf/pldi/LandiR92,A Safe Approximate Algorithm for Interprocedural Pointer Aliasing.
https://dblp.org/rec/conf/pldi/LandiRZ93,Interprocedural Side Effect Analysis With Pointer Aliasing.
https://dblp.org/rec/conf/pldi/LangD87,Incremental incrementally compacting garbage collection.
https://dblp.org/rec/conf/pldi/LarsenA00,Exploiting superword level parallelism with multimedia instruction sets.
https://dblp.org/rec/conf/pldi/Larus13,Look up!: your future is in the cloud.
https://dblp.org/rec/conf/pldi/Larus99,Whole Program Paths.
https://dblp.org/rec/conf/pldi/LarusH88,Detecting Conflicts Between Structure Accesses.
https://dblp.org/rec/conf/pldi/LarusS95,EEL: Machine-Independent Executable Editing.
https://dblp.org/rec/conf/pldi/LasserCFR21,CoStar: a verified ALL(*) parser.
https://dblp.org/rec/conf/pldi/LattnerA05,Automatic pool allocation: improving performance by controlling data structure layout in the heap.
https://dblp.org/rec/conf/pldi/LattnerLA07,Making context-sensitive points-to analysis with heap cloning practical for the real world.
https://dblp.org/rec/conf/pldi/LauAHC06,Online performance auditing: using hot optimizations without getting burned.
https://dblp.org/rec/conf/pldi/Launchbury91,Strictness and Binding-Time Analyses: Two for the Price of One.
https://dblp.org/rec/conf/pldi/LaunchburyJ94,Lazy Functional State Threads.
https://dblp.org/rec/conf/pldi/LaurenzanoHSMMT16,Input responsiveness: using canary inputs to dynamically steer approximation.
https://dblp.org/rec/conf/pldi/LeAS14,Compiler validation via equivalence modulo inputs.
https://dblp.org/rec/conf/pldi/LeeB90,Optimizing Programs over the Constructive Reals.
https://dblp.org/rec/conf/pldi/LeeCFN12,Chimera: hybrid program analysis for determinism.
https://dblp.org/rec/conf/pldi/LeeCPCHLV20,Promising 2.0: global optimizations in relaxed memory concurrency.
https://dblp.org/rec/conf/pldi/LeeHAN18,Accelerating search-based program synthesis using learned probabilistic models.
https://dblp.org/rec/conf/pldi/LeeKSHDMRL17,Taming undefined behavior in LLVM.
https://dblp.org/rec/conf/pldi/LeeL96,Optimizing ML with Run-Time Code Generation.
https://dblp.org/rec/conf/pldi/LeeLLMZ19,Programming support for autonomizing software.
https://dblp.org/rec/conf/pldi/LeeLOY20,Optimizing homomorphic evaluation circuits by program synthesis and term rewriting.
https://dblp.org/rec/conf/pldi/LeeSA16,Verifying bit-manipulations of floating-point.
https://dblp.org/rec/conf/pldi/LeeWHGM10,Jinn: synthesizing dynamic bug detectors for foreign language interfaces.
https://dblp.org/rec/conf/pldi/LeeZSZ11,Toward generating reducible replay logs.
https://dblp.org/rec/conf/pldi/LeG14,FlashExtract: a framework for data extraction by examples.
https://dblp.org/rec/conf/pldi/LeinoPZ02,Using Data Groups to Specify and Check Side Effects.
https://dblp.org/rec/conf/pldi/LeQC15,Termination and non-termination specification inference.
https://dblp.org/rec/conf/pldi/LernerFGC07,Searching for type-error messages.
https://dblp.org/rec/conf/pldi/LernerMC03,Automatically proving the correctness of compiler optimizations.
https://dblp.org/rec/conf/pldi/LeungG99,Static Single Assignment Form for machine Code.
https://dblp.org/rec/conf/pldi/LeungGAGJL12,Verifying GPU kernels by test amplification.
https://dblp.org/rec/conf/pldi/LeungSL15,Interactive parser synthesis by example.
https://dblp.org/rec/conf/pldi/LewisLS98,The Implementation and Evaluation of Fusion and Contraction in Array Languages.
https://dblp.org/rec/conf/pldi/LeZN19,SLING: using dynamic analysis to infer program invariants in separation logic.
https://dblp.org/rec/conf/pldi/LhotakH04,Jedd: a BDD-based relational extension of Java.
https://dblp.org/rec/conf/pldi/LiangF13,Modular verification of linearizability with non-fixed linearization points.
https://dblp.org/rec/conf/pldi/LiangF21,Abstraction for conflict-free replicated data types.
https://dblp.org/rec/conf/pldi/LiangN11,Scaling abstraction refinement via pruning.
https://dblp.org/rec/conf/pldi/LiaoDKTW95,Storage Assignment to Decrease Code Size.
https://dblp.org/rec/conf/pldi/LiaoHM19,"ILC: a calculus for composable, computational cryptography."
https://dblp.org/rec/conf/pldi/LiaoWWSHL02,Post-Pass Binary Adaptation for Software-Based Speculative Precomputation.
https://dblp.org/rec/conf/pldi/LiblitAZJ03,Bug isolation via remote program sampling.
https://dblp.org/rec/conf/pldi/LiblitNZAJ05,Scalable statistical bug isolation.
https://dblp.org/rec/conf/pldi/LiCKK07,Profile-driven energy reduction in network-on-chips.
https://dblp.org/rec/conf/pldi/LiCL20,Securing smart contract with runtime validation.
https://dblp.org/rec/conf/pldi/LidburyD19,Sparse record and replay with controlled scheduling.
https://dblp.org/rec/conf/pldi/LidburyLCD15,Many-core compiler fuzzing.
https://dblp.org/rec/conf/pldi/LiDZI20,Debug information validation for optimized code.
https://dblp.org/rec/conf/pldi/LifflanderK17,Cache locality optimization for recursive programs.
https://dblp.org/rec/conf/pldi/LifflanderKK13,Steal Tree: low-overhead tracing of work stealing schedulers.
https://dblp.org/rec/conf/pldi/LiLCGL19,DFix: automatically fixing timing bugs in distributed systems.
https://dblp.org/rec/conf/pldi/LimN21,High performance correctly rounded math libraries for 32-bit floating point representations.
https://dblp.org/rec/conf/pldi/LinCHYJNC03,A compiler framework for speculative analysis and optimizations.
https://dblp.org/rec/conf/pldi/LinP00,Compiler analysis of irregular memory accesses.
https://dblp.org/rec/conf/pldi/LinWCLDW18,Mapping spiking neural networks onto a manycore neuromorphic architecture.
https://dblp.org/rec/conf/pldi/LiskovS88,Promises: Linguistic Support for Efficient Asynchronous Procedure Calls in Distributed Systems.
https://dblp.org/rec/conf/pldi/LiTCS13,SMAT: an input adaptive auto-tuner for sparse matrix-vector multiplication.
https://dblp.org/rec/conf/pldi/LiTOKCSH11,Caisson: a hardware description language for secure information flow.
https://dblp.org/rec/conf/pldi/LiuH18,D4: fast concurrency debugging with parallel differential analysis.
https://dblp.org/rec/conf/pldi/LiuLLTS021,When threads meet events: efficient and precise static race detection with origins.
https://dblp.org/rec/conf/pldi/LiuMM19,Accelerating sequential consistency for Java with speculative compilation.
https://dblp.org/rec/conf/pldi/LiuNPVY12,Dynamic synthesis for relaxed memory models.
https://dblp.org/rec/conf/pldi/LiuRYSH04,Parametric regular path queries.
https://dblp.org/rec/conf/pldi/LiuSWTL18,iReplayer: in-situ and identical record-and-replay for multithreaded applications.
https://dblp.org/rec/conf/pldi/LiuW18,CUBA: interprocedural Context-UnBounded Analysis of concurrent programs.
https://dblp.org/rec/conf/pldi/LiuZJDK12,A compiler framework for extracting superword level parallelism.
https://dblp.org/rec/conf/pldi/LivshitsNRB09,Merlin: specification inference for explicit information flow problems.
https://dblp.org/rec/conf/pldi/LiZ07,"Combining events and threads for scalable network services implementation and evaluation of monadic, application-level concurrency primitives."
https://dblp.org/rec/conf/pldi/LiZR20,Fast graph simplification for interleaved Dyck-reachability.
https://dblp.org/rec/conf/pldi/LiZYZ07,UCC: update-conscious compilation for energy efficiency in wireless sensor networks.
https://dblp.org/rec/conf/pldi/LoE95,Improving Balanced Scheduling with Compiler Optimizations that Increase Instruction-Level Parallelism.
https://dblp.org/rec/conf/pldi/LogozzoLFB14,Verification modulo versions: towards usable verification.
https://dblp.org/rec/conf/pldi/Loitsch10,Printing floating-point numbers quickly and accurately with integers.
https://dblp.org/rec/conf/pldi/LoncaricTE16,Fast synthesis of fast collections.
https://dblp.org/rec/conf/pldi/LongfieldNMT15,Preventing glitches and short circuits in high-level self-timed chip specifications.
https://dblp.org/rec/conf/pldi/LongSR14,Automatic runtime error repair and containment via recovery shepherding.
https://dblp.org/rec/conf/pldi/LoowKTMNAF19,Verified compilation on a verified processor.
https://dblp.org/rec/conf/pldi/LopesLHLR21,Alive2: bounded translation validation for LLVM.
https://dblp.org/rec/conf/pldi/LopesMNR15,Provably correct peephole optimizations with alive.
https://dblp.org/rec/conf/pldi/LorchCKPQSWZ20,Armada: low-effort verification of high-performance concurrent programs.
https://dblp.org/rec/conf/pldi/LoringMK19,Sound regular expression semantics for dynamic symbolic execution of JavaScript.
https://dblp.org/rec/conf/pldi/Lucco00,Split-stream dictionary program compression.
https://dblp.org/rec/conf/pldi/Lucco92,A Dynamic Scheduling Technique for Irregular Parallel Programs.
https://dblp.org/rec/conf/pldi/LuciaR15,"A simpler, safer programming and execution model for intermittent systems."
https://dblp.org/rec/conf/pldi/LuciaWC11,Isolating and understanding concurrency errors using reconstructed execution fragments.
https://dblp.org/rec/conf/pldi/LuehG97,Call-Cost Directed Register Allocation.
https://dblp.org/rec/conf/pldi/LuJS14,Dynamic enforcement of determinism in a parallel scripting language.
https://dblp.org/rec/conf/pldi/LukCMPKLWRH05,Pin: building customized program analysis tools with dynamic instrumentation.
https://dblp.org/rec/conf/pldi/LuuSSD14,A model counter for constraints over unbounded strings.
https://dblp.org/rec/conf/pldi/MachadoLR15,Concurrency debugging with differential schedule projections.
https://dblp.org/rec/conf/pldi/MadsenYL16,From Datalog to flix: a declarative language for fixed points on lattices.
https://dblp.org/rec/conf/pldi/MaengL19,Supporting peripherals in intermittent systems with just-in-time checkpoints.
https://dblp.org/rec/conf/pldi/MaengL20,Adaptive low-overhead scheduling for periodic and reactive intermittent execution.
https://dblp.org/rec/conf/pldi/MaiyaKM14,Race detection for Android applications.
https://dblp.org/rec/conf/pldi/MalekiYB16,Higher-order and tuple-based massively-parallel prefix sums.
https://dblp.org/rec/conf/pldi/MalikSG021,Vectorized secure evaluation of decision forests.
https://dblp.org/rec/conf/pldi/MaLWQBBKX22,"Mako: a low-pause, high-throughput evacuating collector for memory-disaggregated datacenters."
https://dblp.org/rec/conf/pldi/MamourasRAIK17,StreamQRE: modular specification and efficient evaluation of quantitative queries over streaming data.
https://dblp.org/rec/conf/pldi/MamourasSAIT19,Data-trace types for distributed stream processing systems.
https://dblp.org/rec/conf/pldi/MandelinXBK05,Jungloid mining: helping to navigate the API jungle.
https://dblp.org/rec/conf/pldi/MansinghkaSHRCR18,Probabilistic programming with programmable inference.
https://dblp.org/rec/conf/pldi/MarinoMN09,LiteRace: effective sampling for lightweight data-race detection.
https://dblp.org/rec/conf/pldi/MarinoSMMN10,DRFX: a simple and efficient memory model for concurrent programming languages.
https://dblp.org/rec/conf/pldi/MarinoSMMN11,A case for an SC-preserving compiler.
https://dblp.org/rec/conf/pldi/MarletCB99,Efficient Incremental Run-Time Specialization for Free.
https://dblp.org/rec/conf/pldi/MarlowJMR01,Asynchronous Exceptions in Haskell.
https://dblp.org/rec/conf/pldi/MarrSD15,Zero-overhead metaprogramming: reflection and metaobject protocols fast and without compromises.
https://dblp.org/rec/conf/pldi/Maslov92,Delinearization: An Efficient Way to Break Multiloop Dependence Equations.
https://dblp.org/rec/conf/pldi/MathisGMKHZ19,Parser-directed fuzzing.
https://dblp.org/rec/conf/pldi/MatsushitaDJD22,RustHornBelt: a semantic foundation for functional verification of Rust programs with unsafe code.
https://dblp.org/rec/conf/pldi/MaurerDAJ17,Compiling without continuations.
https://dblp.org/rec/conf/pldi/May87,Mimic: a fast system/370 simulator.
https://dblp.org/rec/conf/pldi/MaydanHL91,Efficient and Exact Data Dependence Analysis.
https://dblp.org/rec/conf/pldi/MaziarzELFJ21,Hashing modulo alpha-equivalence.
https://dblp.org/rec/conf/pldi/McCamantE08,Quantitative information flow as network flow capacity.
https://dblp.org/rec/conf/pldi/McClurgHCF15,Efficient synthesis of network updates.
https://dblp.org/rec/conf/pldi/McClurgHFC16,Event-driven network programming.
https://dblp.org/rec/conf/pldi/McCreightSLL07,A general framework for certifying garbage collectors and their mutators.
https://dblp.org/rec/conf/pldi/McFarling91,Procedure Merging with Instruction Caches.
https://dblp.org/rec/conf/pldi/MehraraHHM09,Parallelizing sequential applications on commodity hardware using a low-cost software transactional memory.
https://dblp.org/rec/conf/pldi/MehtaY15,Improving compiler scalability: optimizing large programs at small price.
https://dblp.org/rec/conf/pldi/MemarianMLNCWS16,Into the depths of C: elaborating the de facto standards.
https://dblp.org/rec/conf/pldi/MendisBWKRPZA15,Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code.
https://dblp.org/rec/conf/pldi/MenendezN17,Alive-Infer: data-driven precondition inference for peephole optimizations in LLVM.
https://dblp.org/rec/conf/pldi/MengKM11,Systematic editing: generating program transformations from an example.
https://dblp.org/rec/conf/pldi/MercadierD19,"Usuba: high-throughput and constant-time ciphers, by construction."
https://dblp.org/rec/conf/pldi/Michael04,Scalable lock-free dynamic memory allocation.
https://dblp.org/rec/conf/pldi/MightSH10,Resolving and exploiting the k-CFA paradox: illuminating functional vs. object-oriented program analysis.
https://dblp.org/rec/conf/pldi/MilanoM18,MixT: a language for mixing consistency in geodistributed transactions.
https://dblp.org/rec/conf/pldi/MilanoTM22,A flexible type system for fearless concurrency.
https://dblp.org/rec/conf/pldi/MillerC88,A Mechanism for Efficient Debugging of Parallel Programs.
https://dblp.org/rec/conf/pldi/MiltnerPMW20,Data-driven inference of representation invariants.
https://dblp.org/rec/conf/pldi/MirmanHBGV21,Robustness certification with generative models.
https://dblp.org/rec/conf/pldi/Misra14,A personal perspective on concurrency.
https://dblp.org/rec/conf/pldi/MitraLABSG14,Accurate application progress analysis for large-scale parallel debugging.
https://dblp.org/rec/conf/pldi/MitsolidesH90,Generators and the Replicator Control Structures in the Parallel Environment of ALLOY.
https://dblp.org/rec/conf/pldi/MohammadiYCDHDN19,Sparse computation data dependence simplification for efficient compiler-generated inspectors.
https://dblp.org/rec/conf/pldi/MollerS01,The Pointer Assertion Logic Engine.
https://dblp.org/rec/conf/pldi/MollH18,Partial control-flow linearization.
https://dblp.org/rec/conf/pldi/MonnierSS01,Principled Scavenging.
https://dblp.org/rec/conf/pldi/MontaguJ21,Trace-based control-flow analysis.
https://dblp.org/rec/conf/pldi/MorelliR22,Warping cache simulation of polyhedral programs.
https://dblp.org/rec/conf/pldi/MorihataS21,Reverse engineering for reduction parallelization via semiring polynomials.
https://dblp.org/rec/conf/pldi/MorissetPN13,Compiler testing via a theory of sound optimisations in the C11/C++11 memory model.
https://dblp.org/rec/conf/pldi/MoritaMMHT07,Automatic inversion generates divide-and-conquer parallel programs.
https://dblp.org/rec/conf/pldi/Morris91,CCG: A Prototype Coagulating Code Generator.
https://dblp.org/rec/conf/pldi/MorrisettTTTG12,"RockSalt: better, faster, stronger SFI for the x86."
https://dblp.org/rec/conf/pldi/Moss87,Managing stack frames in Smalltalk.
https://dblp.org/rec/conf/pldi/MpeisPHL21,Developer and user-transparent compiler optimization for interactive applications.
https://dblp.org/rec/conf/pldi/MuellerW92,Avoiding Unconditional Jumps by Code Replication.
https://dblp.org/rec/conf/pldi/MuellerW95,Avoiding Conditional Branches by Code Replication.
https://dblp.org/rec/conf/pldi/MulderKG22,Diaframe: automated verification of fine-grained concurrent programs in Iris.
https://dblp.org/rec/conf/pldi/MullenZTG16,Verified peephole optimizations for CompCert.
https://dblp.org/rec/conf/pldi/MullerA017,Responsive parallel computation: bridging competitive and cooperative threading.
https://dblp.org/rec/conf/pldi/MullerSGAAL20,Responsive parallelism with futures and state.
https://dblp.org/rec/conf/pldi/MurrayIY11,Steno: automatic optimization of declarative queries.
https://dblp.org/rec/conf/pldi/MusuvathiQ07,Iterative context bounding for systematic testing of multithreaded programs.
https://dblp.org/rec/conf/pldi/MusuvathiQ08,Fair stateless model checking.
https://dblp.org/rec/conf/pldi/MytkowiczDHS10,Evaluating the accuracy of Java profilers.
https://dblp.org/rec/conf/pldi/NagarakatteBMM12,Multicore acceleration of priority-based schedulers for concurrency bug detection.
https://dblp.org/rec/conf/pldi/NagarakatteZMZ09,SoftBound: highly compatible and complete spatial memory safety for c.
https://dblp.org/rec/conf/pldi/NaikAW06,Effective static race detection for Java.
https://dblp.org/rec/conf/pldi/NakaikeIKN06,Profile-based global live-range splitting.
https://dblp.org/rec/conf/pldi/NakaikeM10,Lock elision for read-only critical sections in Java.
https://dblp.org/rec/conf/pldi/NandiWAWDGT20,Synthesizing structured CAD models with equality saturation and inverse transformations.
https://dblp.org/rec/conf/pldi/NarayanasamyWTEC07,Automatically classifying benign and harmful data racesallusing replay analysis.
https://dblp.org/rec/conf/pldi/NeamtiuH09,Safe and timely updates to multi-threaded programs.
https://dblp.org/rec/conf/pldi/NeamtiuHSO06,Practical dynamic software updating for C.
https://dblp.org/rec/conf/pldi/Necula00,Translation validation for an optimizing compiler.
https://dblp.org/rec/conf/pldi/NeculaL98,The Design and Implementation of a Certifying Compiler.
https://dblp.org/rec/conf/pldi/NethercoteS07,Valgrind: a framework for heavyweight dynamic binary instrumentation.
https://dblp.org/rec/conf/pldi/NettlesO93,Real-Time Replication Garbage Collection.
https://dblp.org/rec/conf/pldi/NetzerW94,Optimal Tracing and Incremental Reexecution for Debugging Long-Running Programs.
https://dblp.org/rec/conf/pldi/NgoC018,Bounded expectations: resource analysis for probabilistic programs.
https://dblp.org/rec/conf/pldi/NguyenGTH19,Size-change termination as a contract: dynamically and statically enforcing termination for higher-order programs.
https://dblp.org/rec/conf/pldi/NguyenH15,Relatively complete counterexamples for higher-order programs.
https://dblp.org/rec/conf/pldi/Nickerson90,Graph Coloring Register Allocation for Processors with Multi-Register Operands.
https://dblp.org/rec/conf/pldi/NigamATLBYKSZ20,Predictable accelerator design with time-sensitive affine types.
https://dblp.org/rec/conf/pldi/NiKSI05,Programming ad-hoc networks of mobile and resource-constrained devices.
https://dblp.org/rec/conf/pldi/NiuGWAR21,DNNFusion: accelerating deep neural networks execution with advanced operator fusion.
https://dblp.org/rec/conf/pldi/NiuT14,Modular control-flow integrity.
https://dblp.org/rec/conf/pldi/NoonanLC16,Polymorphic type inference for machine code.
https://dblp.org/rec/conf/pldi/NoriORV15,Efficient synthesis of probabilistic programs.
https://dblp.org/rec/conf/pldi/NorrisP94,register Allocation over the Program Dependence Graph.
https://dblp.org/rec/conf/pldi/NotkinG87,Enhancement through extension: the extension interpreter.
https://dblp.org/rec/conf/pldi/NovarkBZ07,Exterminator: automatically correcting memory errors with high probability.
https://dblp.org/rec/conf/pldi/NovarkBZ09,Efficiently and precisely locating memory leaks and bloat.
https://dblp.org/rec/conf/pldi/NowatzkiSCSER13,A general constraint-centric scheduling framework for spatial architectures.
https://dblp.org/rec/conf/pldi/NuzmanRZ06,Auto-vectorization of interleaved data for SIMD.
https://dblp.org/rec/conf/pldi/OanceaR12,Logical inference techniques for loop parallelization.
https://dblp.org/rec/conf/pldi/OBagyG87,A recursive interpreter for the Icon programming language.
https://dblp.org/rec/conf/pldi/OConnorW22,Quickstrom: property-based acceptance testing with LTL specifications.
https://dblp.org/rec/conf/pldi/OffuttK87,A Fortran 77 interpreter for mutation analysis.
https://dblp.org/rec/conf/pldi/OgataKID92,The Design and Implementation of HoME.
https://dblp.org/rec/conf/pldi/OhHLLY12,Design and implementation of sparse global analyses for C-like languages.
https://dblp.org/rec/conf/pldi/OhLHYY14,Selective context-sensitivity guided by impact pre-analysis.
https://dblp.org/rec/conf/pldi/OhmannBDL17,Control-flow recovery from partial failure reports.
https://dblp.org/rec/conf/pldi/Oiwa09,Implementation of the memory-safe full ANSI-C compiler.
https://dblp.org/rec/conf/pldi/OliveiraSCLY12,The implicit calculus: a new foundation for generic programming.
https://dblp.org/rec/conf/pldi/OlivoDL15,Static detection of asymptotic performance bugs in collection traversals.
https://dblp.org/rec/conf/pldi/OlivryITRSR21,IOOpt: automatic derivation of I/O complexity bounds for affine programs.
https://dblp.org/rec/conf/pldi/OlivryLPSR20,Automated derivation of parametric data movement lower bounds for affine programs.
https://dblp.org/rec/conf/pldi/OmarMBVCC21,Filling typed holes with live GUIs.
https://dblp.org/rec/conf/pldi/OseraZ15,Type-and-example-directed program synthesis.
https://dblp.org/rec/conf/pldi/OssiaBGKLO02,"A Parallel, Incremental and Concurrent GC for Servers."
https://dblp.org/rec/conf/pldi/OTooleG89,Type Reconstruction with First-Class Polymorphic Values.
https://dblp.org/rec/conf/pldi/Ottoni18,"HHVM JIT: a profile-guided, region-based compiler for PHP and Hack."
https://dblp.org/rec/conf/pldi/PadhiSM16,Data-driven precondition inference with learned features.
https://dblp.org/rec/conf/pldi/PadonMPSS16,Ivy: safety verification by interactive generalization.
https://dblp.org/rec/conf/pldi/PaekHP98,Simplification of Array Access Patterns for Compiler Optimizations.
https://dblp.org/rec/conf/pldi/Pailoor00D21,Synthesizing data structure refinements from integrity constraints.
https://dblp.org/rec/conf/pldi/Palem14,What exactly is inexact computation good for?
https://dblp.org/rec/conf/pldi/PaletovTRV18,Inferring crypto API rules from code changes.
https://dblp.org/rec/conf/pldi/PallasU88,Multiprocessor Smalltalk: A Case Study of a Multiprocessor-Based Programming Environment.
https://dblp.org/rec/conf/pldi/PanchekhaGETK18,Verifying that web pages have accessible layout.
https://dblp.org/rec/conf/pldi/PanchekhaSWT15,Automatically improving accuracy for floating point expressions.
https://dblp.org/rec/conf/pldi/PanHA10,Composing parallel software efficiently with lithe.
https://dblp.org/rec/conf/pldi/ParadisBSV21,Unqomp: synthesizing uncomputation in Quantum circuits.
https://dblp.org/rec/conf/pldi/Paraskevopoulou22,Computing correctly with inductive relations.
https://dblp.org/rec/conf/pldi/ParkG92,Escape Analysis on Lists.
https://dblp.org/rec/conf/pldi/ParkSR15,KJS: a complete formal semantics of JavaScript.
https://dblp.org/rec/conf/pldi/ParrF11,LL(*): the foundation of the ANTLR parser generator.
https://dblp.org/rec/conf/pldi/ParthasarathyPK22,Landmarks and regions: a robust approach to data extraction.
https://dblp.org/rec/conf/pldi/Patterson95,Accurate Static Branch Prediction by Value Range Propagation.
https://dblp.org/rec/conf/pldi/PattersonPDA17,FunTAL: reasonably mixing a functional language with assembly.
https://dblp.org/rec/conf/pldi/PekQM14,Natural proofs for data structure manipulation in C using separation logic.
https://dblp.org/rec/conf/pldi/PengGD18,CURD: a dynamic CUDA race detector.
https://dblp.org/rec/conf/pldi/PengYW22,Algebraic reasoning of Quantum programs via non-idempotent Kleene algebra.
https://dblp.org/rec/conf/pldi/PereiraP08,Register allocation by puzzle solving.
https://dblp.org/rec/conf/pldi/PerelmanGBG12,Type-directed completion of partial expressions.
https://dblp.org/rec/conf/pldi/PerelmanGGP14,Test-driven synthesis.
https://dblp.org/rec/conf/pldi/PerezR11,Separation logic + superposition calculus = heap theorem prover.
https://dblp.org/rec/conf/pldi/PerryKSZ19,SemCluster: clustering of imperative programming assignments based on quantitative semantic features.
https://dblp.org/rec/conf/pldi/PerryMRLAW07,Fault-tolerant typed assembly language.
https://dblp.org/rec/conf/pldi/PersonYRK11,Directed incremental symbolic execution.
https://dblp.org/rec/conf/pldi/PetersonJ93,Implementing Type Classes.
https://dblp.org/rec/conf/pldi/PetrankMS09,Progress guarantee for parallel programs via bounded lock-freedom.
https://dblp.org/rec/conf/pldi/PetrashkoLO17,Miniphases: compilation using modular and efficient tree transformations.
https://dblp.org/rec/conf/pldi/PetricekGS16,Types from data: making structured data first-class citizens in F#.
https://dblp.org/rec/conf/pldi/PetrovVSD12,Race detection for web applications.
https://dblp.org/rec/conf/pldi/PettisH90,Profile Guided Code Positioning.
https://dblp.org/rec/conf/pldi/PfenningE88,Higher-Order Abstract Syntax.
https://dblp.org/rec/conf/pldi/PhothilimthanaJSTCB14,Chlorophyll: synthesis-aided compiler for low-power spatial architectures.
https://dblp.org/rec/conf/pldi/PhuliaBB20,OOElala: order-of-evaluation based alias analysis for compiler optimization.
https://dblp.org/rec/conf/pldi/PingaliB95,APT: A Data Structure for Optimal Control Dependence Computation.
https://dblp.org/rec/conf/pldi/PingaliNKBHKLLMMPS11,The tao of parallelism in algorithms.
https://dblp.org/rec/conf/pldi/Pinter93,Register Allocation with Instruction Scheduling: A New Approach.
https://dblp.org/rec/conf/pldi/Pirlea0S21,Practical smart contract sharding with ownership and commutativity analysis.
https://dblp.org/rec/conf/pldi/Pit-ClaudelPJEC22,Relational compilation for performance-critical applications: extensible proof-producing translation of functional models into low-level code.
https://dblp.org/rec/conf/pldi/Pittman87,Two-level hybrid interpreter/native code execution for combined space-time program efficiency.
https://dblp.org/rec/conf/pldi/PiumartaR98,Optimizing Direct-threaded Code by Selective Inlining.
https://dblp.org/rec/conf/pldi/PizloPS08,A study of concurrent real-time garbage collectors.
https://dblp.org/rec/conf/pldi/PizloZMHBV10,Schism: fragmentation-tolerant real-time garbage collection.
https://dblp.org/rec/conf/pldi/PlebanL88,"An Automatically Generated, Realistic Compiler for an Imperative Programming Language."
https://dblp.org/rec/conf/pldi/PolettoEK97,"tcc: A System for Fast, Flexible, and High-level Dynamic Code Generation."
https://dblp.org/rec/conf/pldi/PolikarpovaKS16,Program synthesis from polymorphic refinement types.
https://dblp.org/rec/conf/pldi/PolitoDT22,Interpreter-guided differential JIT compiler unit testing.
https://dblp.org/rec/conf/pldi/PombrioK14,Resugaring: lifting evaluation sequences through syntactic sugar.
https://dblp.org/rec/conf/pldi/PombrioK18,Inferring type rules for syntactic sugar.
https://dblp.org/rec/conf/pldi/PorterMBP20,BlankIt library debloating: getting what you want instead of cutting what you don't.
https://dblp.org/rec/conf/pldi/PouchetBCC08,"Iterative optimization in the polyhedral model: part ii, multidimensional time."
https://dblp.org/rec/conf/pldi/PowersTB019,Mesh: compacting memory management for C/C++ applications.
https://dblp.org/rec/conf/pldi/PrabhuGZJA11,Commutative set: a language extension for implicit parallel programming.
https://dblp.org/rec/conf/pldi/PrabhuRV10,Safe programmable speculative parallelism.
https://dblp.org/rec/conf/pldi/PradelG12,Fully automatic and precise detection of thread safety violations.
https://dblp.org/rec/conf/pldi/PrasadAG11,Automatic compilation of MATLAB programs for synergistic execution on heterogeneous processors.
https://dblp.org/rec/conf/pldi/PratikakisFH06,LOCKSMITH: context-sensitive correlation analysis for race detection.
https://dblp.org/rec/conf/pldi/PraunG03,Static conflict analysis for multi-threaded object-oriented programs.
https://dblp.org/rec/conf/pldi/PremtoonKS20,Semantic code search via equational reasoning.
https://dblp.org/rec/conf/pldi/Proebsting92,Simple and Efficient BURS Table Generation.
https://dblp.org/rec/conf/pldi/Proebsting97,Simple Translation of Goal-Directed Evaluation.
https://dblp.org/rec/conf/pldi/ProebstingF91,"Linear-Time, Optimal Code Scheduling for Delayed-Load Architectures."
https://dblp.org/rec/conf/pldi/ProebstingF92,Probalistic Register Allocation.
https://dblp.org/rec/conf/pldi/ProkopecRLD0SBZ19,Renaissance: benchmarking suite for parallel applications on the JVM.
https://dblp.org/rec/conf/pldi/PrountzosMP15,Synthesizing parallel graph programs via automated planning.
https://dblp.org/rec/conf/pldi/Pugh91,Advice to Authors of Extended Abstracts.
https://dblp.org/rec/conf/pldi/Pugh94,Counting Solutions to Presburger Formulas: How and Why.
https://dblp.org/rec/conf/pldi/Pugh99,Compressing Java Class Files.
https://dblp.org/rec/conf/pldi/PughW90,Two-Directional Record Layout for Multiple Inheritance.
https://dblp.org/rec/conf/pldi/PughW92,Eliminating False Data Dependences using the Omega Test.
https://dblp.org/rec/conf/pldi/PultePKLH19,Promising-ARM/RISC-V: a simpler and faster operational concurrency model.
https://dblp.org/rec/conf/pldi/QadeerW04,KISS: keep it simple and sequential.
https://dblp.org/rec/conf/pldi/QiM09,Sharing classes between families.
https://dblp.org/rec/conf/pldi/QinCYSZ20,Understanding memory and thread safety practices and issues in real-world Rust programs.
https://dblp.org/rec/conf/pldi/Qiu0SM13,"Natural proofs for structure, data, and separation."
https://dblp.org/rec/conf/pldi/QuinonesMSMGT05,Mitosis compiler: an infrastructure for speculative threading based on pre-computation slices.
https://dblp.org/rec/conf/pldi/Ragan-KelleyBAPDA13,"Halide: a language and compiler for optimizing parallelism, locality, and recomputation in image processing pipelines."
https://dblp.org/rec/conf/pldi/RaghothamanKHN18,User-guided program reasoning using Bayesian inference.
https://dblp.org/rec/conf/pldi/RahmaniNDJ21,Repairing serializability bugs in distributed database programs via automated schema refactoring.
https://dblp.org/rec/conf/pldi/RaineyNHHCDA21,Task parallel assembly language for uncompromising parallelism.
https://dblp.org/rec/conf/pldi/RajagopalanDHS02,Profile-Directed Optimization of Event-Based Programs.
https://dblp.org/rec/conf/pldi/RajanRY10,GUESSTIMATE: a programming model for collaborative distributed systems.
https://dblp.org/rec/conf/pldi/RajaramNSE13,Fast RMWs for TSO: semantics and implementation.
https://dblp.org/rec/conf/pldi/Ramalingam00,"On loops, dominators, and dominance frontier."
https://dblp.org/rec/conf/pldi/Ramalingam96,Data Flow Frequency Analysis.
https://dblp.org/rec/conf/pldi/RamalingamS97,A Member Lookup Algorithm for C++.
https://dblp.org/rec/conf/pldi/RamalingamWFGS02,Deriving Specialized Program Analyses for Certifying Component-Client Conformance.
https://dblp.org/rec/conf/pldi/RamanathanGJ07,Static specification inference using predicate mining.
https://dblp.org/rec/conf/pldi/RamanKOLA11,Parallelism orchestration using DoPE: the degree of parallelism executive.
https://dblp.org/rec/conf/pldi/RamanZLA12,Parcae: a system for flexible parallel execution.
https://dblp.org/rec/conf/pldi/RamanZSVY12,Scalable and precise dynamic datarace detection for structured parallelism.
https://dblp.org/rec/conf/pldi/Ramsey96,Relocating Machine Instructions by Currying.
https://dblp.org/rec/conf/pldi/RamseyH92,A Retargetable Debugger.
https://dblp.org/rec/conf/pldi/RamseyJ00,A single intermediate language that supports multiple implementations of exceptions.
https://dblp.org/rec/conf/pldi/RaoP99,Storage Assignment Optimizations to Generate Compact and Efficient Code on Embedded DSPs.
https://dblp.org/rec/conf/pldi/RauchwergerP95,The LRPD Test: Speculative Run-Time Parallelization of Loops with Privatization and Reduction Parallelization.
https://dblp.org/rec/conf/pldi/RauLTS92,Register Allocation for Software Pipelined Loops.
https://dblp.org/rec/conf/pldi/RavitchJAL09,Automatic generation of library bindings using static analysis.
https://dblp.org/rec/conf/pldi/RaychevVY14,Code completion with statistical language models.
https://dblp.org/rec/conf/pldi/RegehrCCEEY12,Test-case reduction for C compiler bugs.
https://dblp.org/rec/conf/pldi/Reinhold94,Cache Performance of Garbage-Collected Programs.
https://dblp.org/rec/conf/pldi/ReinkingXML21,Perceus: garbage free reference counting with reuse.
https://dblp.org/rec/conf/pldi/RendelOH09,Typed self-representation.
https://dblp.org/rec/conf/pldi/RenF16,Just-in-time static type checking for dynamic languages.
https://dblp.org/rec/conf/pldi/RenganarayananKRS07,Parameterized tiled loops for free.
https://dblp.org/rec/conf/pldi/RenHMLL21,Unleashing the hidden power of compiler optimization on binary code difference: an empirical study.
https://dblp.org/rec/conf/pldi/RenJKAK15,Efficient execution of recursive programs on commodity vector hardware.
https://dblp.org/rec/conf/pldi/RennerSBLS21,Scooter & Sidecar: a domain-specific approach to writing secure database migrations.
https://dblp.org/rec/conf/pldi/RenWP06,Optimizing data permutations for SIMD devices.
https://dblp.org/rec/conf/pldi/Reppy88,Synchronous Operations as First-Class Values.
https://dblp.org/rec/conf/pldi/Reppy91,CML: A Higher-Order Concurrent Language.
https://dblp.org/rec/conf/pldi/ReppyR96,Simple Objects for Standard ML.
https://dblp.org/rec/conf/pldi/RhodesFF17,BigFoot: static check placement for dynamic race detection.
https://dblp.org/rec/conf/pldi/RichardsLBV10,An analysis of the dynamic behavior of JavaScript programs.
https://dblp.org/rec/conf/pldi/RickettsRJTL14,Automating formal proofs for reactive systems.
https://dblp.org/rec/conf/pldi/RinardD96,Commutativity Analysis: A New Analysis Framework for Parallelizing Compilers.
https://dblp.org/rec/conf/pldi/RingerPYLG21,Proof repair across type equivalences.
https://dblp.org/rec/conf/pldi/RiveraT98,Data Transformations for Eliminating Conflict Misses.
https://dblp.org/rec/conf/pldi/Robison87,The Illinois functional programming interpreter.
https://dblp.org/rec/conf/pldi/RochaP0CL20,Effective function merging in the SSA form.
https://dblp.org/rec/conf/pldi/RochaS0GSCB22,Lasagne: a static binary translator for weak memory model architectures.
https://dblp.org/rec/conf/pldi/RoemerGB18,"High-coverage, unbounded sound predictive race detection."
https://dblp.org/rec/conf/pldi/RoemerGB20,SmartTrack: efficient predictive race detection.
https://dblp.org/rec/conf/pldi/RogersP89,Process Decomposition Through Locality of Reference.
https://dblp.org/rec/conf/pldi/RompfSBLCO14,Surgical precision JIT compilers.
https://dblp.org/rec/conf/pldi/RondonKJ08,Liquid types.
https://dblp.org/rec/conf/pldi/RongDG05,Register allocation for software pipelined multi-dimensional loops.
https://dblp.org/rec/conf/pldi/Rose88,Refined Types: Highly Differentiated Type Systems and Their Use in the Design of Intermediate Langages.
https://dblp.org/rec/conf/pldi/RouhtevC00,Off-line variable substitution for scaling points-to analysis.
https://dblp.org/rec/conf/pldi/RoweFTO19,Characterising renaming within OCaml's module system: theory and implementation.
https://dblp.org/rec/conf/pldi/RoyPBMW09,Laminar: practical fine-grained decentralized information flow control.
https://dblp.org/rec/conf/pldi/RoyPGT21,Bliss: auto-tuning complex applications using a pool of diverse lightweight learning models.
https://dblp.org/rec/conf/pldi/Rubio-GonzalezGLAA09,Error propagation analysis for file systems.
https://dblp.org/rec/conf/pldi/Ruf00,Effective synchronization removal for Java.
https://dblp.org/rec/conf/pldi/Ruf95,Context-Insensitive Alias Analysis Reconsidered.
https://dblp.org/rec/conf/pldi/RuginaR00,"Symbolic bounds analysis of pointers, array indices, and accessed memory regions."
https://dblp.org/rec/conf/pldi/RuginaR99,Pointer Analysis for Multithreaded Programs.
https://dblp.org/rec/conf/pldi/RuppelL19,"Transactional concurrency control for intermittent, energy-harvesting computing systems."
https://dblp.org/rec/conf/pldi/RussinovichC96,Replay For Concurrent Non-Deterministic Shared Memory Applications.
https://dblp.org/rec/conf/pldi/RuttenbergGLS96,Software Pipelining Showdown: Optimal vs. Heuristic Methods in a Production Compiler.
https://dblp.org/rec/conf/pldi/RuwaseCGM10,Decoupled lifeguards: enabling path optimizations for dynamic correctness checking tools.
https://dblp.org/rec/conf/pldi/SaadRM21,SPPL: probabilistic programming with fast exact symbolic inference.
https://dblp.org/rec/conf/pldi/SaarikiviVMM17,Fusing effectful comprehensions.
https://dblp.org/rec/conf/pldi/SabryF94,Is Continuation-Passing Useful for Data Flow Analysis?
https://dblp.org/rec/conf/pldi/SahaZCGYRFZRM09,Programming model for a heterogeneous x86 platform.
https://dblp.org/rec/conf/pldi/SakkasECWJ20,Type error feedback via analytic program repair.
https://dblp.org/rec/conf/pldi/SakkaSN019,"Sound, fine-grained traversal fusion for heterogeneous trees."
https://dblp.org/rec/conf/pldi/SalomonC89,Scannerless NSLR(1) Parsing of Programming Languages.
https://dblp.org/rec/conf/pldi/SamadiHMLM12,Adaptive input-aware compilation for graphics engines.
https://dblp.org/rec/conf/pldi/SamakRJ15,Synthesizing racy tests.
https://dblp.org/rec/conf/pldi/SammlerHL0PD0S22,Islaris: verification of machine code against authoritative ISA semantics.
https://dblp.org/rec/conf/pldi/SammlerLKMD021,RefinedC: automating the foundational verification of C code with refined ownership types.
https://dblp.org/rec/conf/pldi/SampsonDFGCG11,EnerJ: approximate data types for safe and general low-power computation.
https://dblp.org/rec/conf/pldi/SampsonPMMGC14,Expressing and verifying probabilistic assertions.
https://dblp.org/rec/conf/pldi/Sanchez-SternPL18,Finding root causes of floating point error.
https://dblp.org/rec/conf/pldi/SankaranarayananCG13,Static analysis for probabilistic programs: inferring whole program properties from finitely many paths.
https://dblp.org/rec/conf/pldi/SanthanamO90,Register Allocation Across Procedure and Module Boundaries.
https://dblp.org/rec/conf/pldi/SanthiarK17,Static deadlock detection for asynchronous C# programs.
https://dblp.org/rec/conf/pldi/SantosMAG20,"Gillian, part i: a multi-language platform for symbolic execution."
https://dblp.org/rec/conf/pldi/Sarkar89,Determining Average Program Execution Times and their Variance.
https://dblp.org/rec/conf/pldi/Sarkar90,Instruction Reordering for Fork-Join Parallelism.
https://dblp.org/rec/conf/pldi/SarkarMOBSMAW12,Synchronising C/C++ and POWER.
https://dblp.org/rec/conf/pldi/SarkarSAMW11,Understanding POWER multiprocessors.
https://dblp.org/rec/conf/pldi/SarkarT92,A General Framework for Iteration-Reordering Loop Transformations.
https://dblp.org/rec/conf/pldi/SartorBFHM10,Z-rays: divide arrays and conquer speed and flexibility.
https://dblp.org/rec/conf/pldi/SastryJ98,A New Algorithm for Scalar Register Promotion based on SSA Form.
https://dblp.org/rec/conf/pldi/SastryPS98,Exploiting Idle Floating-Point Resources for Integer Execution.
https://dblp.org/rec/conf/pldi/SatoI11,Automatic parallelization via matrix multiplication.
https://dblp.org/rec/conf/pldi/ScalasYB19,Verifying message-passing programs with dependent behavioural types.
https://dblp.org/rec/conf/pldi/SchaferSDT13,Dynamic determinacy analysis.
https://dblp.org/rec/conf/pldi/ScherpelzLC07,Automatic inference of optimizer flow functions from semantic meanings.
https://dblp.org/rec/conf/pldi/Schkufza0A14,Stochastic optimization of floating-point programs with tunable precision.
https://dblp.org/rec/conf/pldi/SchlanskerMJ99,Control CPR: A Branch Height Reduction Optimization for EPIC Architectures.
https://dblp.org/rec/conf/pldi/SchnarrHL01,Facile: A Language and Compiler for High-Performance Processor Simulators.
https://dblp.org/rec/conf/pldi/Schneider13,Programming languages in security: keynote.
https://dblp.org/rec/conf/pldi/SchneiderPG07,Online optimizations driven by hardware performance monitoring.
https://dblp.org/rec/conf/pldi/Schonberg89,On-The-Fly Detection of Access Anomalies.
https://dblp.org/rec/conf/pldi/SchuikiKGB20,LLHD: a multi-level intermediate representation for hardware description languages.
https://dblp.org/rec/conf/pldi/SchusterB0O22,A typed continuation-passing translation for lexical effect handlers.
https://dblp.org/rec/conf/pldi/SchwarzKL88,"An Optimizer for Ada - Design, Experiences and Results."
https://dblp.org/rec/conf/pldi/SchwerdfegerW09,Verifiable composition of deterministic grammars.
https://dblp.org/rec/conf/pldi/Sen08,Race directed random testing of concurrent programs.
https://dblp.org/rec/conf/pldi/SergeyDMMDCP13,Monadic abstract interpreters.
https://dblp.org/rec/conf/pldi/SergeyNB15,Mechanized verification of fine-grained concurrent programs.
https://dblp.org/rec/conf/pldi/SerranoHVJ18,Guarded impredicative polymorphism.
https://dblp.org/rec/conf/pldi/SeshadriWJWYS88,Semantic Analysis in a Concurrent Compiler.
https://dblp.org/rec/conf/pldi/Sevcik11,Safe optimisations for shared-memory concurrent programs.
https://dblp.org/rec/conf/pldi/SewellMK13,Translation validation for a verified OS kernel.
https://dblp.org/rec/conf/pldi/SFMD21,Specification synthesis with constrained Horn clauses.
https://dblp.org/rec/conf/pldi/ShachamVY09,Chameleon: adaptive selection of collections.
https://dblp.org/rec/conf/pldi/ShahamKS01,Heap Profiling for Space-Efficient Java.
https://dblp.org/rec/conf/pldi/ShambaughWG16,Rehearsal: a configuration verification tool for puppet.
https://dblp.org/rec/conf/pldi/ShankarB07,DITTO: automatic incrementalization of data structure invariant checks (in Java).
https://dblp.org/rec/conf/pldi/ShaoA95,A Type-Based Compiler for Standard ML.
https://dblp.org/rec/conf/pldi/ShariffdeenNGR21,Concolic program repair.
https://dblp.org/rec/conf/pldi/SharmaBA15,Verification of producer-consumer synchronization in GPU programs.
https://dblp.org/rec/conf/pldi/ShebsK87,Automatic design and implementation of language data types.
https://dblp.org/rec/conf/pldi/Shivers88,Control-Flow Analysis in Scheme.
https://dblp.org/rec/conf/pldi/ShiversM06,Continuations and transducer composition.
https://dblp.org/rec/conf/pldi/ShiXWZFZ18,Pinpoint: fast and precise sparse value flow analysis for million lines of code.
https://dblp.org/rec/conf/pldi/ShiYWZ21,Path-sensitive sparse analysis without path conditions.
https://dblp.org/rec/conf/pldi/ShpeismanMABGHMS07,Enforcing isolation and ordering in STM.
https://dblp.org/rec/conf/pldi/ShullHT19,AutoPersist: an easy-to-use Java NVM framework based on reachability.
https://dblp.org/rec/conf/pldi/Sidiroglou-Douskos15,Automatic error elimination by horizontal code transfer across multiple applications.
https://dblp.org/rec/conf/pldi/SiekL05,Essential language support for generic programming.
https://dblp.org/rec/conf/pldi/SiekTW15,Blame and coercion: together again for the first time.
https://dblp.org/rec/conf/pldi/Simon14,Optimal inference of fields in row-polymorphic records.
https://dblp.org/rec/conf/pldi/SinghGS13,Automated feedback generation for introductory programming assignments.
https://dblp.org/rec/conf/pldi/SinghPV15,Making numerical program analysis fast.
https://dblp.org/rec/conf/pldi/Sitaram93,Handling Control.
https://dblp.org/rec/conf/pldi/Sivaramakrishnan15,Declarative programming over eventually consistent data stores.
https://dblp.org/rec/conf/pldi/Sivaramakrishnan21,Retrofitting effect handlers onto OCaml.
https://dblp.org/rec/conf/pldi/SkedzielewskiYO87,DI: an interactive debugging interpreter for applicative languages.
https://dblp.org/rec/conf/pldi/SmaragdakisKB14,"Introspective analysis: context-sensitivity, across the board."
https://dblp.org/rec/conf/pldi/SmithA16,MapReduce program synthesis.
https://dblp.org/rec/conf/pldi/SmithRH04,A generalized algorithm for graph-coloring register allocation.
https://dblp.org/rec/conf/pldi/SmolkaKKFHK019,Scalable verification of probabilistic networks.
https://dblp.org/rec/conf/pldi/SoHD02,A Compiler Approach to Fast Hardware Design Space Exploration in FPGA-based Systems.
https://dblp.org/rec/conf/pldi/Solar-LezamaATBSS07,Sketching stencils.
https://dblp.org/rec/conf/pldi/Solar-LezamaJB08,Sketching concurrent data structures.
https://dblp.org/rec/conf/pldi/Solar-LezamaRBE05,Programming by sketching for bit-streaming programs.
https://dblp.org/rec/conf/pldi/SongL99,New Tiling Techniques to Improve Cache Temporal Locality.
https://dblp.org/rec/conf/pldi/SorensenD16,Exposing errors related to weak memory in GPU applications.
https://dblp.org/rec/conf/pldi/Sosic92,Dynascope: A Tool for Program Directing.
https://dblp.org/rec/conf/pldi/SotoudehT21,Provable repair of deep neural networks.
https://dblp.org/rec/conf/pldi/Soundarapandian22,Certified mergeable replicated data types.
https://dblp.org/rec/conf/pldi/SousaD16,Cartesian hoare logic for verifying k-safety properties.
https://dblp.org/rec/conf/pldi/SousaDVDG14,Consolidation of queries with user-defined functions.
https://dblp.org/rec/conf/pldi/SperberT96,Realistic Compilation by Partial Evaluation.
https://dblp.org/rec/conf/pldi/SperberT97,Two for the Price of One: Composing Partial Evaluation and Compilation.
https://dblp.org/rec/conf/pldi/SpiegelmanGK16,Transactional data structure libraries.
https://dblp.org/rec/conf/pldi/SpiesGGTKDB21,Transfinite Iris: resolving an existential dilemma of step-indexed separation logic.
https://dblp.org/rec/conf/pldi/SpoonhowerABCG06,Eventrons: a safe programming construct for high-frequency hard real-time applications.
https://dblp.org/rec/conf/pldi/SreedharBC00,A framework for interprocedural optimization in the presence of dynamic class loading.
https://dblp.org/rec/conf/pldi/SreedharGL96,A New Framework for Exhaustive and Incremental Data Flow Analysis Using DJ Graphs.
https://dblp.org/rec/conf/pldi/SridharanB06,Refinement-based context-sensitive points-to analysis for Java.
https://dblp.org/rec/conf/pldi/SridharanFB07,Thin slicing.
https://dblp.org/rec/conf/pldi/SridharanGS14,"Adaptive, efficient, parallel execution of parallel programs."
https://dblp.org/rec/conf/pldi/SrinivasanR15,Synthesis of machine code from semantics.
https://dblp.org/rec/conf/pldi/SrivastavaBMS11,A security policy oracle: detecting security holes using multiple API implementations.
https://dblp.org/rec/conf/pldi/SrivastavaE94,ATOM - A System for Building Customized Program Analysis Tools.
https://dblp.org/rec/conf/pldi/SrivastavaG09,Program verification using templates over predicate abstraction.
https://dblp.org/rec/conf/pldi/SrivastavaGCF11,Path-based inductive synthesis for program inversion.
https://dblp.org/rec/conf/pldi/SrivastavaW94,Link-Time Optimization of Address Calculation on a 64-bit Architecture.
https://dblp.org/rec/conf/pldi/StanfordVB21,Symbolic Boolean derivatives for efficiently solving extended regular expression constraints.
https://dblp.org/rec/conf/pldi/SteeleW90,How to Print Floating-Point Numbers Accurately.
https://dblp.org/rec/conf/pldi/SteindorferV18,To-many or to-one? all-in-one! efficient purely functional multi-maps with type-heterogeneous hash-tries.
https://dblp.org/rec/conf/pldi/StephensonAMO03,Meta optimization: improving compiler heuristics with machine learning.
https://dblp.org/rec/conf/pldi/StephensonBA00,Bitwidth analysis with application to silicon compilation.
https://dblp.org/rec/conf/pldi/StichnothLC99,Support for Garbage Collection at Every Instruction in a Java Compiler.
https://dblp.org/rec/conf/pldi/StockKGPRRS14,A framework for enhancing data reuse via associative reordering.
https://dblp.org/rec/conf/pldi/Stone88,Debugging Concurrent Processes: A Case Study.
https://dblp.org/rec/conf/pldi/StorkNSMFMA14,Æminium: a permission based concurrent-by-default programming language approach.
https://dblp.org/rec/conf/pldi/StroutCF03,Compile-time composition of run-time data and iteration reorderings.
https://dblp.org/rec/conf/pldi/SubramanianADA20,Detecting network load violations for distributed control planes.
https://dblp.org/rec/conf/pldi/SubramanianHM09,Dynamic software updates: a VM-centric approach.
https://dblp.org/rec/conf/pldi/SuchyCHD20,CARAT: a case for virtual memory through compiler- and runtime-based address translation.
https://dblp.org/rec/conf/pldi/SuganumaYN03,A region-based compilation technique for a Java just-in-time compiler.
https://dblp.org/rec/conf/pldi/Sundararajah019,"Composable, sound transformations of nested recursion and loops."
https://dblp.org/rec/conf/pldi/Surbatovich0L21,Automatically enforcing fresh and consistent inputs in intermittent systems.
https://dblp.org/rec/conf/pldi/SurendranRCMS14,Test-driven repair of data races in structured parallel programs.
https://dblp.org/rec/conf/pldi/SutorJ87,The type inference and coercion facilities in the scratchpad II interpreter.
https://dblp.org/rec/conf/pldi/SwamyRRSNMVTCG22,Hardening attack surfaces with formally proven binary format parsers.
https://dblp.org/rec/conf/pldi/SwamyWSCL13,Verifying higher-order programs with the dijkstra monad.
https://dblp.org/rec/conf/pldi/SweeneyT98,A Study of Dead Data Members in C++ Applications.
https://dblp.org/rec/conf/pldi/SzaboEB21,Incremental whole-program analysis in Datalog with lattices.
https://dblp.org/rec/conf/pldi/TakashimaM0P21,SyRust: automatic testing of Rust libraries with semantic-aware program synthesis.
https://dblp.org/rec/conf/pldi/TallentMF09,Binary analysis for measurement and attribution of program performance.
https://dblp.org/rec/conf/pldi/TangKKA19,Co-optimizing memory-level parallelism and cache-level parallelism.
https://dblp.org/rec/conf/pldi/TangZWJZYZ22,FreeTensor: a free-form DSL with holistic optimizations for irregular tensor programs.
https://dblp.org/rec/conf/pldi/TanL92,Compiling Dataflow Analysis of Logic Programs.
https://dblp.org/rec/conf/pldi/TanLX17,Efficient and precise points-to analysis: modeling the heap by merging equivalent automata.
https://dblp.org/rec/conf/pldi/TaoSYHCG21,Gleipnir: toward practical error analysis for Quantum programs.
https://dblp.org/rec/conf/pldi/TaoSYLJCCG22,Giallar: push-button verification for the qiskit Quantum compiler.
https://dblp.org/rec/conf/pldi/TarditiMCSHL96,TIL: A Type-Directed Optimizing Compiler for ML.
https://dblp.org/rec/conf/pldi/TassarottiDV15,Verifying read-copy-update in a logic for weak memory.
https://dblp.org/rec/conf/pldi/TateCH10,Inferable object-oriented typed assembly language.
https://dblp.org/rec/conf/pldi/TateLL11,Taming wildcards in Java's type system.
https://dblp.org/rec/conf/pldi/TatlockL10,Bringing extensibility to verified compilers.
https://dblp.org/rec/conf/pldi/TaubeLMPSSWW18,Modularity for decidability of deductive verification with applications to distributed systems.
https://dblp.org/rec/conf/pldi/TauraY97,Fine-grain Multithreading with Minimal Compiler Support - A Cost Effective Approach to Implementing Efficient Multithreading Languages.
https://dblp.org/rec/conf/pldi/TavarageriKS14,Compiler-assisted detection of transient memory errors.
https://dblp.org/rec/conf/pldi/TeitelbaumC90,Higher-Order Attribute Grammars and Editing Environments.
https://dblp.org/rec/conf/pldi/Terauchi08,Checking race freedom via linear programming.
https://dblp.org/rec/conf/pldi/ThakkarNSANR21,Example-guided synthesis of relational queries.
https://dblp.org/rec/conf/pldi/ThiessenL17,Context transformations for pointer analysis.
https://dblp.org/rec/conf/pldi/ThiesVSA01,A Unified Framework for Schedule and Storage Optimization.
https://dblp.org/rec/conf/pldi/TianFG10,Supporting speculative parallelization in the presence of dynamic data structures.
https://dblp.org/rec/conf/pldi/Titzer13,"Harmonizing classes, functions, tuples, and type parameters in virgil iii."
https://dblp.org/rec/conf/pldi/TitzerABP07,The ExoVM system for automatic VM and application reduction.
https://dblp.org/rec/conf/pldi/TjiangH92,Sharlit - A Tool for Building Optimizers.
https://dblp.org/rec/conf/pldi/Tobin-HochstadtSCFF11,Languages as libraries.
https://dblp.org/rec/conf/pldi/TonderG19,Lightweight multi-language syntax transformation with parser parser combinators.
https://dblp.org/rec/conf/pldi/TorlakB14,A lightweight symbolic virtual machine for solver-aided host languages.
https://dblp.org/rec/conf/pldi/TorlakVD10,MemSAT: checking axiomatic specifications of memory models.
https://dblp.org/rec/conf/pldi/TorreMP09,Analyzing recursive programs using a fixed-point calculus.
https://dblp.org/rec/conf/pldi/TournavitisWFO09,Towards a holistic approach to auto-parallelization: integrating profile-driven parallelism detection and machine-learning based mapping.
https://dblp.org/rec/conf/pldi/TranJCKSK18,"SWOOP: software-hardware co-design for non-speculative, execute-ahead, in-order cores."
https://dblp.org/rec/conf/pldi/TraubHS98,Quality and Speed in Linear-scan Register Allocation.
https://dblp.org/rec/conf/pldi/TriantafyllisBROA06,A framework for unrestricted whole-program optimization.
https://dblp.org/rec/conf/pldi/TrinderHMPJ96,GUM: A Portable Parallel Implementation of Haskell.
https://dblp.org/rec/conf/pldi/TrippMFS12,JANUS: exploiting parallelism via hindsight.
https://dblp.org/rec/conf/pldi/TrippPFSW09,TAJ: effective taint analysis of web applications.
https://dblp.org/rec/conf/pldi/TristanGM11,Evaluating value-graph translation validation for LLVM.
https://dblp.org/rec/conf/pldi/TristanL09,Verified validation of lazy code motion.
https://dblp.org/rec/conf/pldi/TruongBTLMFS16,"Latte: a language, compiler, and runtime for elegant and efficient deep neural networks."
https://dblp.org/rec/conf/pldi/Tseng90,Compiling Programs for a Linear Systolic Array.
https://dblp.org/rec/conf/pldi/TuP95,Efficient Building and Placing of Gating Functions.
https://dblp.org/rec/conf/pldi/Turon12,Reagents: expressing and composing fine-grained concurrency.
https://dblp.org/rec/conf/pldi/UdupaRDMMA13,TRANSIT: specifying protocols with concolic snippets.
https://dblp.org/rec/conf/pldi/UdupaRT11,ALTER: exploiting breakable dependences for parallelization.
https://dblp.org/rec/conf/pldi/VachharajaniVA04,The liberty structural specification language: a high-level modeling language for component reuse.
https://dblp.org/rec/conf/pldi/VasilakisKPSDS19,Ignis: scaling distribution-oblivious systems with light-touch distribution.
https://dblp.org/rec/conf/pldi/VechevY08,Deriving linearizable fine-grained concurrent objects.
https://dblp.org/rec/conf/pldi/VechevYB06,Correctness-preserving derivation of concurrent garbage collection algorithms.
https://dblp.org/rec/conf/pldi/VechevYBR07,CGCExplorer: a semi-automated search procedure for provably correct concurrent collectors.
https://dblp.org/rec/conf/pldi/VegaMSGC21,Reticle: a virtual machine for programming modern FPGAs.
https://dblp.org/rec/conf/pldi/Vegdahl99,Using Node Merging to Enhance Graph Coloring.
https://dblp.org/rec/conf/pldi/VekrisCJ16,Refinement types for TypeScript.
https://dblp.org/rec/conf/pldi/VenetB04,Precise and efficient static array bound checking for large embedded C programs.
https://dblp.org/rec/conf/pldi/Venkatesh89,A Framework for Construction and Evaluation of High-Level Specifications for Program Analysis Techniques.
https://dblp.org/rec/conf/pldi/Venkatesh91,The Semantic Approach to Program Slicing.
https://dblp.org/rec/conf/pldi/VenkatHS15,Loop and data transformations for sparse matrix code.
https://dblp.org/rec/conf/pldi/VerbeekBFR22,Formally verified lifting of C-compiled x86-64 binaries.
https://dblp.org/rec/conf/pldi/VilaGGK20,CacheQuery: learning replacement policies from hardware caches.
https://dblp.org/rec/conf/pldi/VilkB14,Doppio: breaking the browser language barrier.
https://dblp.org/rec/conf/pldi/VilkB18,BLeak: automatically debugging memory leaks in web applications.
https://dblp.org/rec/conf/pldi/VivienR01,Incrementalized Pointer and Escape Analysis.
https://dblp.org/rec/conf/pldi/VogtSK89,Higher-Order Attribute Grammars.
https://dblp.org/rec/conf/pldi/VollmerKRS0N19,LoCal: a language for programs operating on serialized data.
https://dblp.org/rec/conf/pldi/WagnerG97,Incremental Analysis of real Programming Languages.
https://dblp.org/rec/conf/pldi/WagnerMGH94,Accurate Static Estimators for Program Optimization.
https://dblp.org/rec/conf/pldi/WahbeLG93,Practical Data Breakpoints: Design and Implementation.
https://dblp.org/rec/conf/pldi/Wall88,Register Windows versus Register Allocation.
https://dblp.org/rec/conf/pldi/Wall91,Predicting Program Behavior Using Real or Estimated Profiles.
https://dblp.org/rec/conf/pldi/WalzJ88,Incremental Evaluation for a General Class of Circular Attribute Grammars.
https://dblp.org/rec/conf/pldi/Wang0GCQS19,Cost analysis of nondeterministic probabilistic programs.
https://dblp.org/rec/conf/pldi/Wang0R21,Central moment analysis for cost accumulators in probabilistic programs.
https://dblp.org/rec/conf/pldi/Wang0R21a,Sound probabilistic inference via guide types.
https://dblp.org/rec/conf/pldi/Wang94,Precise Compile-Time Performance Prediction for Superscalar-Based Computers.
https://dblp.org/rec/conf/pldi/WangCB17,Synthesizing highly expressive SQL queries from input-output examples.
https://dblp.org/rec/conf/pldi/WangCCJTGYLW07,EXOCHI: architecture and programming environment for a heterogeneous multi-core multithreaded system.
https://dblp.org/rec/conf/pldi/WangCCZVML0X19,Panthera: holistic memory management for big data processing over hybrid memories.
https://dblp.org/rec/conf/pldi/WangDWKZ19,Proving differential privacy with shadow execution.
https://dblp.org/rec/conf/pldi/WangEMP19,Replication-aware linearizability.
https://dblp.org/rec/conf/pldi/WangHR18,PMAF: an algebraic framework for static analysis of probabilistic programs.
https://dblp.org/rec/conf/pldi/WangL04,Parametric analysis for adaptive computation offloading.
https://dblp.org/rec/conf/pldi/WangLZWX022,Odin: on-demand instrumentation with on-the-fly recompilation.
https://dblp.org/rec/conf/pldi/WangS0CG21,Quantitative analysis of assertion violations in probabilistic programs.
https://dblp.org/rec/conf/pldi/WangSS18,"Search, align, and repair: data-driven feedback generation for introductory programming exercises."
https://dblp.org/rec/conf/pldi/WangXLGWZ08,Conditional correlation analysis for safe region-based memory management.
https://dblp.org/rec/conf/pldi/WanH00,Functional reactive programming from first principles.
https://dblp.org/rec/conf/pldi/WarterMHR93,Reverse If-Conversion.
https://dblp.org/rec/conf/pldi/WassermannS07,Sound and precise analysis of web applications for injection vulnerabilities.
https://dblp.org/rec/conf/pldi/Waters87,Efficient interpretation of synchronizable series expressions.
https://dblp.org/rec/conf/pldi/WattPPBDFPG20,Repairing and mechanising the JavaScript relaxed memory model.
https://dblp.org/rec/conf/pldi/Webber97,Program Analysis Using Binary Relations.
https://dblp.org/rec/conf/pldi/WegielK08,"XMem: type-safe, transparent, shared memory for cross-runtime communication and coordination."
https://dblp.org/rec/conf/pldi/WeijiangBLK15,Tree dependence analysis.
https://dblp.org/rec/conf/pldi/WeinerR88,A Piggy-back Compiler For Prolog.
https://dblp.org/rec/conf/pldi/WeiseC93,Programmable Syntax Macros.
https://dblp.org/rec/conf/pldi/Wendt90,Fast Code Generation Using Automatically-Generated Decision Trees.
https://dblp.org/rec/conf/pldi/WestbrookRIYAT10,Mint: Java multi-stage programming using weak separability.
https://dblp.org/rec/conf/pldi/WhaleyL04,Cloning-based context-sensitive pointer alias analysis using binary decision diagrams.
https://dblp.org/rec/conf/pldi/WhitfieldS91,Automatic Generation of Global Optimizers.
https://dblp.org/rec/conf/pldi/WicklineLP98,Run-time Code Generation and Modal-ML.
https://dblp.org/rec/conf/pldi/WilcoxWPTWEA15,Verdi: a framework for implementing and formally verifying distributed systems.
https://dblp.org/rec/conf/pldi/WilkenLH00,Optimal instruction scheduling using integer programming.
https://dblp.org/rec/conf/pldi/WilsonL95,Efficient Context-Sensitive Pointer Analysis for C Programs.
https://dblp.org/rec/conf/pldi/WilsonLM91,"Effective ""Static-Graph"" Reorganization to Improve Locality in Garbage-Collected Systems."
https://dblp.org/rec/conf/pldi/WilsonM89,Demonic Memories for Process Histories.
https://dblp.org/rec/conf/pldi/WintererZS20,Validating SMT solvers via semantic fusion.
https://dblp.org/rec/conf/pldi/Wismuller94,Debugging of Globally Optimized Programs Using Data Flow Analysis.
https://dblp.org/rec/conf/pldi/Wolfe92,Beyond Induction Variables.
https://dblp.org/rec/conf/pldi/WolfL91,A Data Locality Optimizing Algorithm.
https://dblp.org/rec/conf/pldi/WoodruffAAO22,Bind the gap: compiling real software to hardware FFT accelerators.
https://dblp.org/rec/conf/pldi/WortmanJ92,A Concurrent Compiler for Modula-2+.
https://dblp.org/rec/conf/pldi/Wu019,Abstract interpretation under speculative execution.
https://dblp.org/rec/conf/pldi/Wu02,Efficient Discovery of Regular Stride Patterns in Irregular Programs.
https://dblp.org/rec/conf/pldi/WuLNZL20,PMThreads: persistent memory threads harnessing versioned shadow copies.
https://dblp.org/rec/conf/pldi/WuMPOH99,A New Framework for Debugging Globally Optimized Code.
https://dblp.org/rec/conf/pldi/WurthingerWHWSS17,Practical partial evaluation for high-performance dynamic language runtimes.
https://dblp.org/rec/conf/pldi/WuTHCY12,Sound and precise analysis of parallel programs through schedule specialization.
https://dblp.org/rec/conf/pldi/XiaoZZZ14,Persistent pointer information.
https://dblp.org/rec/conf/pldi/XieMM03,Compile-time dynamic voltage scaling settings: opportunities and limits.
https://dblp.org/rec/conf/pldi/XinSZ08,Efficient program execution indexing.
https://dblp.org/rec/conf/pldi/XiongJJP01,SPL: A Language and Compiler for DSP Algorithms.
https://dblp.org/rec/conf/pldi/XiP98,Eliminating Array Bound Checking Through Dependent Types.
https://dblp.org/rec/conf/pldi/XiW10,A context-free markup language for semi-structured text.
https://dblp.org/rec/conf/pldi/XuAMRS09,Go with the flow: profiling copies to find runtime bloat.
https://dblp.org/rec/conf/pldi/XuBH05,A serializability violation detector for shared-memory server programs.
https://dblp.org/rec/conf/pldi/XuBQR11,LeakChaser: helping programmers narrow down causes of memory leaks.
https://dblp.org/rec/conf/pldi/XuLFMZLY21,Boosting SMT solver performance on mixed-bitwise-arithmetic expressions.
https://dblp.org/rec/conf/pldi/XuLPLPHMPAAJ22,Quartz: superoptimization of Quantum circuits.
https://dblp.org/rec/conf/pldi/XuMARSS10,Finding low-utility data structures.
https://dblp.org/rec/conf/pldi/XuMR00,Safety checking of machine code.
https://dblp.org/rec/conf/pldi/XuR10,Detecting inefficiently-used containers to avoid bloat.
https://dblp.org/rec/conf/pldi/YadavAK22,DISTAL: the distributed tensor algebra compiler.
https://dblp.org/rec/conf/pldi/YaghmazadehKDC16,Synthesizing transformations on hierarchically structured data.
https://dblp.org/rec/conf/pldi/YahavR04,Verifying safety properties using separation and heterogeneous abstractions.
https://dblp.org/rec/conf/pldi/YangCER11,Finding and understanding bugs in C compilers.
https://dblp.org/rec/conf/pldi/YangH10,Safe to the last instruction: automated verification of a type-safe operating system.
https://dblp.org/rec/conf/pldi/YangHASFC16,"Precise, dynamic information flow for database-backed applications."
https://dblp.org/rec/conf/pldi/YangM14,Dynamic space limits for Haskell.
https://dblp.org/rec/conf/pldi/YangOW20,Improving program locality in the GC using hotness.
https://dblp.org/rec/conf/pldi/YangUW98,Improving Performance by Branch Reordering.
https://dblp.org/rec/conf/pldi/YangXKZ10,A GPGPU compiler for memory optimization and parallelism management.
https://dblp.org/rec/conf/pldi/YaoRWJG20,Learning nonlinear loop invariants with gated continuous logic networks.
https://dblp.org/rec/conf/pldi/YellinS88,INC: A Language for Incremental Computations.
https://dblp.org/rec/conf/pldi/YessenovKS17,DemoMatch: API discovery from demonstrations.
https://dblp.org/rec/conf/pldi/YeTTHFSBW021,Automated conformance testing for JavaScript engines via deep compiler fuzzing.
https://dblp.org/rec/conf/pldi/YiAK00,Transforming loops to recursion for multi-level memory hierarchies.
https://dblp.org/rec/conf/pldi/YogaN19,Parallelism-centric what-if and differential analyses.
https://dblp.org/rec/conf/pldi/YongHR99,Pointer Analysis for Programs with Structures and Casting.
https://dblp.org/rec/conf/pldi/YotovLRCDGPPSW03,A comparison of empirical and model-driven optimization.
https://dblp.org/rec/conf/pldi/YoungJKS97,Near-optimal Intraprocedural Branch Alignment.
https://dblp.org/rec/conf/pldi/YuKL13,General data structure expansion for multi-threading.
https://dblp.org/rec/conf/pldi/YuP21,Quantum abstract interpretation.
https://dblp.org/rec/conf/pldi/ZagieboyloSSM22,PDL: a high-level hardware design language for pipelined processors.
https://dblp.org/rec/conf/pldi/ZalameaLAV00,Improved spill code generation for software pipelined loops.
https://dblp.org/rec/conf/pldi/ZaparanuksH12,Algorithmic profiling.
https://dblp.org/rec/conf/pldi/ZeeKR08,Full functional verification of linked data structures.
https://dblp.org/rec/conf/pldi/ZeeKR09,An integrated proof language for imperative programs.
https://dblp.org/rec/conf/pldi/ZengWL11,Cruiser: concurrent heap buffer overflow monitoring using lock-free data structures.
https://dblp.org/rec/conf/pldi/ZhaL022,Verifying optimizations of concurrent programs in the promising semantics.
https://dblp.org/rec/conf/pldi/ZhangAM12,Language-based control and mitigation of timing channels.
https://dblp.org/rec/conf/pldi/ZhangG01,Timestamped Whole Program Path Representation and its Applications.
https://dblp.org/rec/conf/pldi/ZhangG04,Cost effective dynamic program slicing.
https://dblp.org/rec/conf/pldi/ZhangGG06,Pruning dynamic slices with confidence.
https://dblp.org/rec/conf/pldi/ZhangHD22,Karp: a language for NP reductions.
https://dblp.org/rec/conf/pldi/ZhangKW15,Dynamic partial order reduction for relaxed memory models.
https://dblp.org/rec/conf/pldi/ZhangLSLM15,"Lightweight, flexible object-oriented generics."
https://dblp.org/rec/conf/pldi/ZhangLYS13,Fast algorithms for Dyck-CFL-reachability with applications to alias analysis.
https://dblp.org/rec/conf/pldi/ZhangMGNY14,On abstraction refinement for program analyses in Datalog.
https://dblp.org/rec/conf/pldi/ZhangMNY14,Hybrid top-down and bottom-up interprocedural analysis.
https://dblp.org/rec/conf/pldi/ZhangMVJ15,Diagnosing type errors with class.
https://dblp.org/rec/conf/pldi/ZhangNY13,Finding optimum abstractions in parametric dataflow analysis.
https://dblp.org/rec/conf/pldi/ZhangSBLM16,Accepting blame for safe tunneled exceptions.
https://dblp.org/rec/conf/pldi/ZhangSS17,Skeletal program enumeration for rigorous compiler testing.
https://dblp.org/rec/conf/pldi/ZhangTGG07,Towards locating execution omission errors.
https://dblp.org/rec/conf/pldi/ZhangX19,Incremental precision-preserving symbolic inference for probabilistic programs.
https://dblp.org/rec/conf/pldi/ZhaoBM22,"Low-latency, high-throughput garbage collection."
https://dblp.org/rec/conf/pldi/ZhaoLNGZGCWCLDZ21,AKG: automatic kernel generation for neural processing units using polyhedral transformations.
https://dblp.org/rec/conf/pldi/ZhaoNMZ13,Formal verification of SSA-based optimizations for LLVM.
https://dblp.org/rec/conf/pldi/ZhongOSD04,Array regrouping and structure splitting using whole-program reference affinity.
https://dblp.org/rec/conf/pldi/ZhouBCW22,Synthesizing analytical SQL queries from computation demonstration.
https://dblp.org/rec/conf/pldi/ZhouCC11,An SSA-based algorithm for optimal speculative code motion under an execution profile.
https://dblp.org/rec/conf/pldi/ZhouD10,"Bamboo: a data-centric, object-oriented approach to many-core software."
https://dblp.org/rec/conf/pldi/ZhouYY19,An applied quantum Hoare logic.
https://dblp.org/rec/conf/pldi/ZhuangP04,Balancing register allocation across threads for a multithreaded network processor.
https://dblp.org/rec/conf/pldi/ZhuangP05,Differential register allocation.
https://dblp.org/rec/conf/pldi/ZhuangSCC06,"Accurate, efficient, and adaptive calling context profiling."
https://dblp.org/rec/conf/pldi/ZhuC04,Symbolic pointer analysis revisited.
https://dblp.org/rec/conf/pldi/ZhuH98,Communication Optimizations for Parallel C Programs.
https://dblp.org/rec/conf/pldi/ZhuHCW20,On the principles of differentiable quantum programming languages.
https://dblp.org/rec/conf/pldi/ZhuMJ18,A data-driven CHC solver.
https://dblp.org/rec/conf/pldi/ZhuoCLWYQQ20,SympleGraph: distributed graph processing with precise loop-carried dependency guarantee.
https://dblp.org/rec/conf/pldi/ZhuPJ16,Automatically learning shape specifications.
https://dblp.org/rec/conf/pldi/ZhuR16,GreenWeb: language extensions for energy-efficient mobile web computing.
https://dblp.org/rec/conf/pldi/ZhuXMJ19,An inductive synthesis framework for verifiable reinforcement learning.
https://dblp.org/rec/conf/pldi/ZiarekSJ11,Composable asynchronous events.
https://dblp.org/rec/conf/pldi/ZikelicCBR22,Differential cost analysis with simultaneous potentials and anti-potentials.
https://dblp.org/rec/conf/pldi/ZivAGRS15,Composing concurrency control.
https://dblp.org/rec/conf/pldi/ZuoM0B0K21,Execution reconstruction: harnessing failure reoccurrences for failure reproduction.
https://dblp.org/rec/conf/popl/0001NA14,Bias-variance tradeoffs in program analysis.
https://dblp.org/rec/conf/popl/0001NMR16,Learning invariants using decision trees and implication counterexamples.
https://dblp.org/rec/conf/popl/0008E14,Counter-factual typing for debugging type errors.
https://dblp.org/rec/conf/popl/0008E16,Principal type inference for GADTs.
https://dblp.org/rec/conf/popl/AbadiB02,Analyzing security protocols with secrecy types and logic programs.
https://dblp.org/rec/conf/popl/AbadiBHI08,Semantics of transactional memory and automatic mutual exclusion.
https://dblp.org/rec/conf/popl/AbadiBHR99,A Core Calculus of Dependency.
https://dblp.org/rec/conf/popl/AbadiCC93,Formal Parametric Polymorphism.
https://dblp.org/rec/conf/popl/AbadiCCL90,Explicit Substitutions.
https://dblp.org/rec/conf/popl/AbadiCPP89,Dynamic Typing in a Statically-Typed Language.
https://dblp.org/rec/conf/popl/AbadiCV96,An Interpretation of Objects and Object Types.
https://dblp.org/rec/conf/popl/AbadiF01,"Mobile values, new names, and secure communication."
https://dblp.org/rec/conf/popl/AbadiFG00,Authentication Primitives and Their Compilation.
https://dblp.org/rec/conf/popl/AbadiP09,A model of cooperative threads.
https://dblp.org/rec/conf/popl/AbadiP91,A Logical View of Composition and Refinement.
https://dblp.org/rec/conf/popl/AbdullaAJS14,Optimal dynamic partial order reduction.
https://dblp.org/rec/conf/popl/AbelPTS13,Copatterns: programming infinite structures by observations.
https://dblp.org/rec/conf/popl/AbramskyJ91,A Relational Approach to Strictness Analysis for Higher-Order Polymorphic Functions.
https://dblp.org/rec/conf/popl/AcarAB08,Imperative self-adjusting computation.
https://dblp.org/rec/conf/popl/AcarBH02,Adaptive functional programming.
https://dblp.org/rec/conf/popl/AcarBH03,Selective memoization.
https://dblp.org/rec/conf/popl/AccattoliBKL14,A nonstandard standardization theorem.
https://dblp.org/rec/conf/popl/Adams13,Principled parsing for indentation-sensitive languages: revisiting landin's offside rule.
https://dblp.org/rec/conf/popl/Adams15,Towards the Essence of Hygiene.
https://dblp.org/rec/conf/popl/Adl-TabatabaiG93,Evicted Variables and the Interaction of Global Register Allocation and Symbolic Debugging.
https://dblp.org/rec/conf/popl/Agat00,Transforming Out Timing Leaks.
https://dblp.org/rec/conf/popl/Agrawal94,"Dominators, Super Blocks, and Program Coverage."
https://dblp.org/rec/conf/popl/Agten0P15,Sound Modular Verification of C Code Executing in an Unverified Context.
https://dblp.org/rec/conf/popl/AhmanHMMPPRS17,Dijkstra monads for free.
https://dblp.org/rec/conf/popl/AhmedDR09,State-dependent representation independence.
https://dblp.org/rec/conf/popl/AhmedFSW11,Blame for all.
https://dblp.org/rec/conf/popl/AhoG85,Efficient Tree Pattern Matching: An Aid to Code Generation.
https://dblp.org/rec/conf/popl/AhoJU73,Deterministic Parsing of Ambiguous Grammars.
https://dblp.org/rec/conf/popl/AhoJU76,Code Generation for Expressions with Common Subexpressions.
https://dblp.org/rec/conf/popl/AhoJU77,Code Generation for Machines with Multiregister Operations.
https://dblp.org/rec/conf/popl/AhoU79,The Universality of Data Retrieval Languages.
https://dblp.org/rec/conf/popl/AikenG98,Barrier Inference.
https://dblp.org/rec/conf/popl/AikenM91,Static Type Inference in a Dynamically Typed Language.
https://dblp.org/rec/conf/popl/AikenWL94,Soft Typing with Conditional Types.
https://dblp.org/rec/conf/popl/AikenWW90,Program Transformation in the Presence of Errors.
https://dblp.org/rec/conf/popl/Ait-KaciN86,Logic and Inheritance.
https://dblp.org/rec/conf/popl/AlaviGG08,Extensible encoding of type hierarchies.
https://dblp.org/rec/conf/popl/AlbarghouthiDG16,Maximal specification synthesis.
https://dblp.org/rec/conf/popl/AlbergaBLMW81,A Program Development Tool.
https://dblp.org/rec/conf/popl/AlglaveC17,Ogre and Pythia: an invariance proof method for weak consistency models.
https://dblp.org/rec/conf/popl/AllenCK87,Automatic Decomposition of Scientific Programs for Parallel Execution.
https://dblp.org/rec/conf/popl/AllenKPW83,Conversion of Control Dependence to Data Dependence.
https://dblp.org/rec/conf/popl/AlpernWZ88,Detecting Equality of Variables in Programs.
https://dblp.org/rec/conf/popl/AltenkirchK16,Type theory in type theory using quotient inductive types.
https://dblp.org/rec/conf/popl/AltucherL95,An Extended Form of Must Alias Analysis for Dynamic Allocation.
https://dblp.org/rec/conf/popl/AlurC11,Streaming transducers for algorithmic verification of single-pass list-processing programs.
https://dblp.org/rec/conf/popl/AlurCM06,A fixpoint calculus for local and global program flows.
https://dblp.org/rec/conf/popl/AlurCMN05,Synthesis of interface specifications for Java classes.
https://dblp.org/rec/conf/popl/AlurDR15,DReX: A Declarative Language for Efficiently Evaluating Regular String Transformations.
https://dblp.org/rec/conf/popl/AlurG00,Modular Refinement of Hierarchic Reactive Machines.
https://dblp.org/rec/conf/popl/AmadioC91,Subtyping Recursive Types.
https://dblp.org/rec/conf/popl/AmericaBKR86,Operational Semantics of a Parallel Object-Oriented Language.
https://dblp.org/rec/conf/popl/AminR17,Type soundness proofs with definitional interpreters.
https://dblp.org/rec/conf/popl/AminR17a,LMS-Verify: abstraction without regret for verified systems programming.
https://dblp.org/rec/conf/popl/AmmonsBL02,Mining specifications.
https://dblp.org/rec/conf/popl/AmorimCDDHPPPT14,A verified information-flow architecture.
https://dblp.org/rec/conf/popl/AmorimGHKC17,A semantic account of metric preservation.
https://dblp.org/rec/conf/popl/AmtoftBB06,A logic for information flow in object-oriented programs.
https://dblp.org/rec/conf/popl/AnantharamanCFM85,Compiling Path Expressions into VLSI Circuits.
https://dblp.org/rec/conf/popl/AnCFH11,Dynamic inference of static types for ruby.
https://dblp.org/rec/conf/popl/AnconaDDZ05,Polymorphic bytecode: compositional compilation for Java-like languages.
https://dblp.org/rec/conf/popl/AnconaZ04,Principal typings for Java-like languages.
https://dblp.org/rec/conf/popl/AndersonFGJKSW14,NetkAT: semantic foundations for networks.
https://dblp.org/rec/conf/popl/Andler79,Predicate Path Expressions.
https://dblp.org/rec/conf/popl/AndryscoJL16,"Printing floating-point numbers: a faster, always correct method."
https://dblp.org/rec/conf/popl/AngiuliHW17,Computational higher-dimensional type theory.
https://dblp.org/rec/conf/popl/AntoyEH94,A Needed Narrowing Strategy.
https://dblp.org/rec/conf/popl/Aponte93,Extending Record Typing to Type Parametric Modules with Sharing.
https://dblp.org/rec/conf/popl/Appel85,Semantics-Directed Code Generation.
https://dblp.org/rec/conf/popl/AppelF00,A Semantic Model of Types and Machine Instructions for Proof-Carrying Code.
https://dblp.org/rec/conf/popl/AppelJ89,"Continuation-Passing, Closure-Passing Style."
https://dblp.org/rec/conf/popl/AppelMRV07,"A very modal model of a modern, major, general type system."
https://dblp.org/rec/conf/popl/AptFK87,Appraising Fairness in Languages for Distributed Programming.
https://dblp.org/rec/conf/popl/AptS97,Search and Imperative Programming.
https://dblp.org/rec/conf/popl/AriolaFMOW95,The Call-by-Need Lambda Calculus.
https://dblp.org/rec/conf/popl/AriolaS98,Correctness of Monadic State: An Imperative Call-by-Need Calculus.
https://dblp.org/rec/conf/popl/AshcroftW78,Clauses: Scope Structures and Defined Functions in Lucid.
https://dblp.org/rec/conf/popl/Ashley96,A Practical and Flexible Flow Analysis for Higher-Order Languages.
https://dblp.org/rec/conf/popl/Asperti08,The intensional content of Rice's theorem.
https://dblp.org/rec/conf/popl/Asperti96,On the Complexity of Beta-Reduction.
https://dblp.org/rec/conf/popl/AspertiCM00,(Optimal) Duplication is not Elementary Recursive.
https://dblp.org/rec/conf/popl/AspertiFG90,"Implicative Formulae in the ""Proofs as Computations"" Analogy."
https://dblp.org/rec/conf/popl/AspertiM98,Parallel Beta Reduction is not Elementary Recursive.
https://dblp.org/rec/conf/popl/AssafNSTT17,Hypercollecting semantics and its application to static analysis of information flow.
https://dblp.org/rec/conf/popl/AtigBBM10,On the verification problem for weak memory models.
https://dblp.org/rec/conf/popl/Atkey14,"From parametricity to conservation laws, via Noether's theorem."
https://dblp.org/rec/conf/popl/AtkeyGJ14,A relationally parametric model of dependent type theory.
https://dblp.org/rec/conf/popl/AtkeyJK13,Abstraction and invariance for algebraically indexed types.
https://dblp.org/rec/conf/popl/AttieE89,Synthesis of Concurrent Systems with Many Similar Sequential Processes.
https://dblp.org/rec/conf/popl/AttieFG90,Fairness and Hyperfairness in Multi-Party Interactions.
https://dblp.org/rec/conf/popl/AttiyaGHKMV11,Laws of order: expensive synchronization in concurrent algorithms cannot be eliminated.
https://dblp.org/rec/conf/popl/AttiyaRR10,Sequential verification of serializability.
https://dblp.org/rec/conf/popl/AustinF12,Multiple facets for dynamic information flow.
https://dblp.org/rec/conf/popl/AvgustinovHOMSTV07,Semantics of static pointcuts in aspectJ.
https://dblp.org/rec/conf/popl/AydemirCPPW08,Engineering formal metatheory.
https://dblp.org/rec/conf/popl/BackMR83,Derivation of Efficient DAG Marking Algorithms.
https://dblp.org/rec/conf/popl/Backus73,Programming Language Semantics and Closed Applicative Languages.
https://dblp.org/rec/conf/popl/BaconCR03,A real-time garbage collector with low overhead and consistent utilization.
https://dblp.org/rec/conf/popl/BaileyD95,A Formal Model of Procedure Calling Conventions.
https://dblp.org/rec/conf/popl/Baker76,An Algorithm for Structuring Programs.
https://dblp.org/rec/conf/popl/Balabonski12,A unified approach to fully lazy sharing.
https://dblp.org/rec/conf/popl/BalatCF04,Extensional normalisation and type-directed partial evaluation for typed lambda calculus with sums.
https://dblp.org/rec/conf/popl/BallL92,Optimally Profiling and Tracing Programs.
https://dblp.org/rec/conf/popl/BallMS98,Edge Profiling versus Path Profiling: The Showdown.
https://dblp.org/rec/conf/popl/BallNR03,From symptom to cause: localizing errors in counterexample traces.
https://dblp.org/rec/conf/popl/BallR02,The SLAM project: debugging system software via static analysis.
https://dblp.org/rec/conf/popl/Bandes84,Constraining-Unification and the Programming Language Unicorn.
https://dblp.org/rec/conf/popl/BanerjeeN02,"Representation independence, confinement and access control [extended abstract]."
https://dblp.org/rec/conf/popl/BankLM97,Parameterized Types for Java.
https://dblp.org/rec/conf/popl/Banning79,An Efficient Way to Find Side Effects of Procedure Calls and Aliases of Variables.
https://dblp.org/rec/conf/popl/BaoKPRS16,PolyCheck: dynamic verification of iteration space transformations on affine programs.
https://dblp.org/rec/conf/popl/BarbutiCGL92,Modeling Prolog Control.
https://dblp.org/rec/conf/popl/Barker09,Wild control operators.
https://dblp.org/rec/conf/popl/BarringerKP86,A Really Abstract Concurrent Model and its Temporal Logic.
https://dblp.org/rec/conf/popl/BarrVLS13,Automatic detection of floating-point exceptions.
https://dblp.org/rec/conf/popl/Barth77,An Interprocedural Data Flow Analysis Algorithm.
https://dblp.org/rec/conf/popl/BartheCKL03,Pure patterns type systems.
https://dblp.org/rec/conf/popl/BartheFGSSB14,Probabilistic relational verification for cryptographic implementations.
https://dblp.org/rec/conf/popl/BartheGAHRS15,Higher-Order Approximate Relational Refinement Types for Mechanism Design and Differential Privacy.
https://dblp.org/rec/conf/popl/BartheGB09,Formal certification of code-based cryptographic proofs.
https://dblp.org/rec/conf/popl/BartheGHS17,Coupling proofs are probabilistic product programs.
https://dblp.org/rec/conf/popl/BartheKOB12,Probabilistic relational reasoning for differential privacy.
https://dblp.org/rec/conf/popl/BarthouCC98,Maximal Static Expansion.
https://dblp.org/rec/conf/popl/BastaniAA15,Specification Inference Using Context-Free Language Reachability.
https://dblp.org/rec/conf/popl/BasuBO12,Deciding choreography realizability.
https://dblp.org/rec/conf/popl/BatesH93,Incremental Program Testing Using Program Dependence Graphs.
https://dblp.org/rec/conf/popl/BatesL92,Recognizing Substrings of LR(k) Languages in Linear Time.
https://dblp.org/rec/conf/popl/Batory07,From implementation to theory in product synthesis.
https://dblp.org/rec/conf/popl/BattyDG13,Library abstraction for C/C++ concurrency.
https://dblp.org/rec/conf/popl/BattyDW16,Overhauling SC atomics in C11 and OpenCL.
https://dblp.org/rec/conf/popl/BattyMOSS12,Clarifying and compiling C/C++ concurrency: from C++11 to POWER.
https://dblp.org/rec/conf/popl/BattyOSSW11,Mathematizing C++ concurrency.
https://dblp.org/rec/conf/popl/Baudinet89,Temporal Logic Programming is Complete and Expressive.
https://dblp.org/rec/conf/popl/Bawden00,First-Class Macros have Types.
https://dblp.org/rec/conf/popl/BaxterB89,The Program Dependence Graph and Vectorization.
https://dblp.org/rec/conf/popl/Beech73,On the Definitional Method of Standard PL/1.
https://dblp.org/rec/conf/popl/Ben-AmramG13,On the linear ranking problem for integer linear-constraint loops.
https://dblp.org/rec/conf/popl/Ben-AriMP81,The Temporal Logic of Branching Time.
https://dblp.org/rec/conf/popl/BenderskyP11,Space overhead bounds for dynamic memory management with partial compaction.
https://dblp.org/rec/conf/popl/Benton04,Simple relational correctness proofs for static analyses and program transformations.
https://dblp.org/rec/conf/popl/Benton0N14,Abstract effects and proof-relevant logical relations.
https://dblp.org/rec/conf/popl/BenzakenCNS13,Static and dynamic semantics of NoSQL languages.
https://dblp.org/rec/conf/popl/BerdineCCDO07,Variance analyses from invariance analyses.
https://dblp.org/rec/conf/popl/BernsteinJR87,Scheduling Arithmetic and Load Operations in Parallel with No Spilling.
https://dblp.org/rec/conf/popl/BernsteinPR85,Optimal Scheduling of Arithmetic Operations in Parallel with Memory Accesses.
https://dblp.org/rec/conf/popl/BerryB90,The Chemical Abstract Machine.
https://dblp.org/rec/conf/popl/BerryL77,Minimal and Optimal Computations of Recursive Programs.
https://dblp.org/rec/conf/popl/BerryMT92,A Semantics for ML Concurrency Primitives.
https://dblp.org/rec/conf/popl/BerryRS93,Communicating Reactive Processes.
https://dblp.org/rec/conf/popl/BeyeneCPR14,A constraint-based approach to solving games on infinite graphs.
https://dblp.org/rec/conf/popl/BhargavanCMG01,What packets may come: automata for network monitoring.
https://dblp.org/rec/conf/popl/BhargavanFG04,A semantics for web services authentication.
https://dblp.org/rec/conf/popl/BhargavanFG10,Modular verification of security protocol code by typing.
https://dblp.org/rec/conf/popl/BhaskaracharyaB16,SMO: an integrated approach to intra-array and inter-array storage optimization.
https://dblp.org/rec/conf/popl/BhatAVG12,A type theory for probability density functions.
https://dblp.org/rec/conf/popl/Birkedal14,Modular reasoning about concurrent higher-order imperative programs.
https://dblp.org/rec/conf/popl/BirkedalRSSTY11,Step-indexed kripke models over recursive worlds.
https://dblp.org/rec/conf/popl/BirkedalTR04,Local reasoning about a copying garbage collector.
https://dblp.org/rec/conf/popl/BirkedalTV96,From Region Inference to von Neumann Machines via Region Representation Inference.
https://dblp.org/rec/conf/popl/BishopFNSSW06,Engineering with logic: HOL specification and symbolic-evaluation testing for TCP implementations.
https://dblp.org/rec/conf/popl/Biswas95,Higher-Order Functors with Transparent Signatures.
https://dblp.org/rec/conf/popl/Biswas97,A Demand-Driven Set-Based Analysis.
https://dblp.org/rec/conf/popl/BlackO12,"Presentation of the SIGPLAN distinguished achievement award to Sir Charles Antony Richard Hoare, FRS, FREng, FBCS; and interview."
https://dblp.org/rec/conf/popl/Blanchet98,"Escape Analysis: Correctness Proof, Implementation and Experimental Results."
https://dblp.org/rec/conf/popl/BlellochH13,Cache and I/O efficent functional algorithms.
https://dblp.org/rec/conf/popl/Bloom94,CHOCOLATE: Calculi of Higher Order COmmunication and LAmbda TErms.
https://dblp.org/rec/conf/popl/Bloom95,Structured Operational Semantics as a Specification Language.
https://dblp.org/rec/conf/popl/BloomIM88,Bisimulation Can't Be Traced.
https://dblp.org/rec/conf/popl/BocchinoHHAAWS11,Safe nondeterminism in a deterministic-by-default parallel language.
https://dblp.org/rec/conf/popl/BodikA98,Path-Sensitive Value-Flow Analysis.
https://dblp.org/rec/conf/popl/BodikCGKTBR10,Programming with angelic nondeterminism.
https://dblp.org/rec/conf/popl/BodinCFGMNSS14,A trusted mechanised JavaScript specification.
https://dblp.org/rec/conf/popl/Boehm02,Bounding space usage of conservative garbage collectors.
https://dblp.org/rec/conf/popl/Boehm03,"Destructors, finalizers, and synchronization."
https://dblp.org/rec/conf/popl/Boehm04,The space cost of lazy reference counting.
https://dblp.org/rec/conf/popl/Boehm82,A Logic for Expressions with Side-Effects.
https://dblp.org/rec/conf/popl/BoerGMP94,Proving Concurrent Constraint Programs Correct.
https://dblp.org/rec/conf/popl/BogdanasR15,K-Java: A Complete Semantics of Java.
https://dblp.org/rec/conf/popl/BohannonFPPS08,Boomerang: resourceful lenses for string data.
https://dblp.org/rec/conf/popl/BojanczykBKL12,Towards nominal computation.
https://dblp.org/rec/conf/popl/BokerHR14,Battery transition systems.
https://dblp.org/rec/conf/popl/BonarS83,Uncovering Principles of Novice Programming.
https://dblp.org/rec/conf/popl/BonchiP13,Checking NFA equivalence with bisimulations up to congruence.
https://dblp.org/rec/conf/popl/BonchiSZ15,Full Abstraction for Signal Flow Graphs.
https://dblp.org/rec/conf/popl/BorgstromGORSS16,Fabular: regression formulas as probabilistic programming.
https://dblp.org/rec/conf/popl/BornatCOP05,Permission accounting in separation logic.
https://dblp.org/rec/conf/popl/BornholtTGC16,Optimizing synthesis with metasketches.
https://dblp.org/rec/conf/popl/BorningI82,A Type Declaration and Inference System for Smalltalk.
https://dblp.org/rec/conf/popl/BosschereDGK94,Call Forwarding: A Simple Interprocedural Optimization Technique for Dynamically Typed Languages.
https://dblp.org/rec/conf/popl/BossiB93,Differential Logic Programming.
https://dblp.org/rec/conf/popl/BotincanB13,Sigma*: symbolic learning of input-output specifications.
https://dblp.org/rec/conf/popl/BotincanDJ12,Resource-sensitive synchronization inference by abduction.
https://dblp.org/rec/conf/popl/BouajjaniE12,Analysis of recursively parallel programs.
https://dblp.org/rec/conf/popl/BouajjaniEEH15,Tractable Refinement Checking for Concurrent Objects.
https://dblp.org/rec/conf/popl/BouajjaniEGH17,On verifying causal consistency.
https://dblp.org/rec/conf/popl/BouajjaniEH14,Verifying eventual consistency of optimistic replication systems.
https://dblp.org/rec/conf/popl/BouajjaniEH95,Verifying Infinite State Processes with Sequential and Parallel Composition.
https://dblp.org/rec/conf/popl/BouajjaniET03,A generic approach to the static analysis of concurrent programs with procedures.
https://dblp.org/rec/conf/popl/Boudol97,The Pi-calculus in Direct Style.
https://dblp.org/rec/conf/popl/BoudolP09,Relaxed memory models: an operational approach.
https://dblp.org/rec/conf/popl/BougeF88,A Compositional Approach to Superimposition.
https://dblp.org/rec/conf/popl/BourdoncleM97,Type-Checking Higher-Order Polymorphic Multi-Methods.
https://dblp.org/rec/conf/popl/BoyapatiLS03,Ownership types for object encapsulation.
https://dblp.org/rec/conf/popl/BoyerMS76,Primitive Recursive Program Transformations.
https://dblp.org/rec/conf/popl/BoylandG94,Composing Tree Attributions.
https://dblp.org/rec/conf/popl/BoylandR05,Connecting effects and uniqueness with adoption.
https://dblp.org/rec/conf/popl/BrittonDGHH76,Procedure Referencing Environments in SL5.
https://dblp.org/rec/conf/popl/BrobergS10,Paralocks: role-based information flow control and beyond.
https://dblp.org/rec/conf/popl/BronsonKO09,Feedback-directed barrier optimization in a strongly isolated STM.
https://dblp.org/rec/conf/popl/BrookesD95,"Sequential Algorithms, Deterministic Parallelism, and Intensional Expressiveness."
https://dblp.org/rec/conf/popl/BrookesOR14,The essence of Reynolds.
https://dblp.org/rec/conf/popl/BrotherstonBC08,Cyclic proofs of program termination in separation logic.
https://dblp.org/rec/conf/popl/BrotherstonC09,Classical BI: a logic for reasoning about dualising resources.
https://dblp.org/rec/conf/popl/BrotherstonGKR16,Model checking for symbolic-heap separation logic with inductive predicates.
https://dblp.org/rec/conf/popl/BrotherstonV14,Parametric completeness for separation theories.
https://dblp.org/rec/conf/popl/BrownP15,Self-Representation in Girard's System U.
https://dblp.org/rec/conf/popl/BrownP16,Breaking through the normalization barrier: a self-interpreter for f-omega.
https://dblp.org/rec/conf/popl/BrownP17,Typed self-evaluation via intensional type functions.
https://dblp.org/rec/conf/popl/Bruce93,Safe Type Checking in a Statically-Typed Object-Oriented Programming Language.
https://dblp.org/rec/conf/popl/BruceM92,"PER Models of Subtyping, Recursive Types and Higher-Order Polymorphism."
https://dblp.org/rec/conf/popl/BrunelDHLM09,A foundation for flow-based program matching: using temporal logic and model checking.
https://dblp.org/rec/conf/popl/BruniMM05,Theoretical foundations for compensations in flow composition languages.
https://dblp.org/rec/conf/popl/BrutschyD0V17,"Serializability for eventual consistency: criterion, analysis, and applications."
https://dblp.org/rec/conf/popl/BuddDLS80,Theoretical and Emperical Studies on Using Program Mutation to Test the Functional Correctness of Programs.
https://dblp.org/rec/conf/popl/BugliesiC01,Secure safe ambients.
https://dblp.org/rec/conf/popl/BugliesiG07,Secure implementations of typed channel abstractions.
https://dblp.org/rec/conf/popl/Buneman15,Databases and Programming: Two Subjects Divided by a Common Language?
https://dblp.org/rec/conf/popl/BurckhardtGYZ14,"Replicated data types: specification, verification, optimality."
https://dblp.org/rec/conf/popl/Burn90,A Relationship Between Abstract Interpretation and Projection Analysis.
https://dblp.org/rec/conf/popl/CaiGO16,System f-omega with equirecursive types for datatype-generic programming.
https://dblp.org/rec/conf/popl/CaiP87,Binding Performance at Language Design Time.
https://dblp.org/rec/conf/popl/CaiP91,"""Look Ma, No Hashing, And No Arrays Neither""."
https://dblp.org/rec/conf/popl/CairesS13,The type discipline of behavioral separation.
https://dblp.org/rec/conf/popl/Calcagno01,Stratified operational semantics for safety and correctness of the region calculus.
https://dblp.org/rec/conf/popl/CalcagnoDOY09,Compositional shape analysis by means of bi-abduction.
https://dblp.org/rec/conf/popl/CalcagnoGZ05,Context logic and tree update.
https://dblp.org/rec/conf/popl/CalcagnoGZ07,Context logic as modal logic: completeness and parametric inexpressivity.
https://dblp.org/rec/conf/popl/CalderG94,Reducing Indirect Function call Overhead in C++ Programs.
https://dblp.org/rec/conf/popl/CarboneM13,Deadlock-freedom-by-design: multiparty asynchronous global programming.
https://dblp.org/rec/conf/popl/Cardelli88,Structural Subtyping and the Notion of Power Type.
https://dblp.org/rec/conf/popl/Cardelli95,A Language with Distributed Scope.
https://dblp.org/rec/conf/popl/Cardelli97,"Program Fragments, Linking, and Modularization."
https://dblp.org/rec/conf/popl/CardelliDJKN89,The Modula-3 Type System.
https://dblp.org/rec/conf/popl/CardelliG00,"Anytime, Anywhere: Modal Logics for Mobile Ambients."
https://dblp.org/rec/conf/popl/CardelliG99,Types for Mobile Ambients.
https://dblp.org/rec/conf/popl/CardelliTTV16,Symbolic computation of differential equivalences.
https://dblp.org/rec/conf/popl/CaromelHS04,Asynchronous and deterministic objects.
https://dblp.org/rec/conf/popl/CarrieroGL86,Distributed Data Structures in Linda.
https://dblp.org/rec/conf/popl/CarrollR88,Incremental Data Flow Analysis via Dominator and Attribute Updates.
https://dblp.org/rec/conf/popl/CarterFH97,Determining the Idle Time of a Tiling.
https://dblp.org/rec/conf/popl/CarterFT03,Folklore confirmed: reducible flow graphs are exponentially larger.
https://dblp.org/rec/conf/popl/Cartwright81,Formal Program Testing.
https://dblp.org/rec/conf/popl/Cartwright85,Types as Intervals.
https://dblp.org/rec/conf/popl/CartwrightF92,Observable Sequentiality and Full Abstraction.
https://dblp.org/rec/conf/popl/CartwrightHM81,Paths: An Abstract Alternative to Pointers.
https://dblp.org/rec/conf/popl/CartwrightM79,First Order Programming Logic.
https://dblp.org/rec/conf/popl/CartwrightO78,Unrestricted Procedure Calls in Hoare's Logic.
https://dblp.org/rec/conf/popl/CasanovaB79,The Logic of a Relational Data Manipulation Language.
https://dblp.org/rec/conf/popl/CasinghinoSW14,Combining proofs and programs in a dependently typed language.
https://dblp.org/rec/conf/popl/CaspiPHP87,Lustre: A Declarative Language for Programming Synchronous Systems.
https://dblp.org/rec/conf/popl/Castagna0XA15,Polymorphic Functions with Set-Theoretic Types: Part 2: Local Type Inference and Type Reconstruction.
https://dblp.org/rec/conf/popl/Castagna0XILP14,"Polymorphic functions with set-theoretic types: part 1: syntax, semantics, and evaluation."
https://dblp.org/rec/conf/popl/CastagnaGP08,A theory of contracts for web services.
https://dblp.org/rec/conf/popl/CastagnaP94,Decidable Bounded Quantification.
https://dblp.org/rec/conf/popl/CastagnaP95,Corrigendum: Decidable Bounded Quantification.
https://dblp.org/rec/conf/popl/CaveFPP14,Fair reactive programming.
https://dblp.org/rec/conf/popl/CaveP12,Programming with binders and indexed data-types.
https://dblp.org/rec/conf/popl/CernyHR13,Quantitative abstraction refinement.
https://dblp.org/rec/conf/popl/Chakaravarthy03,New results on the computability and complexity of points - to analysis.
https://dblp.org/rec/conf/popl/ChakiRR02,Types as models: model checking message-passing programs.
https://dblp.org/rec/conf/popl/ChakravartyKJM05,Associated types with class.
https://dblp.org/rec/conf/popl/ChambersHV00,A Debate on Language and Tool Support for Design Patterns.
https://dblp.org/rec/conf/popl/Chandra73,On the Decision Problems of Program Schemas with Commutative and Invertable Functions.
https://dblp.org/rec/conf/popl/Chandra81,Programming Primitives for Database Languages.
https://dblp.org/rec/conf/popl/ChangF14,Profiling for laziness.
https://dblp.org/rec/conf/popl/ChangKG17,Type systems as macros.
https://dblp.org/rec/conf/popl/ChangR08,Relational inductive shape analysis.
https://dblp.org/rec/conf/popl/CharatonikPT00,Paths vs. Trees in Set-Based Program Analysis.
https://dblp.org/rec/conf/popl/Chase87,An Improvement to Bottom-up Tree Pattern Matching.
https://dblp.org/rec/conf/popl/ChatterjeeFNH16,Algorithmic analysis of qualitative and quantitative termination problems for affine probabilistic programs.
https://dblp.org/rec/conf/popl/ChatterjeeGIP16,Algorithms for algebraic path properties in concurrent systems of constant treewidth components.
https://dblp.org/rec/conf/popl/ChatterjeeGST93,Automatic Array Alignment in Data-Parallel Programs.
https://dblp.org/rec/conf/popl/ChatterjeeIPG15,Faster Algorithms for Algebraic Path Properties in Recursive State Machines with Constant Treewidth.
https://dblp.org/rec/conf/popl/ChatterjeeNZ17,Stochastic invariants for probabilistic termination.
https://dblp.org/rec/conf/popl/ChatterjeePV15,Quantitative Interprocedural Analysis.
https://dblp.org/rec/conf/popl/ChatterjeeRL99,Relevant Context Inference.
https://dblp.org/rec/conf/popl/Chaudhuri08,Subcubic algorithms for recursive state machines.
https://dblp.org/rec/conf/popl/ChaudhuriCS14,Bridging boolean and quantitative synthesis using smoothed proof search.
https://dblp.org/rec/conf/popl/ChaudhuriFK14,Consistency analysis of decision-making programs.
https://dblp.org/rec/conf/popl/ChaudhuriGL10,Continuity analysis of programs.
https://dblp.org/rec/conf/popl/Chen03,Coercive subtyping for the calculus of constructions.
https://dblp.org/rec/conf/popl/Chen07,A typed intermediate language for compiling multiple inheritance.
https://dblp.org/rec/conf/popl/Chen86,A Parallel Language and its Compilation to Multiprocessor Machines or VLSI.
https://dblp.org/rec/conf/popl/ChenH97,Rolling Your Own MADT - A Connection Between Linear Types and Monads.
https://dblp.org/rec/conf/popl/ChenLK06,Compiler-directed channel allocation for saving power in on-chip networks.
https://dblp.org/rec/conf/popl/ChenT05,A simple typed intermediate language for object-oriented languages.
https://dblp.org/rec/conf/popl/CheritonW87,Extensions for Multi-Module Records in Conventional Programming Languages.
https://dblp.org/rec/conf/popl/CherniavskyK77,A Complete and Consistent Hoare Semantics for a Simple Programming Language.
https://dblp.org/rec/conf/popl/ChiangBBSGR17,Rigorous floating-point mixed-precision tuning.
https://dblp.org/rec/conf/popl/ChinDNQ08,Enhancing modular OO verification with separation logic.
https://dblp.org/rec/conf/popl/Chlipala10,A verified compiler for an impure functional language.
https://dblp.org/rec/conf/popl/Chlipala15,Ur/Web: A Simple Model for Programming the Web.
https://dblp.org/rec/conf/popl/Chlipala15a,From Network Interface to Multithreaded Web Applications: A Case Study in Modular Program Verification.
https://dblp.org/rec/conf/popl/ChoiAYT11,Static analysis of multi-staged programs via unstaging translation.
https://dblp.org/rec/conf/popl/ChoiBC93,Efficient Flow-Sensitive Interprocedural Computation of Pointer-Induced Aliases and Side Effects.
https://dblp.org/rec/conf/popl/ChoiCF91,Automatic Construction of Sparse Data Flow Evaluation Graphs.
https://dblp.org/rec/conf/popl/ChongDK14,A sound and complete abstraction for reasoning about parallel prefix sums.
https://dblp.org/rec/conf/popl/ChowH92,Compile-Time Analysis of Parallel Programs that Share Memory.
https://dblp.org/rec/conf/popl/ChughRJ12,Nested refinements: a logic for duck typing.
https://dblp.org/rec/conf/popl/ChungMES00,Reducing Sweep Time for a Nearly Empty Heap.
https://dblp.org/rec/conf/popl/CicekBG0H17,Relational cost analysis.
https://dblp.org/rec/conf/popl/CiminiS16,The gradualizer: a methodology and algorithm for generating gradual type systems.
https://dblp.org/rec/conf/popl/CiminiS17,Automatically generating the dynamic semantics of gradually typed languages.
https://dblp.org/rec/conf/popl/Clarke77,"Programming Language Constructs for Which it is Impossible to Obtain ""Good"" Hoare-Like Axiom Systems."
https://dblp.org/rec/conf/popl/Clarke79,Synthesis of Resource Invariants for Concurrent Programs.
https://dblp.org/rec/conf/popl/ClarkeES83,Automatic Verification of Finite State Concurrent Systems Using Temporal Logic Specifications: A Practical Approach.
https://dblp.org/rec/conf/popl/ClarkeGH82,On Effective Axiomatizations of Hoare Logics.
https://dblp.org/rec/conf/popl/ClarkeGL92,Model Checking and Abstraction.
https://dblp.org/rec/conf/popl/CleavelandY94,An Operational Framework for Value-Passing Processes.
https://dblp.org/rec/conf/popl/Clergerie93,Layer Sharing: An Improved Structure-Sharing Framework.
https://dblp.org/rec/conf/popl/ClingerR91,Macros That Work.
https://dblp.org/rec/conf/popl/CobbeF05,Environmental acquisition revisited.
https://dblp.org/rec/conf/popl/CochranDLMV15,Program Boosting: Program Synthesis via Crowd-Sourcing.
https://dblp.org/rec/conf/popl/CodishDG93,Compositional Analysis of Modular Logic Programs.
https://dblp.org/rec/conf/popl/Cohen75,A Semantic Model for Parallel Systems with Scheduling.
https://dblp.org/rec/conf/popl/Cohen79,Characterization and Elimination of Redundancy in Recursive Programs.
https://dblp.org/rec/conf/popl/CohenDEPPP06,N-synchronous Kahn networks: a relaxed model of synchrony for real-time systems.
https://dblp.org/rec/conf/popl/CohenH79,Automatic Generation of Near-Optimal Translators for Noncircular Attribute Grammars.
https://dblp.org/rec/conf/popl/ColbyL96,Trace-Based Program Analysis.
https://dblp.org/rec/conf/popl/ColcombetF00,Enforcing Trace Properties by Program Transformation.
https://dblp.org/rec/conf/popl/CollbergT99,Software Watermarking: Models and Dynamic Embeddings.
https://dblp.org/rec/conf/popl/CollbergTL98,"Manufacturing Cheap, Resilient, and Stealthy Opaque Constructs."
https://dblp.org/rec/conf/popl/ConditHLQ09,Unifying type checking and property checking for low-level code.
https://dblp.org/rec/conf/popl/Condry81,"Paging as a ""Language Processing"" Task."
https://dblp.org/rec/conf/popl/ConselD91,Static and Dynamic Semantics Processing.
https://dblp.org/rec/conf/popl/ConselD93,Tutorial Notes on Partial Evaluation.
https://dblp.org/rec/conf/popl/ConselN96,A General Approach for Run-Time Specialization and its Application to C.
https://dblp.org/rec/conf/popl/ConstableJ79,A PL/CV Precis.
https://dblp.org/rec/conf/popl/CookGPRV07,Proving that programs eventually do something good.
https://dblp.org/rec/conf/popl/CookHC90,Inheritance Is Not Subtyping.
https://dblp.org/rec/conf/popl/CookK11,Making prophecies with decision predicates.
https://dblp.org/rec/conf/popl/CookO75,An Assertion Language for Data Structures.
https://dblp.org/rec/conf/popl/Cooper82,On the Expressive Power of Query Languages for Relational Databases.
https://dblp.org/rec/conf/popl/Cooper85,Analyzing Aliases of Reference Formal Parameters.
https://dblp.org/rec/conf/popl/CooperK89,Fast Interprocedural Alias Analysis.
https://dblp.org/rec/conf/popl/CortesiCH94,Combinations of Abstract Domains for Logic Programming.
https://dblp.org/rec/conf/popl/Cosmo92,Type Isomorphisms in a Type-Assignment Framework.
https://dblp.org/rec/conf/popl/CoughlinC14,Fissile type analysis: modular checking of almost everywhere invariants.
https://dblp.org/rec/conf/popl/Cousot97,Types as Abstract Interpretations.
https://dblp.org/rec/conf/popl/CousotC00,Temporal Abstract Interpretation.
https://dblp.org/rec/conf/popl/CousotC02,Systematic design of program transformation frameworks by abstract interpretation.
https://dblp.org/rec/conf/popl/CousotC04,An abstract interpretation-based framework for software watermarking.
https://dblp.org/rec/conf/popl/CousotC12,An abstract interpretation framework for termination.
https://dblp.org/rec/conf/popl/CousotC14,A Galois connection calculus for abstract interpretation.
https://dblp.org/rec/conf/popl/CousotC77,Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints.
https://dblp.org/rec/conf/popl/CousotC79,Systematic Design of Program Analysis Frameworks.
https://dblp.org/rec/conf/popl/CousotC92,"Inductive Definitions, Semantics and Abstract Interpretation."
https://dblp.org/rec/conf/popl/CousotCL11,A parametric segmentation functor for fully automatic and scalable array content analysis.
https://dblp.org/rec/conf/popl/CousotH78,Automatic Discovery of Linear Restraints Among Variables of a Program.
https://dblp.org/rec/conf/popl/Coutant86,Retargetable High-Level Alias Analysis.
https://dblp.org/rec/conf/popl/CrankF91,Parameter-Passing and the Lambda Calculus.
https://dblp.org/rec/conf/popl/Crary03,Toward a foundational typed assembly language.
https://dblp.org/rec/conf/popl/Crary17,"Modules, abstraction, and parametric polymorphism."
https://dblp.org/rec/conf/popl/CraryS15,A Calculus for Relaxed Memory.
https://dblp.org/rec/conf/popl/CraryW00,Resource Bound Certification.
https://dblp.org/rec/conf/popl/CraryWM99,Typed Memory Management in a Calculus of Capabilities.
https://dblp.org/rec/conf/popl/CretinR12,On the power of coercion abstraction.
https://dblp.org/rec/conf/popl/Critcher79,The Functional Power of Parameter Passage Mechanisms.
https://dblp.org/rec/conf/popl/Critcher82,On the Ability of Structures to Store and Access Information.
https://dblp.org/rec/conf/popl/Culik78,Almost Control-Free (Indeterministic) Parallel Computation on Permit Schemes.
https://dblp.org/rec/conf/popl/CunyS83,Compilation of Data-Driven Programs for Synchronous Execution.
https://dblp.org/rec/conf/popl/CurienFM16,A theory of effects and resources: adjunction models and polarised calculi.
https://dblp.org/rec/conf/popl/CytronFRWZ89,An Efficient Method of Computing Static Single Assignment Form.
https://dblp.org/rec/conf/popl/CytronLZ86,Code Motion of Control Structures in High-Level Languages.
https://dblp.org/rec/conf/popl/Dal-ZilioLM04,A logic you can count on.
https://dblp.org/rec/conf/popl/Dam06,Decidability and proof systems for language-based noninterference relations.
https://dblp.org/rec/conf/popl/DamasM82,Principal Type-Schemes for Functional Programs.
https://dblp.org/rec/conf/popl/Danielsson08,Lightweight semiformal time complexity analysis for purely functional data structures.
https://dblp.org/rec/conf/popl/DanielssonHJG06,Fast and loose reasoning is morally correct.
https://dblp.org/rec/conf/popl/DannerR06,Adventures in time and space.
https://dblp.org/rec/conf/popl/Dantas06,Harmless advice.
https://dblp.org/rec/conf/popl/DAntoniV14,Minimization of symbolic automata.
https://dblp.org/rec/conf/popl/DAntoniV17,Monadic second-order logic on finite sequences.
https://dblp.org/rec/conf/popl/Danvy96,Type-Directed Partial Evaluation.
https://dblp.org/rec/conf/popl/DarulovaK14,Sound compilation of reals.
https://dblp.org/rec/conf/popl/DavidsonF82,Eliminating Redundant Object Code.
https://dblp.org/rec/conf/popl/DaviesP96,A Modal Analysis of Staged Computation.
https://dblp.org/rec/conf/popl/DawsonRRSSSW95,Unification Factoring for Efficient Execution of Logic Programs.
https://dblp.org/rec/conf/popl/Debray88,Efficient Dataflow Analysis of Logic Programs.
https://dblp.org/rec/conf/popl/DebrayMW98,Alias Analysis of Executable Code.
https://dblp.org/rec/conf/popl/DeFouwGC98,Fast Interprocedural Class Analysis.
https://dblp.org/rec/conf/popl/DelawareOS13,Meta-theory à la carte.
https://dblp.org/rec/conf/popl/DelawarePGC15,Fiat: Deductive Synthesis of Abstract Data Types in a Proof Assistant.
https://dblp.org/rec/conf/popl/DemangeLZJPV13,Plan B: a buffered memory model for Java.
https://dblp.org/rec/conf/popl/Demers77,Generalized Left Corner Parsing.
https://dblp.org/rec/conf/popl/DemersD80,"Data Types, Parameters, and Type Checking."
https://dblp.org/rec/conf/popl/DemersD80a,"""Type-Completeness"" as a Language Design Principle."
https://dblp.org/rec/conf/popl/DemersD83,Making Variables Abstract: An Equational Theory for Russell.
https://dblp.org/rec/conf/popl/DemersDS78,"Data Types as Values: Polymorphism, Type-Checking, Encapsulation."
https://dblp.org/rec/conf/popl/DemersRT81,Incremental Evaluation for Attribute Grammars with Application to Syntax-Directed Editors.
https://dblp.org/rec/conf/popl/DemersWHBBS90,Combining Generational and Conservative Garbage Collection: Framework and Implementations.
https://dblp.org/rec/conf/popl/DeMilloLP77,Social Processes and Proofs of Theorems and Programs.
https://dblp.org/rec/conf/popl/DenielouY11,Dynamic multirole session types.
https://dblp.org/rec/conf/popl/DershowitzK89,"Rewrite, Rewrite, Rewrite, Rewrite, Rewrite."
https://dblp.org/rec/conf/popl/DershowitzM77,The Evolution of Programs: A System for Automatic Program Modification.
https://dblp.org/rec/conf/popl/Deutsch90,On Determining Lifetime and Aliasing of Dynamically Allocated Data in Higher-Order Functional Specifications.
https://dblp.org/rec/conf/popl/Deutsch97,On the Complexity of Escape Analysis.
https://dblp.org/rec/conf/popl/DeutschS84,Efficient Implementation of the Smalltalk-80 System.
https://dblp.org/rec/conf/popl/DevriesePP16,Fully-abstract compilation by approximate back-translation.
https://dblp.org/rec/conf/popl/DhamdhereK93,Complexity of Bidirectional Data Flow Analysis.
https://dblp.org/rec/conf/popl/DiasR10,Automatically generating instruction selectors using declarative machine descriptions.
https://dblp.org/rec/conf/popl/DilligDA11,Precise reasoning for programs using containers.
https://dblp.org/rec/conf/popl/DimoulasFFF11,Correct blame for contracts: no more scapegoating.
https://dblp.org/rec/conf/popl/Dinsdale-YoungBGPY13,Views: compositional reasoning for concurrent programs.
https://dblp.org/rec/conf/popl/DissegnaLR14,Tracing compilation by abstract interpretation.
https://dblp.org/rec/conf/popl/DiwanTM94,Memory Subsystem Performance of Programs Using Copying Garbage Collection.
https://dblp.org/rec/conf/popl/DoddsHK15,"A Scalable, Correct Time-Stamped Stack."
https://dblp.org/rec/conf/popl/DoddsJP11,Modular reasoning for deterministic parallelism.
https://dblp.org/rec/conf/popl/Doeppner77,Parallel Program Correctness Through Refinement.
https://dblp.org/rec/conf/popl/DolanM17,"Polymorphism, subtyping, and type inference in MLsub."
https://dblp.org/rec/conf/popl/DoligezG94,"Portable, Unobtrusive Garbage Collection for Multiprocessor Systems."
https://dblp.org/rec/conf/popl/DoligezL93,"A Concurrent, Generational Garbage Collector for a Multithreaded Implementation of ML."
https://dblp.org/rec/conf/popl/DowneySS78,Off-Line and On-Line Algorithms for Deducing Equalities.
https://dblp.org/rec/conf/popl/DragoiHZ16,PSync: a partially synchronous language for fault-tolerant distributed algorithms.
https://dblp.org/rec/conf/popl/Dreyer04,A type system for well-founded recursion.
https://dblp.org/rec/conf/popl/DreyerCH03,A type system for higher-order modules.
https://dblp.org/rec/conf/popl/DreyerHCK07,Modular type classes.
https://dblp.org/rec/conf/popl/DreyerNRB10,A relational modal logic for higher-order stateful ADTs.
https://dblp.org/rec/conf/popl/DSilvaHK13,Abstract conflict driven learning.
https://dblp.org/rec/conf/popl/DSilvaHK14,Abstract satisfaction.
https://dblp.org/rec/conf/popl/DubaHM91,Typing First-Class Continuations in ML.
https://dblp.org/rec/conf/popl/DuboisRW95,Generic Polymorphism.
https://dblp.org/rec/conf/popl/DudenhefnerR17,Intersection type calculi of bounded dimension.
https://dblp.org/rec/conf/popl/DuesterwaldGS95,Demand-driven Computation of Interprocedural Data Flow.
https://dblp.org/rec/conf/popl/DunfieldP04,Tridirectional typechecking.
https://dblp.org/rec/conf/popl/EbadiSS15,Differential Privacy: Now it's Getting Personal.
https://dblp.org/rec/conf/popl/Edelson92,A Mark-and-Sweep Collector for C++.
https://dblp.org/rec/conf/popl/EhrhardTP14,Probabilistic coherence spaces are fully abstract for probabilistic PCF.
https://dblp.org/rec/conf/popl/EidorffHMNST99,AnnoDomini: From Type Theory to Year 2000 Conversion Tool.
https://dblp.org/rec/conf/popl/EisenbergVJW14,Closed type families with overlapping equations.
https://dblp.org/rec/conf/popl/ElangoRPRS15,On Characterizing the Data Access Complexity of Programs.
https://dblp.org/rec/conf/popl/EllisonR12,An executable formal semantics of C with applications.
https://dblp.org/rec/conf/popl/ElmasQT09,A calculus of atomic actions.
https://dblp.org/rec/conf/popl/EmersonH83,"""Sometimes"" and ""Not Never"" Revisited: On Branching Versus Linear Time."
https://dblp.org/rec/conf/popl/EmersonL85,Modalities for Model Checking: Branching Time Strikes Back.
https://dblp.org/rec/conf/popl/EmersonN95,Reasoning about Rings.
https://dblp.org/rec/conf/popl/EmersonSS89,Efficient Temporal Reasoning.
https://dblp.org/rec/conf/popl/EmmiE16,Symbolic abstract data type inference.
https://dblp.org/rec/conf/popl/EmmiFJM07,Lock allocation.
https://dblp.org/rec/conf/popl/EmmiQR11,Delay-bounded scheduling.
https://dblp.org/rec/conf/popl/EnglerHK96,"C: A Language for High-Level, Efficient, and Machine-Independent Dynamic Code Generation."
https://dblp.org/rec/conf/popl/ErnstOC06,A virtual class calculus.
https://dblp.org/rec/conf/popl/Ertl99,Optimal Code Selection in DAGs.
https://dblp.org/rec/conf/popl/EsparzaG11,Complexity of pattern-based verification for multithreaded programs.
https://dblp.org/rec/conf/popl/EsparzaP00,Efficient Algorithms for pre* and post* on Interprocedural Parallel Flow Graphs.
https://dblp.org/rec/conf/popl/Farnum92,Pattern-Based Tree Attribution.
https://dblp.org/rec/conf/popl/Farrow82,Experience with an Attribute Grammar-Based Compiler.
https://dblp.org/rec/conf/popl/FarrowMY92,Composable Attribute Grammars: Support for Modularity in Translator Design and Implementation.
https://dblp.org/rec/conf/popl/FarzanK12,Verification of parameterized concurrent programs by modular reasoning about data and control.
https://dblp.org/rec/conf/popl/FarzanKP13,Inductive data flow graphs.
https://dblp.org/rec/conf/popl/FarzanKP14,Proofs that count.
https://dblp.org/rec/conf/popl/FarzanKP15,Proof Spaces for Unbounded Parallelism.
https://dblp.org/rec/conf/popl/FegarasS96,"Revisiting Catamorphisms over Datatypes with Embedded Functions (or, Programs from Outer Space)."
https://dblp.org/rec/conf/popl/FeigenKCX94,The Revival Transformation.
https://dblp.org/rec/conf/popl/Felleisen02,From POPL to the classroom and back.
https://dblp.org/rec/conf/popl/Felleisen88,The Theory and Practice of First-Class Prompts.
https://dblp.org/rec/conf/popl/FelleisenF87,A Calculus for Assignments in Higher-Order Languages.
https://dblp.org/rec/conf/popl/Feng09,Local rely-guarantee reasoning.
https://dblp.org/rec/conf/popl/FengDY11,Bisimulation for quantum processes.
https://dblp.org/rec/conf/popl/FengM0DR17,Component-based synthesis for complex APIs.
https://dblp.org/rec/conf/popl/FerranteM85,On Linearizing Parallel Code.
https://dblp.org/rec/conf/popl/FerranteO83,A Program Form Based on Data Dependency in Predicate Regions.
https://dblp.org/rec/conf/popl/Field90,On Laziness and Optimality in Lambda Interpreters: Tools for Specification and Analysis.
https://dblp.org/rec/conf/popl/FieldRT95,Parametric Program Slicing.
https://dblp.org/rec/conf/popl/FieldV05,Transactors: a programming model for maintaining globally consistent distributed state in unreliable environments.
https://dblp.org/rec/conf/popl/Filinski10,Monads in action.
https://dblp.org/rec/conf/popl/Filinski92,Linear Continuations.
https://dblp.org/rec/conf/popl/Filinski94,Representing Monads.
https://dblp.org/rec/conf/popl/Filinski99,Representing Layered Monads.
https://dblp.org/rec/conf/popl/Fiore04,Isomorphisms of generic recursive polynomial types.
https://dblp.org/rec/conf/popl/FioritiH15,"Probabilistic Termination: Soundness, Completeness, and Compositionality."
https://dblp.org/rec/conf/popl/FischerF73,Mode Modules as Representations of Domains.
https://dblp.org/rec/conf/popl/FischerMQ77,An Efficient Insertion-Only Error-Corrector for LL(1) Parsers.
https://dblp.org/rec/conf/popl/FisherMW06,The next 700 data description languages.
https://dblp.org/rec/conf/popl/FisherWZW08,From dirt to shovels: fully automatic tool generation from ad hoc data.
https://dblp.org/rec/conf/popl/Flanagan06,Hybrid type checking.
https://dblp.org/rec/conf/popl/FlanaganF04,Atomizer: a dynamic atomicity checker for multithreaded programs.
https://dblp.org/rec/conf/popl/FlanaganF95,The Semantics of Future and Its Use in Program Optimizations.
https://dblp.org/rec/conf/popl/FlanaganG05,Dynamic partial-order reduction for model checking software.
https://dblp.org/rec/conf/popl/FlanaganQ02,Predicate abstraction for software verification.
https://dblp.org/rec/conf/popl/FlanaganS01,Avoiding exponential explosion: generating compact verification conditions.
https://dblp.org/rec/conf/popl/Flatt16,Binding as sets of scopes.
https://dblp.org/rec/conf/popl/FlattKF98,Classes and Mixins.
https://dblp.org/rec/conf/popl/FlurGPSSMDS16,"Modelling the ARMv8 architecture, operationally: concurrency and ISA."
https://dblp.org/rec/conf/popl/FlurSPNMGSBS17,"Mixed-size concurrency: ARM, POWER, C/C++11, and SC."
https://dblp.org/rec/conf/popl/Fong77,Generalized Common Subexpressions in Very High Level Languages.
https://dblp.org/rec/conf/popl/Fong79,Automatic Improvement of Programs in Very High Level Languages.
https://dblp.org/rec/conf/popl/FongKU75,Application of Lattice Algebra to Loop Optimization.
https://dblp.org/rec/conf/popl/FongU76,Induction Variables in Very High Level Languages.
https://dblp.org/rec/conf/popl/Fontana08,"Systems biology, models, and concurrency."
https://dblp.org/rec/conf/popl/Ford04,Parsing expression grammars: a recognition-based syntactic foundation.
https://dblp.org/rec/conf/popl/FordS85,A Greedy Approach to Incremental Code Generation.
https://dblp.org/rec/conf/popl/FosterGMPS05,Combinators for bi-directional tree transformations: a linguistic approach to the view update problem.
https://dblp.org/rec/conf/popl/FosterKM0T15,A Coalgebraic Decision Procedure for NetKAT.
https://dblp.org/rec/conf/popl/FournetG02,Stack inspection: theory and variants.
https://dblp.org/rec/conf/popl/FournetG96,The Reflexive CHAM and the Join-Calculus.
https://dblp.org/rec/conf/popl/FournetR08,Cryptographically sound implementations for typed information-flow security.
https://dblp.org/rec/conf/popl/FournetSCDSL13,Fully abstract compilation to JavaScript.
https://dblp.org/rec/conf/popl/FradetM97,Shape Types.
https://dblp.org/rec/conf/popl/Francez82,Extended Naming Conventions for Communicating Processes.
https://dblp.org/rec/conf/popl/FrancezK84,Generalized Fair Termination.
https://dblp.org/rec/conf/popl/Franck76,PLAN2D - Syntactic Analysis of Precedence Graph Grammars.
https://dblp.org/rec/conf/popl/FrankleOWZ16,Example-directed synthesis: a type-theoretic interpretation.
https://dblp.org/rec/conf/popl/Fraser79,"A Compact, Machine-Independent Peephole Optimizer."
https://dblp.org/rec/conf/popl/FraserH85,High-Level Language Facilities for Low-Level Services.
https://dblp.org/rec/conf/popl/FriedmanH85,Constraining Control.
https://dblp.org/rec/conf/popl/FriedmanW80,An Indeterminate Constructor for Applicative Programming.
https://dblp.org/rec/conf/popl/FutatsugiGJM85,Principles of OBJ2.
https://dblp.org/rec/conf/popl/GabbayPSS80,On the Temporal Analysis of Fairness.
https://dblp.org/rec/conf/popl/GaboardiHHNP13,Linear dependent types for differential privacy.
https://dblp.org/rec/conf/popl/GaboardiMR08,A logical account of pspace.
https://dblp.org/rec/conf/popl/GaifmanS89,Fully Abstract Compositional Semantics for Logic Programs.
https://dblp.org/rec/conf/popl/GanapathiF82,Description-Driven Code Generation using Attribute Grammars.
https://dblp.org/rec/conf/popl/GansnerHKMS82,Semantics and Correctness of a Query Language Translation.
https://dblp.org/rec/conf/popl/GantyMR09,Verifying liveness for asynchronous programs.
https://dblp.org/rec/conf/popl/Ganzinger01,Efficient deductive methods for program analysis.
https://dblp.org/rec/conf/popl/GarciaC15,Principal Type Schemes for Gradual Programs.
https://dblp.org/rec/conf/popl/GarciaCT16,Abstracting gradual typing.
https://dblp.org/rec/conf/popl/GarciaLS09,Lazy evaluation and delimited control.
https://dblp.org/rec/conf/popl/GardnerMS12,Towards a program logic for JavaScript.
https://dblp.org/rec/conf/popl/GarlandG88,Inductive Methods for Reasoning about Abstract Data Types.
https://dblp.org/rec/conf/popl/GarrigueA94,The Typed Polymorphic Label-Selective lambda-Calculus.
https://dblp.org/rec/conf/popl/Gay93,A Sort Inference Algorithm for the Polyadic Pi-Calculus.
https://dblp.org/rec/conf/popl/GayN05,Communicating quantum processes.
https://dblp.org/rec/conf/popl/GayVRGC10,Modular session types for distributed object-oriented programming.
https://dblp.org/rec/conf/popl/GelernterJL87,Environments as First Class Objects.
https://dblp.org/rec/conf/popl/Geller76,Test Data as an Aid in Proving Program Correctness.
https://dblp.org/rec/conf/popl/GellerH73,Strict Deterministic Versus LR(0) Parsing.
https://dblp.org/rec/conf/popl/GeorgeA96,Iterated Register Coalescing.
https://dblp.org/rec/conf/popl/Gerhart75,Correctness-Preserving Program Transformations.
https://dblp.org/rec/conf/popl/German78,Automating Proofs of the Absence of Common Runtime Errors.
https://dblp.org/rec/conf/popl/GermaneM17,A posteriori environment analysis with Pushdown Delta CFA.
https://dblp.org/rec/conf/popl/GershenfeldDCKGDGS10,Reconfigurable asynchronous logic automata: (RALA).
https://dblp.org/rec/conf/popl/GheorghioiuSR03,Interprocedural compatibility analysis for static object preallocation.
https://dblp.org/rec/conf/popl/Ghica05,Slot games: a quantitative model of computation.
https://dblp.org/rec/conf/popl/Ghica07,Geometry of synthesis: a structured approach to VLSI design.
https://dblp.org/rec/conf/popl/GhicaS11,Geometry of synthesis III: resource management through type inference.
https://dblp.org/rec/conf/popl/GhiyaH96,"Is it a Tree, a DAG, or a Cyclic Graph? A Shape Analysis for Heap-Directed Pointers in C."
https://dblp.org/rec/conf/popl/GhiyaH98,Putting Pointer Analysis to Work.
https://dblp.org/rec/conf/popl/GiacobazziLR15,Analyzing Program Analyses.
https://dblp.org/rec/conf/popl/GiacobazziM04,Abstract non-interference: parameterizing non-interference by abstract interpretation.
https://dblp.org/rec/conf/popl/Giegerich82,Automatic Generation of Machine Specific Code Optimizers.
https://dblp.org/rec/conf/popl/Gil01,Subtyping arithmetical types.
https://dblp.org/rec/conf/popl/GilrayL0MH16,Pushdown control-flow analysis for free.
https://dblp.org/rec/conf/popl/GimenezM16,The complexity of interaction.
https://dblp.org/rec/conf/popl/GlanvilleG78,A New Method for Compiler Code Generation.
https://dblp.org/rec/conf/popl/GlewM99,Type-Safe Linking and Modular Assembly Language.
https://dblp.org/rec/conf/popl/Godefroid07,Compositional dynamic test generation.
https://dblp.org/rec/conf/popl/Godefroid97,Model Checking for Programming Languages using Verisoft.
https://dblp.org/rec/conf/popl/GodefroidNRT10,Compositional may-must program analysis: unleashing the power of alternation.
https://dblp.org/rec/conf/popl/Goguen05,A syntactic approach to eta equality in type theory.
https://dblp.org/rec/conf/popl/Gonthier13,Engineering mathematics: the odd order theorem proof.
https://dblp.org/rec/conf/popl/GonthierAL92,The Geometry of Optimal Lambda Reduction.
https://dblp.org/rec/conf/popl/GoodC79,Principles of Proving Programs Correct in Gypsy.
https://dblp.org/rec/conf/popl/Goodenough75,Structured Exception Handling.
https://dblp.org/rec/conf/popl/Goodman13,The principles and practice of probabilistic programming.
https://dblp.org/rec/conf/popl/GopanRS05,A framework for numeric analysis of array operations.
https://dblp.org/rec/conf/popl/GopinathH89,Copy Elimination in Functional Languages.
https://dblp.org/rec/conf/popl/GordonABCGNRR13,A model-learner pattern for bayesian reasoning.
https://dblp.org/rec/conf/popl/GordonGRRBG14,Tabular: a schema-driven probabilistic programming language.
https://dblp.org/rec/conf/popl/GordonHHJS11,"Robin Milner 1934--2010: verification, languages, and concurrency."
https://dblp.org/rec/conf/popl/GordonMMNW78,A Metalanguage for Interactive Proof in LCF.
https://dblp.org/rec/conf/popl/GordonR96,Bisimilarity for a First-Order Calculus of Objects with Subtyping.
https://dblp.org/rec/conf/popl/GordonS01,Typing a multi-language intermediate code.
https://dblp.org/rec/conf/popl/GotsmanCPV09,Proving that non-blocking algorithms don't block.
https://dblp.org/rec/conf/popl/GotsmanYFNS16,'Cause I'm strong enough: reasoning about consistency choices in distributed systems.
https://dblp.org/rec/conf/popl/GovindarajanJM96,Optimization and Relaxation in Constraint Logic Languages.
https://dblp.org/rec/conf/popl/Goyet13,The Lambda Lambda-Bar calculus: a dual calculus for unconstrained strategies.
https://dblp.org/rec/conf/popl/Grabowski84,On Relative Completeness of Programming Logics.
https://dblp.org/rec/conf/popl/GrahamR73,Practical Syntactic Error Recovery.
https://dblp.org/rec/conf/popl/GrahamW75,A Fast and Usually Linear Algorithm for Global Flow Analysis.
https://dblp.org/rec/conf/popl/GrathwohlHRST16,Kleenex: compiling nondeterministic transducers to deterministic streaming transducers.
https://dblp.org/rec/conf/popl/GraverJ90,A Type System for Smalltalk.
https://dblp.org/rec/conf/popl/Greenberg15,Space-Efficient Manifest Contracts.
https://dblp.org/rec/conf/popl/GreenbergPW10,Contracts made manifest.
https://dblp.org/rec/conf/popl/GreifH75,Actor Semantics of Planner-73.
https://dblp.org/rec/conf/popl/GreifM79,Specifying Programming Language Semantics.
https://dblp.org/rec/conf/popl/GreifSW86,Atomic Data Abstractions in a Distributed Collaborative Editing System.
https://dblp.org/rec/conf/popl/GreinerB96,A Provably Time-Efficient Parallel Implementation of Full Speculation.
https://dblp.org/rec/conf/popl/Griffin90,A Formulae-as-Types Notion of Control.
https://dblp.org/rec/conf/popl/GriffithsP76,Verifying Formal Specifications of Synchronous Processes.
https://dblp.org/rec/conf/popl/Grigore17,Java generics are turing complete.
https://dblp.org/rec/conf/popl/GrigoreY16,Abstraction refinement guided by a learnt probabilistic model.
https://dblp.org/rec/conf/popl/GrumbergLST05,Proof-guided underapproximation-widening for multi-process systems.
https://dblp.org/rec/conf/popl/GuerraouiK09,The semantics of progress in lock-based transactional memory.
https://dblp.org/rec/conf/popl/GuibasW78,Compilation and Delayed Evaluation in APL.
https://dblp.org/rec/conf/popl/GuKRSWWZG15,Deep Specifications and Certified Abstraction Layers.
https://dblp.org/rec/conf/popl/GullJ79,"Decisions for ""Type"" in APL."
https://dblp.org/rec/conf/popl/Gulwani11,Automating string processing in spreadsheets using input-output examples.
https://dblp.org/rec/conf/popl/Gulwani15,Automating Repetitive Tasks for the Masses.
https://dblp.org/rec/conf/popl/GulwaniJ07,Program verification as probabilistic inference.
https://dblp.org/rec/conf/popl/GulwaniLS09,A combination framework for tracking partition sizes.
https://dblp.org/rec/conf/popl/GulwaniMC09,SPEED: precise and efficient static estimation of program computational complexity.
https://dblp.org/rec/conf/popl/GulwaniMT08,Lifting abstract interpreters to quantified logical domains.
https://dblp.org/rec/conf/popl/GulwaniN03,Discovering affine equalities using random interpretation.
https://dblp.org/rec/conf/popl/GulwaniN04,Global value numbering using random interpretation.
https://dblp.org/rec/conf/popl/GulwaniN05,Precise interprocedural analysis using random interpretation.
https://dblp.org/rec/conf/popl/Gunter90,Relating Total and Partial Correctness Interpretations of Non-Deterministic Programs.
https://dblp.org/rec/conf/popl/GunterJ00,Generalized Certificate Revocation.
https://dblp.org/rec/conf/popl/GuoP11,The essence of compiling with traces.
https://dblp.org/rec/conf/popl/Gupta92,Generalized Dominators and Post-Dominators.
https://dblp.org/rec/conf/popl/GuptaHMRX08,Proving non-termination.
https://dblp.org/rec/conf/popl/GuptaHRST15,Succinct Representation of Concurrent Trace Sets.
https://dblp.org/rec/conf/popl/GuptaJP99,Stochastic Processes as Concurrent Constraint Programs.
https://dblp.org/rec/conf/popl/GuptaPR11,Predicate abstraction and refinement for verifying multi-threaded programs.
https://dblp.org/rec/conf/popl/GuptaR06,Simplifying reductions.
https://dblp.org/rec/conf/popl/GuptaS96,Static Analysis to Reduce Synchronization Costs in Data-Parallel Programs.
https://dblp.org/rec/conf/popl/GuttagH80,Formal Specification as a Design Tool.
https://dblp.org/rec/conf/popl/HackettR05,Region-based shape analysis with tracked locations.
https://dblp.org/rec/conf/popl/HagueKO16,Unboundedness and downward closures of higher-order pushdown automata.
https://dblp.org/rec/conf/popl/HailpernO82,Modular Verification of Concurrent Programs.
https://dblp.org/rec/conf/popl/Halbwachs97,Automatic Verification of Parameterized Linear Networks of Processes.
https://dblp.org/rec/conf/popl/HallHT75,An Algebra of Relations for Machine Computation.
https://dblp.org/rec/conf/popl/HallW87,Compiling Strictness into Streams.
https://dblp.org/rec/conf/popl/Halpern84,A Good Hoare Axiom System for an Algol-like Language.
https://dblp.org/rec/conf/popl/HalpernM81,"Axiomatic Definitions of Programming Languages, II."
https://dblp.org/rec/conf/popl/HalpernMT84,"The Semantics of Local Storage, or What Makes the Free-List Free?"
https://dblp.org/rec/conf/popl/HalpernWWW85,Denotational Semantics and Rewrite Rules for FP.
https://dblp.org/rec/conf/popl/HankinM94,Deriving Algorithms From Type Inference Systems: Application to Strictness Analysis.
https://dblp.org/rec/conf/popl/HannanH98,Higher-Order unCurrying.
https://dblp.org/rec/conf/popl/Hanus97,A Unified Computation Model for Functional and Logic Programming.
https://dblp.org/rec/conf/popl/Haraldsson78,"A Partial Evaluator, Its Use for Compiling Iterative Statements in Lisp."
https://dblp.org/rec/conf/popl/HardekopfL09,Semi-sparse flow-sensitive pointer analysis.
https://dblp.org/rec/conf/popl/Harel79,Recursion in Logics of Programs.
https://dblp.org/rec/conf/popl/HarelP78,Nondeterminism in Logics of Programs.
https://dblp.org/rec/conf/popl/HarperL93,Explicit Polymorphism and CPS Conversion.
https://dblp.org/rec/conf/popl/HarperL94,A Type-Theoretic Approach to Higher-Order Modules with Sharing.
https://dblp.org/rec/conf/popl/HarperM95,Compiling Polymorphism Using Intensional Type Analysis.
https://dblp.org/rec/conf/popl/HarperMM90,Higher-Order Modules and the Phase Distinction.
https://dblp.org/rec/conf/popl/HarperP91,A Record Calculus Based on Symmetric Concatenation.
https://dblp.org/rec/conf/popl/Harris09,Language constructs for transactional memory.
https://dblp.org/rec/conf/popl/Harrison77,A New Strategy for Code Generation - The General Purpose Optimizing Compiler.
https://dblp.org/rec/conf/popl/Harrison81,Position Paper on Optimizing Compilers.
https://dblp.org/rec/conf/popl/HarrisSIG10,Program analysis via satisfiability modulo path programs.
https://dblp.org/rec/conf/popl/HartSP82,Termination of Probabilistic Concurrent Programs.
https://dblp.org/rec/conf/popl/HasuoSC16,Lattice-theoretic progress measures and coalgebraic model checking.
https://dblp.org/rec/conf/popl/HatcherC86,High-Quality Code Generation Via Bottom-Up Tree Pattern Matching.
https://dblp.org/rec/conf/popl/HatcliffD94,A Generic Account of Continuation-Passing Styles.
https://dblp.org/rec/conf/popl/HawblitzelP09,Automated verification of practical garbage collectors.
https://dblp.org/rec/conf/popl/HechtU73,Analysis of a Simple Algorithm for Global Flow Problems.
https://dblp.org/rec/conf/popl/HeGWZ15,Leveraging Weighted Automata in Compositional Reasoning about Concurrent Probabilistic Systems.
https://dblp.org/rec/conf/popl/Hehner77,Structuring.
https://dblp.org/rec/conf/popl/HeideggerBT12,Access permission contracts for scripting languages.
https://dblp.org/rec/conf/popl/HeintzeJ90,A Finite Presentation Theorem for Approximating Logic Programs.
https://dblp.org/rec/conf/popl/HeintzeJV00,A Framework for Combining Analysis and Verification.
https://dblp.org/rec/conf/popl/HeintzeR98,The SLam Calculus: Programming with Secrecy and Integrity.
https://dblp.org/rec/conf/popl/HeizmannHP10,Nested interpolants.
https://dblp.org/rec/conf/popl/HendersonM76,A Lazy Evaluator.
https://dblp.org/rec/conf/popl/HengleinJ94,Formally Optimal Boxing.
https://dblp.org/rec/conf/popl/HengleinM91,The Complexity of Type Inference for Higher-Order Typed Lambda Calculi.
https://dblp.org/rec/conf/popl/HengleinN11,Regular expression containment: coinductive axiomatization and computational interpretation.
https://dblp.org/rec/conf/popl/Hennessy81,Program Optimization and Exception Handling.
https://dblp.org/rec/conf/popl/HennessyG82,Code Generation and Reorganization in the Presence of Pipeline Constraints.
https://dblp.org/rec/conf/popl/Henson82,"Completion Semantics, Interpreter Generation."
https://dblp.org/rec/conf/popl/Henzinger10,From Boolean to quantitative notions of correctness.
https://dblp.org/rec/conf/popl/HenzingerJMM04,Abstractions from proofs.
https://dblp.org/rec/conf/popl/HenzingerJMS02,Lazy abstraction.
https://dblp.org/rec/conf/popl/HenzingerKPSS13,Quantitative relaxation of concurrent data structures.
https://dblp.org/rec/conf/popl/HenzingerMP91,Temporal Proof Methodologies for Real-time Systems.
https://dblp.org/rec/conf/popl/HerbelinG08,An approach to call-by-name delimited continuations.
https://dblp.org/rec/conf/popl/HerlihyW87,Axioms for Concurrent Objects.
https://dblp.org/rec/conf/popl/HewittA77,Parallelism and Synchronization in Actor Systems.
https://dblp.org/rec/conf/popl/HewittBGSMS73,Actor Induction and Meta-Evaluation.
https://dblp.org/rec/conf/popl/Hickey00,Analytic Constraint Solving and Interval Arithmetic.
https://dblp.org/rec/conf/popl/Hickey89,CLP* and Constraint Abstraction.
https://dblp.org/rec/conf/popl/Hinze00,A New Approach to Generic Functional Programming.
https://dblp.org/rec/conf/popl/HinzeWG15,Conjugate Hylomorphisms - Or: The Mother of All Structured Recursion Schemes.
https://dblp.org/rec/conf/popl/HoangM95,Lower Bounds on Type Inference with Subtypes.
https://dblp.org/rec/conf/popl/Hoare12,Message of thanks: on the receipt of the 2011 ACM SIGPLAN distinguished achievement award.
https://dblp.org/rec/conf/popl/HoborDA10,A theory of indirection via approximation.
https://dblp.org/rec/conf/popl/HoborV13,The ramifications of sharing in data structures.
https://dblp.org/rec/conf/popl/HoderKV12,Playing in the grey area of proofs.
https://dblp.org/rec/conf/popl/HoenickeMP17,Thread modularity at many levels: a pearl in compositional verification.
https://dblp.org/rec/conf/popl/HoffmannAH11,Multivariate amortized resource analysis.
https://dblp.org/rec/conf/popl/HoffmannDW17,Towards automatic resource bound analysis for OCaml.
https://dblp.org/rec/conf/popl/HoffmannO84,Implementation of an Interpreter for Abstract Equations.
https://dblp.org/rec/conf/popl/HoffmanO79,Interpreter Generation Using Tree Pattern Matching.
https://dblp.org/rec/conf/popl/Hofmann02,The strength of non-size increasing computation.
https://dblp.org/rec/conf/popl/HofmannJ03,Static prediction of heap space usage for first-order functional programs.
https://dblp.org/rec/conf/popl/HofmannP95,Positive Subtyping.
https://dblp.org/rec/conf/popl/HofmannPW11,Symmetric lenses.
https://dblp.org/rec/conf/popl/HofmannPW12,Edit lenses.
https://dblp.org/rec/conf/popl/HolleyR80,Qualified Data Flow Problems.
https://dblp.org/rec/conf/popl/Honda96,Composing Processes.
https://dblp.org/rec/conf/popl/HondaY02,A uniform type structure for secure information flow.
https://dblp.org/rec/conf/popl/HondaY94,Combinatory Representation of Mobile Processes.
https://dblp.org/rec/conf/popl/HondaYC08,Multiparty asynchronous session types.
https://dblp.org/rec/conf/popl/Hoover86,Dynamically Bypassing Copy Rule Chains in Attribute Grammars.
https://dblp.org/rec/conf/popl/HooverZ96,Generating Machine Specific Optimizing Compilers.
https://dblp.org/rec/conf/popl/HorwitzPR88,Integrating Non-Interfering Versions of Programs.
https://dblp.org/rec/conf/popl/HorwitzPR88a,On the Adequacy of Program Dependence Graphs for Representing Programs.
https://dblp.org/rec/conf/popl/HosoyaFC05,Parametric polymorphism for XML.
https://dblp.org/rec/conf/popl/HosoyaP01,Regular expression pattern matching for XML.
https://dblp.org/rec/conf/popl/HouCGT14,Proof search for propositional abstract separation logics via labelled sequents.
https://dblp.org/rec/conf/popl/HudakB85,The Aggregate Update Problem in Functional Programming Systems.
https://dblp.org/rec/conf/popl/HudakK84,A Combinator-Based Compiler for a Functional Language.
https://dblp.org/rec/conf/popl/HudakS86,Para-Functional Programming: A Paradigm for Programming Multiprocessor Systems.
https://dblp.org/rec/conf/popl/HudakY86,Higher-Order Strictness Analysis in Untyped Lambda Calculus.
https://dblp.org/rec/conf/popl/HudakY88,A Collecting Interpretation of Expressions (Without Powerdomains).
https://dblp.org/rec/conf/popl/HuetH14,30 years of research and development around Coq.
https://dblp.org/rec/conf/popl/HughesPS96,Proving the Correctness of Reactive Systems Using Sized Types.
https://dblp.org/rec/conf/popl/HuizingGR87,Full Abstraction of a Real-Time Denotational Semantics for an Occam-like Language.
https://dblp.org/rec/conf/popl/Hunt76,A Complexity Theory of Grammar Problems.
https://dblp.org/rec/conf/popl/HuntR80,Efficient Algorithms for Structural Similarity of Grammars.
https://dblp.org/rec/conf/popl/HuntS06,On flow-sensitive security types.
https://dblp.org/rec/conf/popl/HuntSU75,On the Complexity of LR(k) Testing.
https://dblp.org/rec/conf/popl/HurD11,A kripke logical relation between ML and assembly.
https://dblp.org/rec/conf/popl/HurDNV12,The marriage of bisimulations and Kripke logical relations.
https://dblp.org/rec/conf/popl/HurNDV13,The power of parameterization in coinductive proof.
https://dblp.org/rec/conf/popl/HuTC98,Parallelization in Calculational Forms.
https://dblp.org/rec/conf/popl/Hutchins10,Pure subtype systems.
https://dblp.org/rec/conf/popl/IgarashiK01,A generic type system for the Pi-calculus.
https://dblp.org/rec/conf/popl/IgarashiK02,Resource usage analysis.
https://dblp.org/rec/conf/popl/Ilik17,The exp-log normal form of types: decomposing extensional equality and representing terms compactly.
https://dblp.org/rec/conf/popl/Ingalls78,The Smalltalk-76 Programming System.
https://dblp.org/rec/conf/popl/IrigoinT88,Supernode Partitioning.
https://dblp.org/rec/conf/popl/IshtiaqO01,BI as an Assertion Language for Mutable Data Structures.
https://dblp.org/rec/conf/popl/ItzhakyBILNS14,Modular reasoning about heap paths via effectively propositional formulas.
https://dblp.org/rec/conf/popl/JacksonJD96,Faster Checking of Software Specifications by Eliminating Isomorphs.
https://dblp.org/rec/conf/popl/JacobsP11,Expressive modular fine-grained concurrency specification.
https://dblp.org/rec/conf/popl/JaferyD17,Sums of uncertainty: refinements go gradual.
https://dblp.org/rec/conf/popl/JaffarL87,Constraint Logic Programming.
https://dblp.org/rec/conf/popl/JagadeesanP92,Abstract Semantics for a Higher-Order Functional Language with Logic Variables.
https://dblp.org/rec/conf/popl/JagannathanTWW98,Single and Loving It: Must-Alias Analysis for Higher-Order Languages.
https://dblp.org/rec/conf/popl/JagannathanW95,A Unified Treatment of Flow Analysis in Higher-Order Languages.
https://dblp.org/rec/conf/popl/JaliliG82,Building Friendly Parsers.
https://dblp.org/rec/conf/popl/JamesS12,Information effects.
https://dblp.org/rec/conf/popl/JanssonJ97,Polyp - A Polytypic Programming Language.
https://dblp.org/rec/conf/popl/JazayeriOR75,On the Complexity of the Circularity Test for Attribute Grammars.
https://dblp.org/rec/conf/popl/JeannetSS14,Abstract acceleration of general linear loops.
https://dblp.org/rec/conf/popl/JeffersonK86,Executable Specifications with Quantifiers in the FASE System.
https://dblp.org/rec/conf/popl/Jensen98,Inference of Polymorphic and Conditional Strictness Properties.
https://dblp.org/rec/conf/popl/JensenBK13,High-level separation logic for low-level code.
https://dblp.org/rec/conf/popl/JensenM03,Bigraphs and transitions.
https://dblp.org/rec/conf/popl/JhalaM07,Interprocedural analysis of asynchronous programs.
https://dblp.org/rec/conf/popl/JiaGP16,Monitors and blame assignment for higher-order session types.
https://dblp.org/rec/conf/popl/JiaZSW10,Dependent types and program equivalence.
https://dblp.org/rec/conf/popl/Jim96,What Are Principal Typings and What Are They Good For?
https://dblp.org/rec/conf/popl/JimMW10,Semantics and algorithms for data-dependent grammars.
https://dblp.org/rec/conf/popl/JohannG08,Foundations for structured programming with GADTs.
https://dblp.org/rec/conf/popl/JohannV04,Free theorems in the presence of seq.
https://dblp.org/rec/conf/popl/Johnson78,A Portable Compiler: Theory and Practice.
https://dblp.org/rec/conf/popl/Johnson81,Position Paper on Optimizing Compilers.
https://dblp.org/rec/conf/popl/Johnson83,Code Generation for Silicon.
https://dblp.org/rec/conf/popl/Johnson84,Applicative Programming and Digital Design.
https://dblp.org/rec/conf/popl/JohnsonD88,Stores and Partial Continuations as First-Class Objects in a Language and its Environment.
https://dblp.org/rec/conf/popl/JohnsonF82,Non-Syntactic Attribute Flow in Language Based Editors.
https://dblp.org/rec/conf/popl/JohnsonF85,A Meta-Language and System for Nonlocal Incremental Attribute Evaluation in Language-Based Editors.
https://dblp.org/rec/conf/popl/JohnsonW86,A Maximum-Flow Approach to Anomaly Isolation in Unification-Based Incremental Type Inference.
https://dblp.org/rec/conf/popl/JoishaSBBC11,A technique for the effective and automatic reuse of classical compiler optimizations on multithreaded code.
https://dblp.org/rec/conf/popl/Jones96,Using Parameterized Signatures to Express Modular Structure.
https://dblp.org/rec/conf/popl/Jones97,First-class Polymorphism with Type Inference.
https://dblp.org/rec/conf/popl/JonesGF96,Concurrent Haskell.
https://dblp.org/rec/conf/popl/JonesM75,Even Simple Programs are Hard to Analyze.
https://dblp.org/rec/conf/popl/JonesM76,Binding Time Optimization in Programming Languages: Some Thoughts Toward the Design of an Ideal Language.
https://dblp.org/rec/conf/popl/JonesM79,Flow Analysis and Optimization of Lisp-Like Structures.
https://dblp.org/rec/conf/popl/JonesM82,A Flexible Approach to Interprocedural Data Flow Analysis and Programs with Recursive Data Structures.
https://dblp.org/rec/conf/popl/JonesM86,Data Flow Analysis of Applicative Programs Using Minimal Function Graphs.
https://dblp.org/rec/conf/popl/JonesRT85,Matchmaker: An Interface Specification Language for Distributed Processing.
https://dblp.org/rec/conf/popl/JonesS86,Hierarchical VLSI Design Systems Based on Attribute Grammars.
https://dblp.org/rec/conf/popl/JonesSLT98,Bridging the Gulf: A Common Intermediate Language for ML and Haskell.
https://dblp.org/rec/conf/popl/JonesW93,Imperative Functional Programming.
https://dblp.org/rec/conf/popl/Jonsson89,A Fully Abstract Trace Model for Dataflow Networks.
https://dblp.org/rec/conf/popl/JonssonN09,Positive supercompilation for a higher order call-by-value language.
https://dblp.org/rec/conf/popl/Jorgensen92,Generating a Compiler for a Lazy Language by Partial Evaluation.
https://dblp.org/rec/conf/popl/JorringS86,Compilers and Staging Transformations.
https://dblp.org/rec/conf/popl/JoshiLL12,Underspecified harnesses and interleaved bugs.
https://dblp.org/rec/conf/popl/JoshiLY78,Local Constraints in the Syntax and Semantics of Programming Languages.
https://dblp.org/rec/conf/popl/JostHLH10,Static determination of quantitative resource usage for higher-order programs.
https://dblp.org/rec/conf/popl/JouannaudK84,Completion of a Set of Rules Modulo a Set of Equations.
https://dblp.org/rec/conf/popl/JoungS91,Coordinating First-Order Multiparty Interactions.
https://dblp.org/rec/conf/popl/JoungS92,A Comprehensive Study of the Complexity of Multiparty Interaction.
https://dblp.org/rec/conf/popl/JourdanLBLP15,A Formally-Verified C Static Analyzer.
https://dblp.org/rec/conf/popl/Jouvelot87,Semantic Parallelization: A Practical Exercise in Abstract Interpretation.
https://dblp.org/rec/conf/popl/JouvelotG91,Algebraic Reconstruction of Types and Effects.
https://dblp.org/rec/conf/popl/JumpM07,Cork: dynamic memory leak detection for garbage-collected languages.
https://dblp.org/rec/conf/popl/JungSSSTBD15,Iris: Monoids and Invariants as an Orthogonal Basis for Concurrent Reasoning.
https://dblp.org/rec/conf/popl/KahlonG07,On the analysis of interacting pushdown systems.
https://dblp.org/rec/conf/popl/Kamin80,Final Data Tye Specifications: A New Data Type Specification Method.
https://dblp.org/rec/conf/popl/Kamin88,Inheritance in Smalltalk-80: A Denotational Definition.
https://dblp.org/rec/conf/popl/KammarP12,Algebraic foundations for effect-dependent optimisations.
https://dblp.org/rec/conf/popl/Kandemir01,A compiler technique for improving whole-program locality.
https://dblp.org/rec/conf/popl/KanellakisM89,Polymorphic Unification and ML Typing.
https://dblp.org/rec/conf/popl/KangHLVD17,A promising semantics for relaxed-memory concurrency.
https://dblp.org/rec/conf/popl/KangKHDV16,Lightweight verification of separate compilation.
https://dblp.org/rec/conf/popl/KaplanU78,A General Scheme for the Automatic Inference of Variable Types.
https://dblp.org/rec/conf/popl/KapurM80,Expressiveness of the Operation Set of a Data Abstraction.
https://dblp.org/rec/conf/popl/KatayamaH81,Verification of Attribute Grammars.
https://dblp.org/rec/conf/popl/KatayamaS86,Global Storage Allocation in Attribute Evaluation.
https://dblp.org/rec/conf/popl/KatiyarLM94,A Type System for Prototyping Languages.
https://dblp.org/rec/conf/popl/Katsumata14,Parametric effect monads and semantics of effect systems.
https://dblp.org/rec/conf/popl/KatzEY16,Estimating types in binaries using predictive modeling.
https://dblp.org/rec/conf/popl/KelseyH89,Realistic Compilation by Program Transformation.
https://dblp.org/rec/conf/popl/Kennedy75,Node Listings Applied to Data Flow Analysis.
https://dblp.org/rec/conf/popl/Kennedy97,Relational Parametricity and Units of Measure.
https://dblp.org/rec/conf/popl/KennedyW76,Automatic Generation of Efficient Evaluators for Attribute Grammars.
https://dblp.org/rec/conf/popl/KennedyZ77,Applications of Graph Grammar for Program Control Flow Analysis.
https://dblp.org/rec/conf/popl/Kfoury80,Analysis of Simple Programs Over Different Sets of Primitives.
https://dblp.org/rec/conf/popl/KfouryTU88,A Proper Extension of ML with an Effective Type-Assignment.
https://dblp.org/rec/conf/popl/KfouryW99,Principality and Decidable Type Inference for Finite-Rank Intersection Types.
https://dblp.org/rec/conf/popl/Kieburtz83,Precise Typing of Abstract Data Type Specifications.
https://dblp.org/rec/conf/popl/Kildall73,A Unified Approach to Global Program Optimization.
https://dblp.org/rec/conf/popl/KilpatrickDJM14,Backpack: retrofitting Haskell with interfaces.
https://dblp.org/rec/conf/popl/KimYC06,A polymorphic modal type system for lisp-like multi-staged languages.
https://dblp.org/rec/conf/popl/KingL95,Structuring Depth-First Search Algorithms in Haskell.
https://dblp.org/rec/conf/popl/KiselyovBPS17,"Stream fusion, to completeness."
https://dblp.org/rec/conf/popl/KlarlundS93,Graph Types.
https://dblp.org/rec/conf/popl/KleinCDEFFMRTF12,Run your research: on the effectiveness of lightweight mechanization.
https://dblp.org/rec/conf/popl/KleinmanMPS91,Communication with Directed Logic Variables.
https://dblp.org/rec/conf/popl/Klint80,An Overview of the Summer Programming Language.
https://dblp.org/rec/conf/popl/KnobeS98,Array SSA Form and Its Use in Parallelization.
https://dblp.org/rec/conf/popl/KnoblockR00,Type Elaboration and Subtype Completion for Java Bytecode.
https://dblp.org/rec/conf/popl/Kobayashi09,Types and higher-order recursion schemes for verification of higher-order programs.
https://dblp.org/rec/conf/popl/Kobayashi99,Quasi-Linear Types.
https://dblp.org/rec/conf/popl/KobayashiLB17,On the relationship between higher-order recursion schemes and higher-order fixpoint logic.
https://dblp.org/rec/conf/popl/KobayashiPT96,Linearity and the Pi-Calculus.
https://dblp.org/rec/conf/popl/KobayashiTU10,Higher-order multi-parameter tree transducers and recursion schemes for program verification.
https://dblp.org/rec/conf/popl/KohlbeckerW87,Macro-by-Example: Deriving Syntactic Transformations from their Specifications.
https://dblp.org/rec/conf/popl/KoksalKS12,Constraints as control.
https://dblp.org/rec/conf/popl/KoksalPSBFP13,Synthesis of biological models from mutation experiments.
https://dblp.org/rec/conf/popl/KomondoorH00,Semantics-Preserving Procedure Extraction.
https://dblp.org/rec/conf/popl/Komorowski82,Partial Evaluation as a Means for Inferencing Data Structures in an Applicative Language: A Theory and Implementation in the Case of Prolog.
https://dblp.org/rec/conf/popl/KonnovLVW17,A short counterexample property for safety and liveness verification of fault-tolerant distributed algorithms.
https://dblp.org/rec/conf/popl/KopczynskiT17,LOIS: syntax and semantics.
https://dblp.org/rec/conf/popl/Kosinki78,A Straightforward Denotational Semantics for Non-Determinant Data Flow Programs.
https://dblp.org/rec/conf/popl/Kosinski76,Mathematical Semantics and Data Flow Programming.
https://dblp.org/rec/conf/popl/KoskinenPH10,Coarse-grained transactions.
https://dblp.org/rec/conf/popl/KoskinenY16,Reducing crash recoverability to reachability.
https://dblp.org/rec/conf/popl/KoutavasW06,Small bisimulations for reasoning about higher-order imperative programs.
https://dblp.org/rec/conf/popl/KovacsRV17,Coming to terms with quantified reasoning.
https://dblp.org/rec/conf/popl/KozenPS93,Efficient Recursive Subtyping.
https://dblp.org/rec/conf/popl/Krebbers14,An operational and axiomatic semantics for non-determinism and sequence points in C.
https://dblp.org/rec/conf/popl/KrebbersTB17,Interactive proofs in higher-order concurrent separation logic.
https://dblp.org/rec/conf/popl/Krishnamurthi13,From principles to programming languages (and back).
https://dblp.org/rec/conf/popl/Krishnaswami09,Focusing on pattern matching.
https://dblp.org/rec/conf/popl/KrishnaswamiBH12,Higher-order functional reactive programming in bounded space.
https://dblp.org/rec/conf/popl/KrishnaswamiPB15,Integrating Linear and Dependent Types.
https://dblp.org/rec/conf/popl/KristensenMMN83,Abstraction Mechanisms in the Beta Programming Language.
https://dblp.org/rec/conf/popl/Krogh-Jespersen17,A relational model of types-and-effects in higher-order concurrent separation logic.
https://dblp.org/rec/conf/popl/KuckKPLW81,Dependence Graphs and Compiler Optimizations.
https://dblp.org/rec/conf/popl/KumarBH17,Parallel functional arrays.
https://dblp.org/rec/conf/popl/KumarMNO14,CakeML: a verified implementation of ML.
https://dblp.org/rec/conf/popl/KuncakLR02,Role analysis.
https://dblp.org/rec/conf/popl/KuoM87,On Strictness and its Analysis.
https://dblp.org/rec/conf/popl/KuperTKN14,Freeze after writing: quasi-deterministic parallel programming with LVars.
https://dblp.org/rec/conf/popl/Kurki-Suonio86,Towards Programming with Knowledge Expressions.
https://dblp.org/rec/conf/popl/KurlanderF96,Minimum Cost Interprocedural Register Allocation.
https://dblp.org/rec/conf/popl/LaceyJWF02,Proving correctness of compiler optimizations by temporal logic.
https://dblp.org/rec/conf/popl/Lafont90,Interaction Nets.
https://dblp.org/rec/conf/popl/LagoFVY17,"The geometry of parallelism: classical, probabilistic, and quantum effects."
https://dblp.org/rec/conf/popl/LagoP13,The geometry of types.
https://dblp.org/rec/conf/popl/LagoSA14,On coinductive equivalences for higher-order probabilistic functional programs.
https://dblp.org/rec/conf/popl/LahavGV16,Taming release-acquire consistency.
https://dblp.org/rec/conf/popl/LahiriQ06,Verifying properties of well-founded linked lists.
https://dblp.org/rec/conf/popl/LahiriQ08,Back to the future: revisiting precise program verification using SMT solvers.
https://dblp.org/rec/conf/popl/Lakhotia93,Constructing Call Multigraphs Using Dependence Graphs.
https://dblp.org/rec/conf/popl/LaLonde76,On Directly Constructing LR(k) Parsers Without Chain Reductions.
https://dblp.org/rec/conf/popl/Lam88,Compiler Optimizations for Asynchronous Systolic Array Programs.
https://dblp.org/rec/conf/popl/Lambert73,Large Scale File Processing - Pogol.
https://dblp.org/rec/conf/popl/Lammel07,Scrap your boilerplate with XPath-like combinators.
https://dblp.org/rec/conf/popl/Lamping90,An Algorithm for Optimal Lambda Calculus Reduction.
https://dblp.org/rec/conf/popl/Lamport80,"""Sometime"" is Sometimes ""Not Never"" - On the Temporal Logic of Programs."
https://dblp.org/rec/conf/popl/Lamport83,Reasoning About Nonatomic Operations.
https://dblp.org/rec/conf/popl/Lamport85,What It Means for a Concurrent Program to Satisfy a Specification: Why No One Has Specified Priority.
https://dblp.org/rec/conf/popl/LamportS85,Constraints: A Uniform Approach to Aliasing and Typing.
https://dblp.org/rec/conf/popl/LampropoulosGHH17,Beginner's luck: a language for property-based generators.
https://dblp.org/rec/conf/popl/LampsonS83,Practical Use of a Polymorphic Applicative Language.
https://dblp.org/rec/conf/popl/LandiR91,Pointer-Induced Aliasing: A Problem Classification.
https://dblp.org/rec/conf/popl/Lang77,"Threshold Evaluation and the Semantics of Call by Value, Assignment and Generic Procedures."
https://dblp.org/rec/conf/popl/LangeNTY17,Fencing off go: liveness and safety for channel-based programming.
https://dblp.org/rec/conf/popl/LangeTY15,From Communicating Machines to Graphical Choreographies.
https://dblp.org/rec/conf/popl/LangQP92,Garbage Collecting the World.
https://dblp.org/rec/conf/popl/LarsenS89,Bisimulation Through Probabilistic Testing.
https://dblp.org/rec/conf/popl/Laud08,On the computational soundness of cryptographically masked flows.
https://dblp.org/rec/conf/popl/LauerC75,A Description of Path Expressions by Petri Nets.
https://dblp.org/rec/conf/popl/Launchbury93,A Natural Semantics for Lazy Evaluation.
https://dblp.org/rec/conf/popl/Lavaee16,The hardness of data packing.
https://dblp.org/rec/conf/popl/LawallD93,Separating Stages in the Continuation-Passing Style Transformation.
https://dblp.org/rec/conf/popl/Lee15,"Coding by Everyone, Every Day."
https://dblp.org/rec/conf/popl/LeeCH07,Towards a mechanized metatheory of standard ML.
https://dblp.org/rec/conf/popl/LeeF93,Quasi-Static Scoping: Sharing Variable Bindings Across Multiple Lexical Scopes.
https://dblp.org/rec/conf/popl/LeeGR79,The Evolution of List-Copying Algorithms.
https://dblp.org/rec/conf/popl/LeeJB01,The size-change principle for program termination.
https://dblp.org/rec/conf/popl/LeeP14,A proof system for separation logic with magic wand.
https://dblp.org/rec/conf/popl/LeeP87,A Realistic Compiler Generator Based on High-Level Semantics.
https://dblp.org/rec/conf/popl/LehmannR81,On the Advantages of Free Choice: A Symmetric and Fully Distributed Solution to the Dining Philosophers Problem.
https://dblp.org/rec/conf/popl/LehmannT17,Gradual refinement types.
https://dblp.org/rec/conf/popl/Leijen09,Flexible types: robust type inference for first-class polymorphism.
https://dblp.org/rec/conf/popl/Leijen17,Type directed compilation of row-typed algebraic effects.
https://dblp.org/rec/conf/popl/Leivant83,Polymorphic Type Inference.
https://dblp.org/rec/conf/popl/Leivant83a,Structural Semantics for Polymorphic Data Types.
https://dblp.org/rec/conf/popl/Leivant85,Logical and Mathematical Reasoning about Imperative Programs.
https://dblp.org/rec/conf/popl/Leivant93,Stratified Functional Programs and Computational Complexity.
https://dblp.org/rec/conf/popl/LeivantF87,Skinny and Fleshy Failures of Relative Completeness.
https://dblp.org/rec/conf/popl/LengauerH86,A Mechanically Certified Theorem about Optimal Concurrency of Sorting Networks.
https://dblp.org/rec/conf/popl/LeongW76,The Influence of Productions on Derivations and Parsing.
https://dblp.org/rec/conf/popl/LernerGC02,Composing dataflow analyses and transformations.
https://dblp.org/rec/conf/popl/LernerMRC05,Automated soundness proofs for dataflow analyses and transformations via local rules.
https://dblp.org/rec/conf/popl/Leroux11,Vector addition system reachability problem: a short self-contained proof.
https://dblp.org/rec/conf/popl/Leroy06,Formal certification of a compiler back-end or: programming a compiler with a proof assistant.
https://dblp.org/rec/conf/popl/Leroy11,Verified squared: does critical software deserve verified tools?
https://dblp.org/rec/conf/popl/Leroy92,Unboxed Objects and Polymorphic Typing.
https://dblp.org/rec/conf/popl/Leroy93,Polymorphism by Name for References and Continuations.
https://dblp.org/rec/conf/popl/Leroy94,"Manifest Types, Modules, and Separate Compilation."
https://dblp.org/rec/conf/popl/Leroy95,Applicative Functors and Fully Transparent Higher-Order Modules.
https://dblp.org/rec/conf/popl/LeroyR98,Security Properties of Typed Applets.
https://dblp.org/rec/conf/popl/LeroyW91,Polymorphic Type Inference and Assignment.
https://dblp.org/rec/conf/popl/LesaniBC16,Chapar: certified causally consistent distributed key-value stores.
https://dblp.org/rec/conf/popl/Lescanne83,Computer Experiments with the Reve Term Rewriting System Generator.
https://dblp.org/rec/conf/popl/Lescanne94,From Lambda-sigma to Lambda-upsilon a Journey Through Calculi of Explicit Substitutions.
https://dblp.org/rec/conf/popl/Lester75,Program Schemas with Concurrency: Execution Time and Hangups.
https://dblp.org/rec/conf/popl/LeviS00,Controlling Interference in Ambients.
https://dblp.org/rec/conf/popl/Levy17,Contextual isomorphisms.
https://dblp.org/rec/conf/popl/Lewis77,The Equivalence Problem for Program Schemata with Nonintersecting Loops.
https://dblp.org/rec/conf/popl/LewisLMS00,Implicit Parameters: Dynamic Scoping with Static Types.
https://dblp.org/rec/conf/popl/LewisR73,Recursively Defined Data Types.
https://dblp.org/rec/conf/popl/Ley-WildAF09,A cost semantics for self-adjusting computation.
https://dblp.org/rec/conf/popl/Ley-WildN13,Subjective auxiliary state for coarse-grained concurrency.
https://dblp.org/rec/conf/popl/LhotakC11,Points-to analysis with efficient strong updates.
https://dblp.org/rec/conf/popl/LiAKGC14,Symbolic optimization with SMT solvers.
https://dblp.org/rec/conf/popl/LiangF16,A program logic for concurrent objects under fair scheduling.
https://dblp.org/rec/conf/popl/LiangFF12,A rely-guarantee-based simulation for verifying concurrent program transformations.
https://dblp.org/rec/conf/popl/LiangHJ95,Monad Transformers and Modular Interpreters.
https://dblp.org/rec/conf/popl/LiangTN11,Learning minimal abstractions.
https://dblp.org/rec/conf/popl/LiBCR17,Semantic-directed clumping of disjunctive abstract states.
https://dblp.org/rec/conf/popl/LiblitA00,Type Systems for Distributed Data Structures.
https://dblp.org/rec/conf/popl/LicataH12,Canonicity for 2-dimensional type theory.
https://dblp.org/rec/conf/popl/LichtensteinP85,Checking That Finite State Concurrent Programs Satisfy Their Linear Specification.
https://dblp.org/rec/conf/popl/LidburyD17,Dynamic race detection for C++11.
https://dblp.org/rec/conf/popl/Ligler75,A Mathematical Approach to Language Design.
https://dblp.org/rec/conf/popl/LimL97,Maximizing Parallelism and Minimizing Synchronization with Affine Transforms.
https://dblp.org/rec/conf/popl/LinB16,String solving with word equations and transducers: towards a logic for analysing mutation XSS.
https://dblp.org/rec/conf/popl/LincolnM92,Algorithmic Aspects of Type Inference with Subtypes.
https://dblp.org/rec/conf/popl/LindleyMM17,Do be do be do.
https://dblp.org/rec/conf/popl/Lindstrom85,Functional Programming and the Logical Variable.
https://dblp.org/rec/conf/popl/Lipton75,Reduction: A New Method of Proving Properties of Systems of Processes.
https://dblp.org/rec/conf/popl/LiptonSV82,Programming Aspects of VLSI.
https://dblp.org/rec/conf/popl/LiskovHG86,Limitations of Synchronous Communication with Static Process Structure in Languages for Distributed Computing.
https://dblp.org/rec/conf/popl/LiskovS82,"Guardians and Actions: Linguistic Support for Robust, Distributed Programs."
https://dblp.org/rec/conf/popl/LiuF79,String Pattern Matching in Polynomial Time.
https://dblp.org/rec/conf/popl/LiuKM06,Interruptible iterators.
https://dblp.org/rec/conf/popl/LiuST96,Discovering Auxiliary Information for Incremental Computation.
https://dblp.org/rec/conf/popl/LiuYZ17,Analyzing divergence in bisimulation semantics.
https://dblp.org/rec/conf/popl/LivshitsC13,Towards fully automatic placement of security sanitizers and declassifiers.
https://dblp.org/rec/conf/popl/LiZ05,Downgrading policies and relaxed noninterference.
https://dblp.org/rec/conf/popl/LongR16,Automatic patch generation by learning correct code.
https://dblp.org/rec/conf/popl/LongSKR14,Sound input filter generation for integer overflow errors.
https://dblp.org/rec/conf/popl/LorenzenE16,Sound type-dependent syntactic language extension.
https://dblp.org/rec/conf/popl/LoschP13,Full abstraction for nominal Scott domains.
https://dblp.org/rec/conf/popl/LourencoC15,Dependent Information Flow Types.
https://dblp.org/rec/conf/popl/Loveman76,Program Improvement by Source to Source Transformation.
https://dblp.org/rec/conf/popl/Lowney81,Carrier Arrays: An Idiom-Preserving Extension to APL.
https://dblp.org/rec/conf/popl/LowR76,Techniques for the Automatic Selection of Data Structures.
https://dblp.org/rec/conf/popl/LublinermanST09,Modular code generation from synchronous block diagrams: modularity vs. code size.
https://dblp.org/rec/conf/popl/LucassenG88,Polymorphic Effect Systems.
https://dblp.org/rec/conf/popl/LuccoS91,Parallel Programming With Coordination Structures.
https://dblp.org/rec/conf/popl/LuP06,Protecting representation with effect encapsulation.
https://dblp.org/rec/conf/popl/Ma92,Parametricity as Subtyping.
https://dblp.org/rec/conf/popl/Mackie95,The Geometry of Interaction Machine.
https://dblp.org/rec/conf/popl/MacLaurin11,The design of kodu: a tiny visual programming language for children on the Xbox 360.
https://dblp.org/rec/conf/popl/MacQueen86,Using Dependent Types to Express Modular Structure.
https://dblp.org/rec/conf/popl/MacQueenPS84,An Ideal Model for Recursive Polymorphic Types.
https://dblp.org/rec/conf/popl/MadhavanKK17,Contract-based resource verification for higher-order functions with memoization.
https://dblp.org/rec/conf/popl/MadhusudanP11,The tree width of auxiliary storage.
https://dblp.org/rec/conf/popl/MadhusudanPQ11,Decidable logics combining heap structures and data.
https://dblp.org/rec/conf/popl/MadhusudanQS12,Recursive proofs for inductive tree data-structures.
https://dblp.org/rec/conf/popl/Maggiolo-SchettiniRS73,Procedure Linkage Optimization.
https://dblp.org/rec/conf/popl/MagillTLT10,Automatic numeric abstractions for heap-manipulating programs.
https://dblp.org/rec/conf/popl/Mairson90,Deciding ML Typability is Complete for Deterministic Exponential Time.
https://dblp.org/rec/conf/popl/Mairson93,A Constructive Logic of Multiple Subtyping.
https://dblp.org/rec/conf/popl/Malacaria07,Assessing security threats of looping constructs.
https://dblp.org/rec/conf/popl/MalechaMSW10,Toward a verified relational database management system.
https://dblp.org/rec/conf/popl/MandelbaumFWFG07,PADS/ML: a functional data description language.
https://dblp.org/rec/conf/popl/MannaP80,Synchronous Schemes and Their Decision Problems.
https://dblp.org/rec/conf/popl/MannaP83,How to Cook a Temporal Proof System for Your Pet Language.
https://dblp.org/rec/conf/popl/MannaP87,Specification and Verification of Concurrent Programs By Forall-Automata.
https://dblp.org/rec/conf/popl/Manohar02,Scalable formal design methods for asynchronous VLSI.
https://dblp.org/rec/conf/popl/MansonPA05,The Java memory model.
https://dblp.org/rec/conf/popl/Maranget91,Optimal Derivations in Weak Lambda-calculi and in Orthogonal Terms Rewriting Systems.
https://dblp.org/rec/conf/popl/MarloweR90,An Efficient Hybrid Algorithm for Incremental Data Flow Analysis.
https://dblp.org/rec/conf/popl/MarriottBH94,Analyzing Logic Programs with Dynamic Scheduling.
https://dblp.org/rec/conf/popl/MarriottS93,"The 3 R's of Optimizing Constraint Logic Programs: Refinement, Removal and Reordering."
https://dblp.org/rec/conf/popl/MartinHCAC10,Dynamically checking ownership policies in concurrent c/c++ programs.
https://dblp.org/rec/conf/popl/Maslov94,Lazy Array Data-Flow Dependence Analysis.
https://dblp.org/rec/conf/popl/MatthewsF07,Operational semantics for multi-language programs.
https://dblp.org/rec/conf/popl/MaydanAL93,Array Data-Flow Analysis and its Use in Array Privatization.
https://dblp.org/rec/conf/popl/MayrC13,Advanced automata minimization.
https://dblp.org/rec/conf/popl/McBride08,"Clowns to the left of me, jokers to the right (pearl): dissecting data structures."
https://dblp.org/rec/conf/popl/McCloskeyZGB06,Autolocker: synchronization inference for atomic sections.
https://dblp.org/rec/conf/popl/McKinley16,Programming the world of uncertain things (keynote).
https://dblp.org/rec/conf/popl/McKinna06,Why dependent types matter.
https://dblp.org/rec/conf/popl/McMillan08,Relevance heuristics for program analysis.
https://dblp.org/rec/conf/popl/Meertens83,Incremental Polymorphic Type Checking in B.
https://dblp.org/rec/conf/popl/MelliesZ15,Functors are Type Refinement Systems.
https://dblp.org/rec/conf/popl/MenonGMMSAP06,A verifiable SSA program representation for aggressive compiler optimization.
https://dblp.org/rec/conf/popl/MerroH02,Bisimulation congruences in safe ambients.
https://dblp.org/rec/conf/popl/Meseguer89,Relating Models of Polymorphism.
https://dblp.org/rec/conf/popl/MeunierFF06,Modular set-based analysis from contracts.
https://dblp.org/rec/conf/popl/MeyerH80,Axiomatic Definitions of Programming Languages: A Theoretical Assessment.
https://dblp.org/rec/conf/popl/MeyerM82,Axiomatic Definability and Completeness for Recursive Programs.
https://dblp.org/rec/conf/popl/MeyerMMS87,Empty Types in Polymorphic Lambda Calculus.
https://dblp.org/rec/conf/popl/MeyerR86,"""Type"" Is Not A Type."
https://dblp.org/rec/conf/popl/MeyerS88,Towards Fully Abstract Semantics for Local Variables.
https://dblp.org/rec/conf/popl/Middeldorp97,Call by Need Computations to Root-Stable Form.
https://dblp.org/rec/conf/popl/Might07,Logic-flow analysis of higher-order programs.
https://dblp.org/rec/conf/popl/MightS06,Environment analysis via Delta CFA.
https://dblp.org/rec/conf/popl/Mikelsons75,Computer Assisted Application Definition.
https://dblp.org/rec/conf/popl/Miller79,Type Checking in an Imperfect World.
https://dblp.org/rec/conf/popl/MillerHKS14,"Authenticated data structures, generically."
https://dblp.org/rec/conf/popl/Milner01,Computational flux.
https://dblp.org/rec/conf/popl/MilosPL84,Direct Implementation of Compiler Specifications or the Pascal P-code Compiler Revisited.
https://dblp.org/rec/conf/popl/Minamide98,A Functional Representation of Data Structures with a Hole.
https://dblp.org/rec/conf/popl/MinamideMH96,Typed Closure Conversion.
https://dblp.org/rec/conf/popl/Minsky08,Caml trading.
https://dblp.org/rec/conf/popl/Minsky83,Locality in Software Systems.
https://dblp.org/rec/conf/popl/MishraK84,Static Inference of Properties of Applicative Programs.
https://dblp.org/rec/conf/popl/MishraR85,Declaration-Free Type Checking.
https://dblp.org/rec/conf/popl/Mitchell01,Programming language methods in computer security.
https://dblp.org/rec/conf/popl/Mitchell84,Coercion and Type Inference.
https://dblp.org/rec/conf/popl/Mitchell86,Representation Independence and Data Abstraction.
https://dblp.org/rec/conf/popl/Mitchell90,Toward a Typed Foundation for Method Specialization and Inheritance.
https://dblp.org/rec/conf/popl/MitchellH88,The Essence of ML.
https://dblp.org/rec/conf/popl/MitchellMM91,An Extension of Standard ML Modules with Subtyping and Inheritance.
https://dblp.org/rec/conf/popl/MitchellP85,Abstract Types Have Existential Type.
https://dblp.org/rec/conf/popl/Mizell78,"Verification and Design Aspects of ""True"" Concurrency."
https://dblp.org/rec/conf/popl/MoermanS0KS17,Learning nominal automata.
https://dblp.org/rec/conf/popl/Monniaux01,An abstract Monte-Carlo method for the analysis of probabilistic programs.
https://dblp.org/rec/conf/popl/Monniaux09,Automatic modular abstractions for linear constraints.
https://dblp.org/rec/conf/popl/MonsantoFHW12,A compiler and run-time system for network programming languages.
https://dblp.org/rec/conf/popl/MontaguR09,Modeling abstract types in modules with open existential types.
https://dblp.org/rec/conf/popl/Monteleone89,Generalized Conjunctive Types.
https://dblp.org/rec/conf/popl/MontenyohlW88,Correct Flow Analysis in Continuation Semantics.
https://dblp.org/rec/conf/popl/Moore12,Meta-level features in an industrial-strength theorem prover.
https://dblp.org/rec/conf/popl/MooreG08,High-level small-step operational semantics for transactions.
https://dblp.org/rec/conf/popl/MoranS99,Improvement in a Lazy Context: An Operational Theory for Call-by-Need.
https://dblp.org/rec/conf/popl/MorihataMHT09,The third homomorphism theorem on trees: downward & upward lead to divide-and-conquer.
https://dblp.org/rec/conf/popl/Morris73,Types are Not Sets.
https://dblp.org/rec/conf/popl/Morris73a,Advice on Structuring Compilers and Proving Them Correct.
https://dblp.org/rec/conf/popl/MorrisettWCG98,From System F to Typed Assembly Language.
https://dblp.org/rec/conf/popl/MorrisSW80,Experience with an Applicative String Processing Language.
https://dblp.org/rec/conf/popl/Moschovakis90,Computable processes.
https://dblp.org/rec/conf/popl/MoshierR87,A Logic for Partially Specified Data Structures.
https://dblp.org/rec/conf/popl/Mosses89,Unified Algebras and Modules.
https://dblp.org/rec/conf/popl/Muller-OlmS04,Precise interprocedural analysis through linear algebra.
https://dblp.org/rec/conf/popl/Muller94,A Staging Calculus and its Application to the Verification of Translators.
https://dblp.org/rec/conf/popl/MuraseT0SU16,Temporal verification of higher-order functional programs.
https://dblp.org/rec/conf/popl/MurawskiT14,Game semantics for interface middleweight Java.
https://dblp.org/rec/conf/popl/MuroyaHH16,Memoryful geometry of interaction II: recursion and adequacy.
https://dblp.org/rec/conf/popl/Murray16,Synthesis of reactive controllers for hybrid systems (keynote).
https://dblp.org/rec/conf/popl/Murtagh84,A Less Dynamic Memory Allocation Scheme for Algol-like Languages.
https://dblp.org/rec/conf/popl/Murthy07,Advanced programming language design in enterprise software: a lambda-calculus theorist wanders into a datacenter.
https://dblp.org/rec/conf/popl/Musser80,On Proving Inductive Properties of Abstract Data Types.
https://dblp.org/rec/conf/popl/MuthD00,On the Complexity of Flow-Sensitive Dataflow Analyses.
https://dblp.org/rec/conf/popl/Myers13,How languages can save distributed computing.
https://dblp.org/rec/conf/popl/Myers81,A Precise Interprocedural Data Flow Algorithm.
https://dblp.org/rec/conf/popl/Myers84,Efficient Applicative Data Types.
https://dblp.org/rec/conf/popl/Myers99,JFlow: Practical Mostly-Static Information Flow Control.
https://dblp.org/rec/conf/popl/Myreen10,Verified just-in-time compiler on x86.
https://dblp.org/rec/conf/popl/NadenBAB12,A type system for borrowing permissions.
https://dblp.org/rec/conf/popl/NagleJ83,Practical Program Verification: Automatic Program Proving for Real-Time Embedded Software.
https://dblp.org/rec/conf/popl/NaikA07,Conditional must not aliasing for static race detection.
https://dblp.org/rec/conf/popl/NaikYCS12,Abstractions from tests.
https://dblp.org/rec/conf/popl/NanevskiVB10,Structuring the verification of heap-manipulating programs.
https://dblp.org/rec/conf/popl/Naur75,"Programming Languages, Natural Languages, and Mathematics."
https://dblp.org/rec/conf/popl/NeamtiuHFP08,Contextual effects for version-consistent dynamic software updatingalland safe concurrent programming.
https://dblp.org/rec/conf/popl/Necula97,Proof-Carrying Code.
https://dblp.org/rec/conf/popl/NeculaMW02,CCured: type-safe retrofitting of legacy code.
https://dblp.org/rec/conf/popl/NeculaR01,Oracle-based checking of untrusted software.
https://dblp.org/rec/conf/popl/NeirynckPD87,Computation of Aliases and Support Sets.
https://dblp.org/rec/conf/popl/Nelson83,Verifying Reachability Invariants of Linked Structures.
https://dblp.org/rec/conf/popl/NelsonO78,A Simplifier Based on Efficient Decision Algorithms.
https://dblp.org/rec/conf/popl/NeubauerT05,From sequential programs to multi-tier applications by program transformation.
https://dblp.org/rec/conf/popl/NeubauerTGS02,Functional logic overloading.
https://dblp.org/rec/conf/popl/NgoMMP15,Runtime Enforcement of Security Policies on Black Box Reactive Programs.
https://dblp.org/rec/conf/popl/NguyenGO85,A Model and Temporal Proof System for Networks of Processes.
https://dblp.org/rec/conf/popl/Niehren96,Functional Computation as Concurrent Computation.
https://dblp.org/rec/conf/popl/Nielson87,Strictness Analysis and Denotational Abstract Interpretation.
https://dblp.org/rec/conf/popl/NielsonN00,Shape Analysis for Mobile Ambients.
https://dblp.org/rec/conf/popl/NielsonN88,Automatic Binding Time Analysis for a Typed Lambda-Calculus.
https://dblp.org/rec/conf/popl/NielsonN92,Bounded Fixed Point Iteration.
https://dblp.org/rec/conf/popl/NielsonN94,Higher-Order Concurrent Programs with Finite Communication Topology.
https://dblp.org/rec/conf/popl/NielsonN97,Infinitary Control Flow Analysis: a Collecting Semantics for Closure Analysis.
https://dblp.org/rec/conf/popl/Nijholt77,On the Covering of Left Recursive Grammars.
https://dblp.org/rec/conf/popl/NingG93,A Novel Framework of Register Allocation for Software Pipelining.
https://dblp.org/rec/conf/popl/NipkowO98,Javalight is Type-Safe - Definitely.
https://dblp.org/rec/conf/popl/NipkowP93,Type Checking Type Classes.
https://dblp.org/rec/conf/popl/NirkheP92,"Partial Evaluation of High-Level Imperative Programming Languages, with Applications in Hard Real-Time Systems."
https://dblp.org/rec/conf/popl/NiS06,Certified assembly programming with embedded code pointers.
https://dblp.org/rec/conf/popl/Nishimura98,Static Typing for Dynamic Messages.
https://dblp.org/rec/conf/popl/NitaGC08,A theory of platform-dependent low-level software.
https://dblp.org/rec/conf/popl/Nix84,Editing by Example.
https://dblp.org/rec/conf/popl/NolinR73,Formalization of Exel.
https://dblp.org/rec/conf/popl/OCallahn99,"A Simple, Comprehensive Type System for Java Bytecode Subroutines."
https://dblp.org/rec/conf/popl/OcteauJDMB0KT16,Combining static analysis with probabilistic models to enable market-scale Android inter-component analysis.
https://dblp.org/rec/conf/popl/Odersky06,The Scala experiment: can we provide better language support for component systems?
https://dblp.org/rec/conf/popl/Odersky91,How to Make Destructive Updates Less Destructive.
https://dblp.org/rec/conf/popl/Odersky94,A Functional Theory of Local Names.
https://dblp.org/rec/conf/popl/OderskyL96,Putting Type Annotations to Work.
https://dblp.org/rec/conf/popl/OderskyRH93,"Call by Name, Assignment, and the Lambda Calculus."
https://dblp.org/rec/conf/popl/OderskyW97,Pizza into Java: Translating Theory into Practice.
https://dblp.org/rec/conf/popl/OderskyZZ01,Colored local type inference.
https://dblp.org/rec/conf/popl/OgdenRR78,Complexity of Expressions Allowing Concurrency.
https://dblp.org/rec/conf/popl/OHearnT93,Relational Parametricity and Local Variables.
https://dblp.org/rec/conf/popl/OHearnYR04,Separation and information hiding.
https://dblp.org/rec/conf/popl/Ohori92,A Compilation Method for ML-Style Polymorphic Record Calculi.
https://dblp.org/rec/conf/popl/OhoriK93,Semantics for Communication Primitives in an Polymorphic Language.
https://dblp.org/rec/conf/popl/OhoriS07,Lightweight fusion by fixed point promotion.
https://dblp.org/rec/conf/popl/Oles87,Semantics for Concurrency without Powerdomains.
https://dblp.org/rec/conf/popl/OlinskyLR06,Staged allocation: a compositional technique for specifying and implementing procedure calling conventions.
https://dblp.org/rec/conf/popl/OmarVHAH17,Hazelnut: a bidirectionally typed structure editor calculus.
https://dblp.org/rec/conf/popl/OngR11,Verifying higher-order functional programs with pattern-matching algebraic data types.
https://dblp.org/rec/conf/popl/OngS97,A Curry-Howard Foundation for Functional Computation with Control.
https://dblp.org/rec/conf/popl/Oppen78,Reasoning about Recursively Defined Data Structures.
https://dblp.org/rec/conf/popl/OrchardY16,"Effects as sessions, sessions as effects."
https://dblp.org/rec/conf/popl/Ossher84,Grids: A New Program Structuring Mechanism Based on Layered Graphs.
https://dblp.org/rec/conf/popl/Owicki81,Making the World Safe for Garbage Collection.
https://dblp.org/rec/conf/popl/Paakki94,Multi-Pass Execution of Functional Logic Programs.
https://dblp.org/rec/conf/popl/PadgetF85,Closurize and Concentrate.
https://dblp.org/rec/conf/popl/PadonIKLSS15,Decentralizing SDN Policies.
https://dblp.org/rec/conf/popl/PadonISKS16,Decidability of inferring inductive invariants.
https://dblp.org/rec/conf/popl/PaganiSV14,Applying quantitative semantics to higher-order quantum computing.
https://dblp.org/rec/conf/popl/Paige83,Transformational Programming - Applications to Algorithms and Systems.
https://dblp.org/rec/conf/popl/PaigeS77,Reduction in Strength of High Level Operations.
https://dblp.org/rec/conf/popl/PaigeY97,High Level Reading and Data Structure Compilation.
https://dblp.org/rec/conf/popl/Palamidessi97,Comparing the Expressive Power of the Synchronous and the Asynchronous pi-calculus.
https://dblp.org/rec/conf/popl/PalemS90,Scheduling Time-Critical Instructions on RISC Machines.
https://dblp.org/rec/conf/popl/PalsbergO95,A Type System Equivalent to Flow Analysis.
https://dblp.org/rec/conf/popl/PalsbergP98,From Polyvariant Flow Information to Intersection and Union Types.
https://dblp.org/rec/conf/popl/Parikh80,"Propositional Logics of Programs: Systems, Models, and Complexity."
https://dblp.org/rec/conf/popl/Parker89,Partial Order Programming.
https://dblp.org/rec/conf/popl/ParkinsonB05,Separation logic and abstraction.
https://dblp.org/rec/conf/popl/ParkinsonB08,"Separation logic, abstraction and inheritance."
https://dblp.org/rec/conf/popl/ParkinsonBO07,Modular verification of a non-blocking stack.
https://dblp.org/rec/conf/popl/ParkPT05,A probabilistic language based upon sampling functions.
https://dblp.org/rec/conf/popl/ParkSP13,A theorem prover for Boolean BI.
https://dblp.org/rec/conf/popl/Paulin-Mohring89,Extracting F(omega)'s Programs from Proofs in the Calculus of Constructions.
https://dblp.org/rec/conf/popl/Paulson82,A Semantics-Directed Compiler Generator.
https://dblp.org/rec/conf/popl/Paykin0Z17,QWIRE: a core language for quantum circuits.
https://dblp.org/rec/conf/popl/PearlmutterS07,Lazy multivariate higher-order forward-mode AD.
https://dblp.org/rec/conf/popl/Pelegri-LlopartG88,Optimal Code Generation for Expression Trees: An Application of BURS Theory.
https://dblp.org/rec/conf/popl/PennelloD78,A Forward Move Algorithm for LR Error Recovery.
https://dblp.org/rec/conf/popl/PessauxL99,Type-Based Analysis of Uncaught Exceptions.
https://dblp.org/rec/conf/popl/PetersenHCP03,A type theory for memory allocation and data layout.
https://dblp.org/rec/conf/popl/PetrankR02,The hardness of cache conscious data placement.
https://dblp.org/rec/conf/popl/PettorossiPR97,Reducing Nondeterminism while Specializing Logic Programs.
https://dblp.org/rec/conf/popl/PhiliposeCE02,Towards automatic construction of staged compilers.
https://dblp.org/rec/conf/popl/Pichon-Pharabod16,A concurrency semantics for relaxed atomics that permits optimisation and avoids thin-air executions.
https://dblp.org/rec/conf/popl/Pientka08,A type-theoretic foundation for programming with higher-order abstract syntax and first-class substitutions.
https://dblp.org/rec/conf/popl/Pierce92,Bounded Quantification is Undecidable.
https://dblp.org/rec/conf/popl/PierceS97,Behavioral Equivalence in the Polymorphic Pi-calculus.
https://dblp.org/rec/conf/popl/PierceT93,Object-Oriented Programming without Recursive Types.
https://dblp.org/rec/conf/popl/PierceT98,Local Type Inference.
https://dblp.org/rec/conf/popl/PingaliBJMS91,Dependence Flow Graphs: An Algebraic Approach to Program Dependencies.
https://dblp.org/rec/conf/popl/PinterP91,Program Optimization and Parallelization Using Idioms.
https://dblp.org/rec/conf/popl/Pippenger96,Pure versus Impure LISP.
https://dblp.org/rec/conf/popl/Pitts10,Nominal system T.
https://dblp.org/rec/conf/popl/PittsS07,Generative unbinding of names.
https://dblp.org/rec/conf/popl/PlevyakZC95,Obtaining Sequential Efficiency for Concurrent Object-Oriented Languages.
https://dblp.org/rec/conf/popl/PlezbertC97,"Is ""Just in Time"" = ""Better Late than Never""?"
https://dblp.org/rec/conf/popl/PlotkinBLRV16,Scaling network verification using symmetry and surgery.
https://dblp.org/rec/conf/popl/PnueliR89,On the Synthesis of a Reactive Module.
https://dblp.org/rec/conf/popl/PodelskiR05,Transition predicate abstraction and fair termination.
https://dblp.org/rec/conf/popl/PodelskiW10,Counterexample-guided focus.
https://dblp.org/rec/conf/popl/Polak81,Program Verification Based on Denotational Semantics.
https://dblp.org/rec/conf/popl/PolishchukLS07,Dynamic heap type inference for program understanding and debugging.
https://dblp.org/rec/conf/popl/PollockS85,Incremental Compilation of Locally Optimized Code.
https://dblp.org/rec/conf/popl/Pottier11,A typed store-passing translation for general references.
https://dblp.org/rec/conf/popl/PottierG04,Polymorphic typed defunctionalization.
https://dblp.org/rec/conf/popl/PottierR06,Stratified type inference for generalized algebraic data types.
https://dblp.org/rec/conf/popl/PottierS02,Information flow inference for ML.
https://dblp.org/rec/conf/popl/PouchetBBCRSV11,"Loop transformations: convexity, pruning and optimization."
https://dblp.org/rec/conf/popl/Pous15,Symbolic Algorithms for Language Equivalence and Kleene Algebra with Tests.
https://dblp.org/rec/conf/popl/PrabhalaS78,Efficient Computation of Expressions with Common Subexpressions.
https://dblp.org/rec/conf/popl/PrabhuRMH11,EigenCFA: accelerating flow analysis with GPUs.
https://dblp.org/rec/conf/popl/Pratt73,Top Down Operator Precedence.
https://dblp.org/rec/conf/popl/Pratt77,The Competence/Performance Dichotomy in Programming.
https://dblp.org/rec/conf/popl/Pratt79,Process Logic.
https://dblp.org/rec/conf/popl/Pratt80,On Specifying Verifiers.
https://dblp.org/rec/conf/popl/Pratt81,Program Logic Without Binding is Decidable.
https://dblp.org/rec/conf/popl/Pratt82,On the Composition of Processes.
https://dblp.org/rec/conf/popl/Pratt83,"Five Paradigm Shifts in Language Design and their Realization in Viron, a Dataflow Programming Environment."
https://dblp.org/rec/conf/popl/Pratt91,Modeling Concurrency with Geometry.
https://dblp.org/rec/conf/popl/PredaCJD07,A semantics-based approach to malware detection.
https://dblp.org/rec/conf/popl/PredaGLM15,Abstract Symbolic Automata: Mixed syntactic/semantic similarity analysis of executables.
https://dblp.org/rec/conf/popl/Proebsting95,Optimizing an ANSI C Interpreter with Superoperators.
https://dblp.org/rec/conf/popl/ProebstingF94,Detecting Pipeline Structural Hazards Quickly.
https://dblp.org/rec/conf/popl/ProebstingW96,Filter Fusion.
https://dblp.org/rec/conf/popl/PrountzosMPM11,A shape analysis for optimizing parallel graph programs.
https://dblp.org/rec/conf/popl/PughT89,Incremental Computation via Function Caching.
https://dblp.org/rec/conf/popl/QadeerRR04,Summarizing procedures in concurrent programs.
https://dblp.org/rec/conf/popl/Qian94,Higher-Order Equational Logic Programming.
https://dblp.org/rec/conf/popl/QiM09,Masked types for sound object initialization.
https://dblp.org/rec/conf/popl/QueinnecS91,A Dynamic Extent Control Operator for Partial Continuations.
https://dblp.org/rec/conf/popl/Ramakrishnan90,Parallelism in Logic Programs.
https://dblp.org/rec/conf/popl/RamakrishnanS86,Annotations for Distributed Programming in Logic.
https://dblp.org/rec/conf/popl/RamalingamFT99,Aggregate Structure Identification and Its Application to Program Analysis.
https://dblp.org/rec/conf/popl/RamalingamR93,A Categorized Bibliography on Incremental Computation.
https://dblp.org/rec/conf/popl/RamalingamR94,An Incremental Algorithm for Maintaining the Dominator Tree of a Reducible Flowgraph.
https://dblp.org/rec/conf/popl/RamalingamV13,Fault tolerance via idempotence.
https://dblp.org/rec/conf/popl/RamananandroRL11,Formal verification of object layout for c++ multiple inheritance.
https://dblp.org/rec/conf/popl/RamananandroRL12,"A mechanized semantics for C++ object construction and destruction, with applications to resource management."
https://dblp.org/rec/conf/popl/RamanathanS81,Modeling of Problem Domains for Driving Program Development Systems.
https://dblp.org/rec/conf/popl/RamanathS82,Optimal Code for Control Structures.
https://dblp.org/rec/conf/popl/RameshRW90,Automata-Driven Indexing of Prolog Clauses.
https://dblp.org/rec/conf/popl/RamsayNO14,A type-directed abstraction refinement approach to higher-order model checking.
https://dblp.org/rec/conf/popl/Ramsey94,Correctness of Trap-Based Breakpoint Implementations.
https://dblp.org/rec/conf/popl/RamseyD11,"Resourceable, retargetable, modular instruction selection using a machine-independent, type-based tiling of low-level intermediate code."
https://dblp.org/rec/conf/popl/RamseyP02,Stochastic lambda calculus and monads of probability distributions.
https://dblp.org/rec/conf/popl/RaoultS84,The Global Storage Needs of a Subcomputation.
https://dblp.org/rec/conf/popl/RastogiCH12,The ins and outs of gradual type inference.
https://dblp.org/rec/conf/popl/RastogiSFBV15,Safe & Efficient Gradual Typing for TypeScript.
https://dblp.org/rec/conf/popl/RaychevBVK16,Learning programs from noisy data.
https://dblp.org/rec/conf/popl/RaychevVK15,"Predicting Program Properties from ""Big Code""."
https://dblp.org/rec/conf/popl/RayL12,Defining code-injection attacks.
https://dblp.org/rec/conf/popl/ReddyR12,Syntactic control of interference for separation logic.
https://dblp.org/rec/conf/popl/Rehof97,Minimal Typings in Atomic Subtyping.
https://dblp.org/rec/conf/popl/RehofF01,Type-base flow analysis: from polymorphic subtyping to CFL-reachability.
https://dblp.org/rec/conf/popl/ReickeS93,Algebraic Reasoning and Completeness in Typed Languages.
https://dblp.org/rec/conf/popl/Reid80,A High-Level Approach to Computer Document Formatting.
https://dblp.org/rec/conf/popl/Reif78,Symbolic Programming Analysis in Almost Linear Time.
https://dblp.org/rec/conf/popl/Reif79,Data Flow Analysis of Communicating Processes.
https://dblp.org/rec/conf/popl/ReifL77,Symbolic Evaluation and the Global Value Graph.
https://dblp.org/rec/conf/popl/ReifP80,A Dynamic Logic of Multiprocessing with Incomplete Information.
https://dblp.org/rec/conf/popl/ReifS82,Unbounded Speed Variability in Distributed Communication Systems.
https://dblp.org/rec/conf/popl/ReisS06,Specifying C++ concepts.
https://dblp.org/rec/conf/popl/ReitmanA79,Certifying Information Flow Properties of Programs: An Axiomatic Approach.
https://dblp.org/rec/conf/popl/Remy89,Typechecking Records and Variants in a Natural Extension of ML.
https://dblp.org/rec/conf/popl/Remy92,Typing Record Concatenation for Free.
https://dblp.org/rec/conf/popl/RemyV97,Objective ML: A Simple Object-Oriented Extension of ML.
https://dblp.org/rec/conf/popl/ReppyX07,Specialization of CML message-passing primitives.
https://dblp.org/rec/conf/popl/Reps82,Optimal-Time Incremental Semantic Analysis for Syntax-Directed Editors.
https://dblp.org/rec/conf/popl/RepsA84,Interactive Proof Checking.
https://dblp.org/rec/conf/popl/RepsHS95,Precise Interprocedural Dataflow Analysis via Graph Reachability.
https://dblp.org/rec/conf/popl/RepsMT86,Remote Attribute Updating for Language-Based Editors.
https://dblp.org/rec/conf/popl/RepsTP16,Newtonian program analysis via tensor product.
https://dblp.org/rec/conf/popl/Rexford12,Programming languages for programmable networks.
https://dblp.org/rec/conf/popl/Reynolds78,Syntactic Control of Interference.
https://dblp.org/rec/conf/popl/Reynolds93,An Introduction to Logical Relations and Parametric Polymorphism - Tutorial.
https://dblp.org/rec/conf/popl/Reynolds95,Using Functor Categories to Generate Intermediate Code.
https://dblp.org/rec/conf/popl/Ridge09,Verifying distributed systems: the operational approach.
https://dblp.org/rec/conf/popl/Riecke91,Fully Abstract Translations between Functional Languages.
https://dblp.org/rec/conf/popl/RieckeV95,Isolating Side Effects in Sequential Languages.
https://dblp.org/rec/conf/popl/RielyH98,A Typed Language for Distributed Mobile Processes (Extended Abstract).
https://dblp.org/rec/conf/popl/RielyH99,Trust and Partial Typing in Open Systems of Mobile Agents.
https://dblp.org/rec/conf/popl/RinardD97,Synchronization Transformations for Parallel Computing.
https://dblp.org/rec/conf/popl/RinardL92,Semantic Foundations of Jade.
https://dblp.org/rec/conf/popl/RinetzkyBRSW05,A semantics for procedure local heaps and its abstractions.
https://dblp.org/rec/conf/popl/Rival04,Symbolic transfer function-based approaches to certified compilation.
https://dblp.org/rec/conf/popl/RivalC11,Calling context abstraction with shapes.
https://dblp.org/rec/conf/popl/RobbinsKS16,From MinX to MinC: semantics-driven decompilation of recursive datatypes.
https://dblp.org/rec/conf/popl/RompfSABJLJOO13,Optimizing data structures in high-level programs: new directions for extensible compilers based on staging.
https://dblp.org/rec/conf/popl/RondonKJ10,Low-level liquid types.
https://dblp.org/rec/conf/popl/Rosen77,Applications of High-Level Control Flow.
https://dblp.org/rec/conf/popl/Rosen78,Monoids for Rapid Data Flow Analysis.
https://dblp.org/rec/conf/popl/Rosen81,Linear Cost is Sometimes Quadratic.
https://dblp.org/rec/conf/popl/Rosenberg73,Transitions in Extendible Arrays.
https://dblp.org/rec/conf/popl/RosenWZ88,Global Value Numbers and Redundant Computations.
https://dblp.org/rec/conf/popl/Rouaix90,Safe Run-time Overloading.
https://dblp.org/rec/conf/popl/RubinBC02,An efficient profile-analysis framework for data-layout optimizations.
https://dblp.org/rec/conf/popl/Ruckert99,Continuous Grammars.
https://dblp.org/rec/conf/popl/Ruf97,Partitioning Dataflow Analyses Using Types.
https://dblp.org/rec/conf/popl/RuggieriM88,Lifetime Analysis of Dynamically Allocated Objects.
https://dblp.org/rec/conf/popl/Russell90,On Oraclizable Networks and Kahn's Principle.
https://dblp.org/rec/conf/popl/Ruth76,Automatic Design of Data Processing Systems.
https://dblp.org/rec/conf/popl/RuthingKS00,Sparse Code Motion.
https://dblp.org/rec/conf/popl/Ryder83,Incremental Data Flow Analysis.
https://dblp.org/rec/conf/popl/SagivEFR89,Resolving Circularity in Attribute Grammars with Applications to Data Flow Analysis.
https://dblp.org/rec/conf/popl/SagivRW96,Solving Shape-Analysis Problems in Languages with Destructive Updating.
https://dblp.org/rec/conf/popl/SagivRW99,Parametric Shape Analysis via 3-Valued Logic.
https://dblp.org/rec/conf/popl/Saibi97,Typing Algorithm in Type Theory with Inheritance.
https://dblp.org/rec/conf/popl/Sandberg82,"Lithe: A Language Combining a Flexible Syntax, Classes."
https://dblp.org/rec/conf/popl/Sandewall82,Unified Dialogue Management in the Carousel System.
https://dblp.org/rec/conf/popl/SandholmS00,A Type System for Dynamic Web Documents.
https://dblp.org/rec/conf/popl/Sands95,Total Correctness by Local Improvement in Program Transformation.
https://dblp.org/rec/conf/popl/Sands97,From SOS Rules to Proof Principles: An Operational Metatheory for Functional Languages.
https://dblp.org/rec/conf/popl/Sangiorgi01,Extensionality and Intensionality of the Ambient Logics.
https://dblp.org/rec/conf/popl/Sangiorgi15,"Equations, Contractions, and Unique Solutions."
https://dblp.org/rec/conf/popl/SangiorgiV16,Environmental bisimulations for probabilistic higher-order languages.
https://dblp.org/rec/conf/popl/SankaranarayananSM04,Non-linear loop invariant generation using Gröbner bases.
https://dblp.org/rec/conf/popl/SannellaT85,Program Specification and Development in Standard ML.
https://dblp.org/rec/conf/popl/SansomJ95,Time and Space Profiling for Non-Strict Higher-Order Functional Languages.
https://dblp.org/rec/conf/popl/Saraswat87,The Concurrent Logic Programming Language CP: Definition and Operational Semantics.
https://dblp.org/rec/conf/popl/SaraswatJG95,Default Timed Concurrent Constraint Programming.
https://dblp.org/rec/conf/popl/SaraswatR90,Concurrent Constraint Programming.
https://dblp.org/rec/conf/popl/SaraswatRP91,Semantic Foundations of Concurrent Constraint Programming.
https://dblp.org/rec/conf/popl/SarkarSNORBMA09,The semantics of x86-CC multiprocessor machine code.
https://dblp.org/rec/conf/popl/SavageS79,Space-Time Tradeoffs for Linear Recursion.
https://dblp.org/rec/conf/popl/SchaferM10,Type inference for datalog with complex type hierarchies.
https://dblp.org/rec/conf/popl/SchauserCG95,Separation Constraint Partitioning - A New Algorithm for Partitioning Non-strict Programs into Sequential Threads.
https://dblp.org/rec/conf/popl/Scherer17,Deciding equivalence with sums and the empty type.
https://dblp.org/rec/conf/popl/Scherlis81,Program Improvement by Internal Specialization.
https://dblp.org/rec/conf/popl/Schkolnick73,Labelled Precedence Parsing.
https://dblp.org/rec/conf/popl/Schmidt98,Data Flow Analysis is Model Checking of Abstract Interpretations.
https://dblp.org/rec/conf/popl/SchmittS03,The m-calculus: a higher-order distributed process calculus.
https://dblp.org/rec/conf/popl/SchonbergSS79,Automatic Data Structure Selection in SETL.
https://dblp.org/rec/conf/popl/Schubert98,Second-Order Unification and Type Inference for Church-Style Polymorphism.
https://dblp.org/rec/conf/popl/Schwartz75,Automatic Data Structure Choice in a Language of Very High Level.
https://dblp.org/rec/conf/popl/SchwarzR84,Treat - An Applicative Code Generator.
https://dblp.org/rec/conf/popl/SchwarzSVLM11,Static analysis of interrupt-driven programs synchronized via the priority ceiling protocol.
https://dblp.org/rec/conf/popl/ScullyC17,A program optimization for automatic database result caching.
https://dblp.org/rec/conf/popl/SeidlS97,Constraints to Stop Higher-Order Deforestation.
https://dblp.org/rec/conf/popl/SekarMR91,On the Power and Limitation of Strictness Analysis Based on Abstract Interpretation.
https://dblp.org/rec/conf/popl/SekarPR90,Small Domains Spell Fast Strictness Analysis.
https://dblp.org/rec/conf/popl/SekiyamaI17,Stateful manifest contracts.
https://dblp.org/rec/conf/popl/SekiyamaNI15,Manifest Contracts for Datatypes.
https://dblp.org/rec/conf/popl/Selke89,A Rewriting Semantics for Program Dependence Graphs.
https://dblp.org/rec/conf/popl/SergeyVJ14,"Modular, higher-order cardinality analysis in theory and practice."
https://dblp.org/rec/conf/popl/Sethi80,A Case Study in Specifying the Semantics of a Programming Language.
https://dblp.org/rec/conf/popl/SevcikVNJS11,Relaxed-memory concurrency and verified compilation.
https://dblp.org/rec/conf/popl/Sewell01,"Modules, abstract types, and distributed versioning."
https://dblp.org/rec/conf/popl/ShanR17,Exact Bayesian inference by symbolic disintegration.
https://dblp.org/rec/conf/popl/ShaoA93,Smartest Recompilation.
https://dblp.org/rec/conf/popl/ShaoSTP02,A type system for certified binaries.
https://dblp.org/rec/conf/popl/Shapiro82,Algorithmic Program Diagnosis.
https://dblp.org/rec/conf/popl/Shapiro84,Systems Programming in Concurrent Prolog.
https://dblp.org/rec/conf/popl/ShapiroH97,Fast and Accurate Flow-Insensitive Points-To Analysis.
https://dblp.org/rec/conf/popl/ShashaPE84,Temporal Verification of Carrier-Sense Local Area Network Protocols.
https://dblp.org/rec/conf/popl/ShenSMD07,Locality approximation using time.
https://dblp.org/rec/conf/popl/Sherman84,Paragon: Novel Uses of Type Hierarchies for Data Abstraction.
https://dblp.org/rec/conf/popl/ShermanPH82,Is the Interesting Part of Process Logic Uninteresting - A Translation from PL to PDL.
https://dblp.org/rec/conf/popl/ShieldsM01,Type-indexed rows.
https://dblp.org/rec/conf/popl/ShieldsSJ98,Dynamic Typing as Staged Type Inference.
https://dblp.org/rec/conf/popl/ShufGBS02,Exploiting prolific types for memory management and optimizations.
https://dblp.org/rec/conf/popl/SiekW10,"Threesomes, with and without blame."
https://dblp.org/rec/conf/popl/SimeonW03,The essence of XML.
https://dblp.org/rec/conf/popl/Simpson09,Linear types for computational effects.
https://dblp.org/rec/conf/popl/SinghG16,Transforming spreadsheet data types using examples.
https://dblp.org/rec/conf/popl/SinghPV17,Fast polyhedra abstract domain.
https://dblp.org/rec/conf/popl/SinhaW11,On interference abstractions.
https://dblp.org/rec/conf/popl/SippiS82,Practical Error Recovery in LR Parsing.
https://dblp.org/rec/conf/popl/SiskindP07,First-class nonstandard interpretations by opening closures.
https://dblp.org/rec/conf/popl/SitaramF91,Modeling Continuations without Continuations.
https://dblp.org/rec/conf/popl/SittampalamML04,Incremental execution of transformation specifications.
https://dblp.org/rec/conf/popl/SjobergW15,Programming up to Congruence.
https://dblp.org/rec/conf/popl/SmaragdakisBL11,Pick your contexts well: understanding object-sensitivity.
https://dblp.org/rec/conf/popl/SmaragdakisESYF12,Sound predictive race detection in polynomial time.
https://dblp.org/rec/conf/popl/Smith84,Reflection and Semantics in Lisp.
https://dblp.org/rec/conf/popl/SmithV98,Secure Information Flow in a Multi-Threaded Imperative Language.
https://dblp.org/rec/conf/popl/SmolkaKFK017,Cantor meets scott: semantic foundations for probabilistic networks.
https://dblp.org/rec/conf/popl/SneltingH86,Unification in Many-Sorted Algebras as a Device for Incremental Semantic Analysis.
https://dblp.org/rec/conf/popl/Snir93,Computer Architectures and Programming Models for Scalable Parallel Computing.
https://dblp.org/rec/conf/popl/Soisalon-Soininen77,Elimination of Single Productions from LR Parsers in Conjunction with the Use of Default Reductions.
https://dblp.org/rec/conf/popl/Sojakova15,Higher Inductive Types as Homotopy-Initial Algebras.
https://dblp.org/rec/conf/popl/Solomon75,"Modes, Values, and Expressions."
https://dblp.org/rec/conf/popl/Solomon78,Type Definitions with Parameters.
https://dblp.org/rec/conf/popl/SreedharG95,A Linear Time Algorithm for Placing phi-nodes.
https://dblp.org/rec/conf/popl/SrikanthSH17,Complexity verification using guided theorem enumeration.
https://dblp.org/rec/conf/popl/SrinivasanHW93,Static Single Assignment for Explicitely Parallel Programs.
https://dblp.org/rec/conf/popl/SrivastavaGF10,From program verification to program synthesis.
https://dblp.org/rec/conf/popl/StadenCM12,Freefinement.
https://dblp.org/rec/conf/popl/StampoulisS12,Static and user-extensible proof checking.
https://dblp.org/rec/conf/popl/Stansifer88,Type Inference with Subtypes.
https://dblp.org/rec/conf/popl/Stark87,Concurrent Transition System Semantics of Process Networks.
https://dblp.org/rec/conf/popl/Stark90,On the Relations Computable by a Class of Concurrent Automata.
https://dblp.org/rec/conf/popl/StataA98,A Type System for Java Bytecode Subroutines.
https://dblp.org/rec/conf/popl/Staton15,"Algebraic Effects, Linearity, and Quantum Programming Languages."
https://dblp.org/rec/conf/popl/StatonL13,Universal properties of impure programming languages.
https://dblp.org/rec/conf/popl/Steele90,Making Asynchronous Parallelism Safe for the World.
https://dblp.org/rec/conf/popl/Steele94,Building Interpreters by Composing Monads.
https://dblp.org/rec/conf/popl/Steensgaard96,Points-to Analysis in Almost Linear Time.
https://dblp.org/rec/conf/popl/Stewart75,An Algebraic Model for String Patterns.
https://dblp.org/rec/conf/popl/StewartBCA15,Compositional CompCert.
https://dblp.org/rec/conf/popl/StoneH00,Deciding Type Equivalence with Singleton Kinds.
https://dblp.org/rec/conf/popl/StovringL07,"A complete, co-inductive syntactic theory of sequential control and state."
https://dblp.org/rec/conf/popl/StoyleHBSN05,Mutatis mutandis: safe and predictable dynamic software updating.
https://dblp.org/rec/conf/popl/Strom83,Mechanisms for Compile-Time Enforcement of Security.
https://dblp.org/rec/conf/popl/StrubSFC12,Self-certification: bootstrapping certified typecheckers in F* with Coq.
https://dblp.org/rec/conf/popl/SuANPT02,The first-order theory of subtyping constraints.
https://dblp.org/rec/conf/popl/SubrahmanyamY84,Pattern Driven Lazy Reduction: A Unifying Evaluation Mechanism for Functional and Logic Programs.
https://dblp.org/rec/conf/popl/SubramanianDA17,Genesis: synthesizing forwarding tables in multi-tenant networks.
https://dblp.org/rec/conf/popl/SuenagaSH13,Hyperstream processing systems: nonstandard modeling of continuous-time signals.
https://dblp.org/rec/conf/popl/SuFA00,Projection Merging: Reducing Redundancies in Inclusion Constraint Graphs.
https://dblp.org/rec/conf/popl/SumiiP04,A bisimulation for dynamic sealing.
https://dblp.org/rec/conf/popl/SumiiP05,A bisimulation for type abstraction and recursion.
https://dblp.org/rec/conf/popl/Summers76,A Methodology for Lisp Program Construction from Examples.
https://dblp.org/rec/conf/popl/SundareshH91,Incremental Compilation via Partial Evaluation.
https://dblp.org/rec/conf/popl/SuterDK10,Decision procedures for algebraic data types with abstractions.
https://dblp.org/rec/conf/popl/SuW06,The essence of command injection attacks in web applications.
https://dblp.org/rec/conf/popl/Suzuki80,Analysis of Pointer Rotation.
https://dblp.org/rec/conf/popl/Suzuki81,Inferring Types in Smalltalk.
https://dblp.org/rec/conf/popl/SuzukiI77,Implementation of an Array Bound Checker.
https://dblp.org/rec/conf/popl/SuzukiT84,Creating Efficient Systems for Object-Oriented Languages.
https://dblp.org/rec/conf/popl/SwamyFRBCSB14,Gradual typing embedded securely in JavaScript.
https://dblp.org/rec/conf/popl/SwamyHKRDFBFSKZ16,Dependent types and multi-monadic effects in F.
https://dblp.org/rec/conf/popl/Sweeney06,The next mainstream programming language: a game developer's perspective.
https://dblp.org/rec/conf/popl/Symes75,New Control Structures to Aid Gotolessness.
https://dblp.org/rec/conf/popl/TahaN03,Environment classifiers.
https://dblp.org/rec/conf/popl/TakikawaFGNVF16,Is sound gradual typing dead?
https://dblp.org/rec/conf/popl/TallamG03,Bitwidth aware global register allocation.
https://dblp.org/rec/conf/popl/Tang07,Perl 6: reconciling the irreconcilable.
https://dblp.org/rec/conf/popl/TangWZXZM15,Summary-Based Context-Sensitive Data-Dependence Analysis in Presence of Callbacks.
https://dblp.org/rec/conf/popl/TannenM87,Computable Values Can Be Classical.
https://dblp.org/rec/conf/popl/Tarjan80,Prime Subprogram Parsing of a Program.
https://dblp.org/rec/conf/popl/Tate13,The sequential semantics of producer effect systems.
https://dblp.org/rec/conf/popl/TateSL10,Generating compiler optimizations from proofs.
https://dblp.org/rec/conf/popl/TateSTL09,Equality saturation: a new approach to optimization.
https://dblp.org/rec/conf/popl/Tennent73,Mathematical Semantics of Snobol 4.
https://dblp.org/rec/conf/popl/Terauchi10,Dependent types from counterexamples.
https://dblp.org/rec/conf/popl/Thatte90,Quasi-Static Typing.
https://dblp.org/rec/conf/popl/Thatte94,Automated Synthesis of Interface Adapters for Reusable Classes.
https://dblp.org/rec/conf/popl/Thiel84,Stop Losing Sleep Over Incomplete Data Type Specifications.
https://dblp.org/rec/conf/popl/Thielecke03,From control effects to typed continuation passing.
https://dblp.org/rec/conf/popl/Thielecke06,Frame rules from answer types for code pointers.
https://dblp.org/rec/conf/popl/Thomsen89,A Calculus of Higher Order Communicating Systems.
https://dblp.org/rec/conf/popl/TichyB85,Smart Recompilation.
https://dblp.org/rec/conf/popl/Tobin-HochstadtF08,The design and implementation of typed scheme.
https://dblp.org/rec/conf/popl/Tobisawa15,A Meta Lambda Calculus with Cross-Level Computation.
https://dblp.org/rec/conf/popl/Tofte92,Principal Signatures for Higher-Order Program Modules.
https://dblp.org/rec/conf/popl/TofteT94,Implementation of the Typed Call-by-Value lambda-Calculus using a Stack of Regions.
https://dblp.org/rec/conf/popl/TotlaW13,Complete instantiation-based interpolation.
https://dblp.org/rec/conf/popl/TovP11,Practical affine types.
https://dblp.org/rec/conf/popl/TozawaTOM09,Copy-on-write in the PHP language.
https://dblp.org/rec/conf/popl/TristanL08,Formal verification of translation validators: a case study on instruction scheduling optimizations.
https://dblp.org/rec/conf/popl/TristanL10,"A simple, verified validator for software pipelining."
https://dblp.org/rec/conf/popl/TuchKN07,"Types, bytes, and separation logic."
https://dblp.org/rec/conf/popl/Turon17,Rust: from POPL to practice (keynote).
https://dblp.org/rec/conf/popl/TuronTABD13,Logical relations for fine-grained concurrency.
https://dblp.org/rec/conf/popl/TuronW11,A separation logic for refining concurrent objects.
https://dblp.org/rec/conf/popl/Tzevelekos11,Fresh-register automata.
https://dblp.org/rec/conf/popl/UnkelL08,Automatic inference of stationary fields: a generalization of java's final fields.
https://dblp.org/rec/conf/popl/UnnoTK13,Automating relatively complete verification of higher-order functional programs.
https://dblp.org/rec/conf/popl/UnyapothS01,Nomadic pict: correct communication infrastructure for mobile computation.
https://dblp.org/rec/conf/popl/UpadrastaC13,Sub-polyhedral scheduling using (unit-)two-variable-per-inequality polyhedra.
https://dblp.org/rec/conf/popl/VafeiadisBCMN15,Common Compiler Optimisations are Invalid in the C11 Memory Model and what we can do about it.
https://dblp.org/rec/conf/popl/Vardi88,A Temporal Fixpoint Calculus.
https://dblp.org/rec/conf/popl/VaswaniNC07,Preferential path profiling: compactly numbering interesting paths.
https://dblp.org/rec/conf/popl/VaziriTD06,Associating synchronization constraints with data in an object-oriented language.
https://dblp.org/rec/conf/popl/VeanesHLMB12,Symbolic finite state transducers: algorithms and applications.
https://dblp.org/rec/conf/popl/VeanesMML15,Data-Parallel String-Manipulating Programs.
https://dblp.org/rec/conf/popl/VechevYY10,Abstraction-guided synthesis of synchronization.
https://dblp.org/rec/conf/popl/VitousekSS17,Big types in little runtime: open-world soundness and collaborative blame for gradual type systems.
https://dblp.org/rec/conf/popl/Voda82,"Maple: a Programming Language, Operating System."
https://dblp.org/rec/conf/popl/Voigtlander08,Much ado about two (pearl): a pearl on parallel prefix computation.
https://dblp.org/rec/conf/popl/Voigtlander09,Bidirectionalization for free! (Pearl).
https://dblp.org/rec/conf/popl/VolpanoS00,Verifying Secrets and Relative Secrecy.
https://dblp.org/rec/conf/popl/Vorobyov95,Structural Decidable Extensions of Bounded Quantification.
https://dblp.org/rec/conf/popl/Vouillon01,Combining subsumption and binary methods: an object calculus with views.
https://dblp.org/rec/conf/popl/Vouillon06,Polymorphic regular tree types and patterns.
https://dblp.org/rec/conf/popl/VouillonM04,Semantic types: a fresh look at the ideal model for types.
https://dblp.org/rec/conf/popl/VytiniotisJCR13,HALO: haskell to logic through denotational semantics.
https://dblp.org/rec/conf/popl/WaddellD99,Extending the Scope of Syntactic Abstraction.
https://dblp.org/rec/conf/popl/Wadler87,Views: A Way for Pattern Matching to Cohabit with Data Abstraction.
https://dblp.org/rec/conf/popl/Wadler88,Strictness Analysis Aids Time Analysis.
https://dblp.org/rec/conf/popl/Wadler92,The Essence of Functional Programming.
https://dblp.org/rec/conf/popl/WadlerB89,How to Make ad-hoc Polymorphism Less ad-hoc.
https://dblp.org/rec/conf/popl/WaldingerL73,Reasoning About Programs.
https://dblp.org/rec/conf/popl/Walker00,A Type System for Expressive Security Policies.
https://dblp.org/rec/conf/popl/Walker16,Confluences in programming languages research (keynote).
https://dblp.org/rec/conf/popl/Wall82,Messages as Active Agents.
https://dblp.org/rec/conf/popl/Wand82,Semantics-Directed Machine Architecture.
https://dblp.org/rec/conf/popl/Wand83,Loops in Combinator-Based Compilers.
https://dblp.org/rec/conf/popl/Wand84,A Types-as-Sets Semantics for Milner-Style Polymorphism.
https://dblp.org/rec/conf/popl/Wand85,Embedding Type Structure in Semantics.
https://dblp.org/rec/conf/popl/Wand86,Finding the Source of Type Errors.
https://dblp.org/rec/conf/popl/Wand93,Specifying the Correctness of Binding-Time Analysis.
https://dblp.org/rec/conf/popl/WandS94,Selective and Lightweight Closure Conversion.
https://dblp.org/rec/conf/popl/WandS97,Denotational Semantics Using an Operationally-Based Term Model.
https://dblp.org/rec/conf/popl/WandS99,Constraint Systems for Useless Variable Elimination.
https://dblp.org/rec/conf/popl/WangA01,Type-preserving garbage collectors.
https://dblp.org/rec/conf/popl/WangLKKM09,The theory of deadlock avoidance via discrete control.
https://dblp.org/rec/conf/popl/WansbroughJ99,Once Upon a Polymorphic Type.
https://dblp.org/rec/conf/popl/Warren84,A Hierarchical Basis for Reordering Transformations.
https://dblp.org/rec/conf/popl/Waters84,Expressional Loops.
https://dblp.org/rec/conf/popl/WeeksF93,On the Orthogonality of Assignments and Procedures in Algol.
https://dblp.org/rec/conf/popl/Wegbreit76,Goal-Directed Program Transformation.
https://dblp.org/rec/conf/popl/Wegman83,Summarizing Graphs by Regular Expressions.
https://dblp.org/rec/conf/popl/WegmanZ85,Constant Propagation with Conditional Branches.
https://dblp.org/rec/conf/popl/Wegner83,On the Unification of Data and Program Abstraction in Ada.
https://dblp.org/rec/conf/popl/Weihl80,"Interprocedural Data Flow Analysis in the Presence of Pointers, Procedure Variables and Label Variables."
https://dblp.org/rec/conf/popl/Weirich17,The influence of dependent types (keynote).
https://dblp.org/rec/conf/popl/WeirichVJZ11,Generative type abstraction and type-level computation.
https://dblp.org/rec/conf/popl/WeiseCES94,Value Dependence Graphs: Representation without Taxation.
https://dblp.org/rec/conf/popl/WickersonBSC17,Automatically comparing memory consistency models.
https://dblp.org/rec/conf/popl/WidomGS87,Completeness and Incompleteness of Trace-Based Network Proof Systems.
https://dblp.org/rec/conf/popl/WiedermannC07,Extracting queries by static analysis of transparent persistence.
https://dblp.org/rec/conf/popl/Wilhelm84,Inverse Currying Transformation on Attribute Grammars.
https://dblp.org/rec/conf/popl/WilliamsW88,Sacrificing Simplicity for Convenience: Where Do You Draw the Line?
https://dblp.org/rec/conf/popl/Wolper82,Specification and Synthesis of Communicating Processes using an Extended Temporal Logic.
https://dblp.org/rec/conf/popl/Wolper86,Expressing Interesting Properties of Programs in Propositional Temporal Logic.
https://dblp.org/rec/conf/popl/WrigstadNLOV10,Integrating typed and untyped code in a scripting language.
https://dblp.org/rec/conf/popl/WuXCZZ16,Casper: an efficient approach to call trace collection.
https://dblp.org/rec/conf/popl/XiCC03,Guarded recursive datatype constructors.
https://dblp.org/rec/conf/popl/XieA05,Scalable error detection using boolean satisfiability.
https://dblp.org/rec/conf/popl/XiP99,Dependent Types in Practical Programming.
https://dblp.org/rec/conf/popl/XuJC09,Static contract checking for Haskell.
https://dblp.org/rec/conf/popl/Yahav01,Verifying safety properties of concurrent Java programs using 3-valued logic.
https://dblp.org/rec/conf/popl/YangYS12,A language for automatically enforcing privacy policies.
https://dblp.org/rec/conf/popl/YelickZ89,Moded Type Systems for Logic Programming.
https://dblp.org/rec/conf/popl/Yelland99,A Compositional Account of the Java Virtual Machine.
https://dblp.org/rec/conf/popl/Yemeni82,An Axiomatic Treatment of Exception Handling.
https://dblp.org/rec/conf/popl/YiH93,Automatic Generation and Management of Interprocedural Program Analyses.
https://dblp.org/rec/conf/popl/YingYW17,Invariants of quantum programs: characterisations and generation.
https://dblp.org/rec/conf/popl/YorshYC08,Generating precise and concise procedure summaries.
https://dblp.org/rec/conf/popl/Yoshida04,Channel dependent types for higher-order mobile processes.
https://dblp.org/rec/conf/popl/YouS86,Equational Logic Programming: An Extension to Equational Programming.
https://dblp.org/rec/conf/popl/YuCIS07,JavaScript instrumentation for browser security.
https://dblp.org/rec/conf/popl/YuKS04,Formalization of generics for the .NET common language runtime.
https://dblp.org/rec/conf/popl/Zeilberger08,Focusing and higher-order abstract syntax.
https://dblp.org/rec/conf/popl/ZhangDOZW06,A hierarchical model of data locality.
https://dblp.org/rec/conf/popl/ZhangK17,LightDP: towards automating differential privacy proofs.
https://dblp.org/rec/conf/popl/ZhangM14,Toward general diagnosis of static errors.
https://dblp.org/rec/conf/popl/ZhangMNN16,Query-guided maximum satisfiability.
https://dblp.org/rec/conf/popl/ZhangS17,Context-sensitive data-dependence analysis via linear conjunctive language reachability.
https://dblp.org/rec/conf/popl/ZhaoNMZ12,Formalizing the LLVM intermediate representation for verified program transformations.
https://dblp.org/rec/conf/popl/ZhengR08,Demand-driven alias analysis for C.
https://dblp.org/rec/conf/popl/ZhuMKR12,Randomized accuracy-aware program transformations for efficient approximate computations.
https://dblp.org/rec/conf/popl/ZibinG03,Incremental algorithms for dispatching in dynamically typed languages.
https://dblp.org/rec/conf/popl/ZibinGC03,Efficient algorithms for isomorphisms of simple types.
https://dblp.org/rec/conf/popl/Zosel73,A Parallel Approach to Compilation.
https://dblp.org/rec/journals/pacmpl/0001024,Automated Verification of Higher-Order Probabilistic Programs via a Dependent Refinement Type System.
https://dblp.org/rec/journals/pacmpl/0001024a,SMT2Test: From SMT Formulas to Effective Test Cases.
https://dblp.org/rec/journals/pacmpl/0001A19,The next 700 compiler correctness theorems (functional pearl).
https://dblp.org/rec/journals/pacmpl/0001BHKKM21,A pre-expectation calculus for probabilistic sensitivity.
https://dblp.org/rec/journals/pacmpl/0001CLLTY23,An Automata-Based Framework for Verification and Bug Hunting in Quantum Circuits.
https://dblp.org/rec/journals/pacmpl/0001CMHL23,Putting Weak Memory in Order via a Promising Intermediate Representation.
https://dblp.org/rec/journals/pacmpl/0001DLC18,Verifying equivalence of database-driven applications.
https://dblp.org/rec/journals/pacmpl/0001FSK20,"Actor concurrency bugs: a comprehensive study on symptoms, root causes, API usages, and differences."
https://dblp.org/rec/journals/pacmpl/0001H20,Termination analysis for evolving programs: an incremental approach by reusing certified modules.
https://dblp.org/rec/journals/pacmpl/0001HHME24,AUTOMAP: Inferring Rank-Polymorphic Function Applications with Integer Linear Programming.
https://dblp.org/rec/journals/pacmpl/0001HMLGTB24,Error Credits: Resourceful Reasoning about Error Bounds for Higher-Order Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/0001HZTT19,IVT: an efficient method for sharing subtype polymorphic objects.
https://dblp.org/rec/journals/pacmpl/0001KEW0CB20,Igloo: soundly linking compositional refinement and separation logic for distributed system verification.
https://dblp.org/rec/journals/pacmpl/0001KT19,TLA+ model checking made symbolic.
https://dblp.org/rec/journals/pacmpl/0001M17,Restricting grammars with tree automata.
https://dblp.org/rec/journals/pacmpl/0001OV18,Decidability of conversion for type theory in type theory.
https://dblp.org/rec/journals/pacmpl/0001P021,Optimal prediction of synchronization-preserving races.
https://dblp.org/rec/journals/pacmpl/0001ST18,Relatively complete refinement type system for verification of higher-order non-deterministic programs.
https://dblp.org/rec/journals/pacmpl/0001VW17,Normalization by evaluation for sized dependent types.
https://dblp.org/rec/journals/pacmpl/0001W023,Embedding Hindsight Reasoning in Separation Logic.
https://dblp.org/rec/journals/pacmpl/0001WD18,Relational program synthesis.
https://dblp.org/rec/journals/pacmpl/00020HNY20,Statically verified refinements for multiparty protocols.
https://dblp.org/rec/journals/pacmpl/00020SN20,LiveDroid: identifying and preserving mobile app state in volatile runtime environments.
https://dblp.org/rec/journals/pacmpl/0002JKD18,RustBelt: securing the foundations of the rust programming language.
https://dblp.org/rec/journals/pacmpl/0002KLP17,"On the expressive power of user-defined effects: effect handlers, monadic reflection, delimited control."
https://dblp.org/rec/journals/pacmpl/0002TRPR20,Towards a unified proof framework for automated fixpoint reasoning using matching logic.
https://dblp.org/rec/journals/pacmpl/0002WA21,Provably space-efficient parallel functional programming.
https://dblp.org/rec/journals/pacmpl/0002WA23,Efficient Parallel Functional Programming with Effects.
https://dblp.org/rec/journals/pacmpl/0003GWB24,Plume: Efficient and Complete Black-Box Checking of Weak Isolation Levels.
https://dblp.org/rec/journals/pacmpl/0003MR24,Minotaur: A SIMD-Oriented Synthesizing Superoptimizer.
https://dblp.org/rec/journals/pacmpl/00050024,VarLifter: Recovering Variables and Types from Bytecode of Solidity Smart Contracts.
https://dblp.org/rec/journals/pacmpl/0006HLBR20,Differentially-private software frequency profiling under linear constraints.
https://dblp.org/rec/journals/pacmpl/AanjaneyaN24,Maximum Consensus Floating Point Solutions for Infeasible Low-Dimensional Linear Programs with Convex Hull as the Intermediate Representation.
https://dblp.org/rec/journals/pacmpl/AbadiP20,A simple differentiable programming language.
https://dblp.org/rec/journals/pacmpl/AbdullaABKS21,Deciding reachability under persistent x86-TSO.
https://dblp.org/rec/journals/pacmpl/AbdullaABKS24,Verification under Intel-x86 with Persistency.
https://dblp.org/rec/journals/pacmpl/AbdullaAJLNS19,Optimal stateless model checking for reads-from equivalence under sequential consistency.
https://dblp.org/rec/journals/pacmpl/AbdullaAJN18,Optimal stateless model checking under the release-acquire semantics.
https://dblp.org/rec/journals/pacmpl/AbdullaAR20,Parameterized verification under TSO is PSPACE-complete.
https://dblp.org/rec/journals/pacmpl/AbelB20,A unified view of modalities in type systems.
https://dblp.org/rec/journals/pacmpl/AbelDE23,"A Graded Modal Dependent Type Theory with a Universe and Erasure, Formalized."
https://dblp.org/rec/journals/pacmpl/AbeysingheXR24,Flan: An Expressive and Efficient Datalog Compiler for Program Analysis.
https://dblp.org/rec/journals/pacmpl/AbreuDHJMS23,A Type-Based Approach to Divide-and-Conquer Recursion in Coq.
https://dblp.org/rec/journals/pacmpl/AbuahDN22,Solo: a lightweight static analysis for differential privacy.
https://dblp.org/rec/journals/pacmpl/AccattoliG22,The theory of call-by-value solvability.
https://dblp.org/rec/journals/pacmpl/AccattoliGK18,Tight typings and split bounds.
https://dblp.org/rec/journals/pacmpl/AccattoliLV21,The (In)Efficiency of interaction.
https://dblp.org/rec/journals/pacmpl/AccattoliLV22,Multi types and reasonable space.
https://dblp.org/rec/journals/pacmpl/AcetoAFIL19,Adventures in monitorability: from branching to linear time and back again.
https://dblp.org/rec/journals/pacmpl/AckermanFKKMRSY24,"Probabilistic Programming Interfaces for Random Graphs: Markov Categories, Graphons, and Nominal Sets."
https://dblp.org/rec/journals/pacmpl/Adams19,Ryū revisited: printf floating point conversion.
https://dblp.org/rec/journals/pacmpl/AdamsenMT17,Practical initialization race detection for JavaScript web applications.
https://dblp.org/rec/journals/pacmpl/AgrawalC018,Lexicographic ranking supermartingales: an efficient approach to termination of probabilistic programs.
https://dblp.org/rec/journals/pacmpl/AguirreB23,Step-Indexed Logical Relations for Countable Nondeterminism and Probabilistic Choice.
https://dblp.org/rec/journals/pacmpl/AguirreBG0S17,A relational logic for higher-order programs.
https://dblp.org/rec/journals/pacmpl/AguirreBGGKS21,Higher-order probabilistic adversarial computations: categorical semantics and program logics.
https://dblp.org/rec/journals/pacmpl/Ahman18,Handling fibred algebraic effects.
https://dblp.org/rec/journals/pacmpl/AhmanFHMRS18,Recalling a witness: foundations and applications of monotonic state.
https://dblp.org/rec/journals/pacmpl/AhmanP21,Asynchronous effects.
https://dblp.org/rec/journals/pacmpl/AhmedJSW17,"Theorems for free for free: parametricity, with and without types."
https://dblp.org/rec/journals/pacmpl/AhrensBIK22,Reasoning about distributed reconfigurable systems.
https://dblp.org/rec/journals/pacmpl/AhrensHLM20,Reduction monads and their signatures.
https://dblp.org/rec/journals/pacmpl/AlbarghouthiDDN17,FairSquare: probabilistic verification of program fairness.
https://dblp.org/rec/journals/pacmpl/AlbarghouthiH18,Synthesizing coupling proofs of differential privacy.
https://dblp.org/rec/journals/pacmpl/AlbertBHIRS24,"SuperStack: Superoptimization of Stack-Bytecode via Greedy, Constraint-Based, and SAT Techniques."
https://dblp.org/rec/journals/pacmpl/AlbertGRRRS20,Taming callbacks for smart contract modularity.
https://dblp.org/rec/journals/pacmpl/AlgehedB19,Simple noninterference from parametricity.
https://dblp.org/rec/journals/pacmpl/AlimadadiZMT18,Finding broken promises in asynchronous JavaScript programs.
https://dblp.org/rec/journals/pacmpl/AllainC0S24,Snapshottable Stores.
https://dblp.org/rec/journals/pacmpl/AllaisA0MM18,A type and scope safe universe of syntaxes with binding: their semantics and proofs.
https://dblp.org/rec/journals/pacmpl/AlmagorKKO021,Deciding ω-regular properties on linear recurrence sequences.
https://dblp.org/rec/journals/pacmpl/AlmeidaCM0P18,Teaching how to program using automated assessment and functional glossy games (experience report).
https://dblp.org/rec/journals/pacmpl/AlonZLY19,code2vec: learning distributed representations of code.
https://dblp.org/rec/journals/pacmpl/AlpernasFFRSSW18,Secure serverless computing using dynamic information flow control.
https://dblp.org/rec/journals/pacmpl/AlshnakatLGD24,HOL4P4: Mechanized Small-Step Semantics for P4.
https://dblp.org/rec/journals/pacmpl/AltenkirchCKS24,"Internal Parametricity, without an Interval."
https://dblp.org/rec/journals/pacmpl/AlurMS19,Modular quantitative monitoring.
https://dblp.org/rec/journals/pacmpl/AlurSW23,A Robust Theory of Series Parallel Graphs.
https://dblp.org/rec/journals/pacmpl/Alvarez-Picallo24,Effect Handlers for C via Coroutines.
https://dblp.org/rec/journals/pacmpl/AmbalDEK0R24,Semantics of Remote Direct Memory Access: Operational and Declarative Models of RDMA on TSO Architectures.
https://dblp.org/rec/journals/pacmpl/AminBGGKRW23,"LURK: Lambda, the Ultimate Recursive Knowledge (Experience Report)."
https://dblp.org/rec/journals/pacmpl/AminR18,Collapsing towers of interpreters.
https://dblp.org/rec/journals/pacmpl/AnandARSSMNT24,Optimistic Stack Allocation and Dynamic Heapification for Managed Runtimes.
https://dblp.org/rec/journals/pacmpl/AnconaDZ17,Reasoning on divergent computations with coaxioms.
https://dblp.org/rec/journals/pacmpl/AndersenBF20,Adding interactive visual syntax to textual code.
https://dblp.org/rec/journals/pacmpl/AndersenCF17,Super 8 languages for making movies (functional pearl).
https://dblp.org/rec/journals/pacmpl/AndersonAMLJR21,Efficient automatic scheduling of imaging and vision pipelines for the GPU.
https://dblp.org/rec/journals/pacmpl/AndreescuJLM19,Inferring frame conditions with static correlation analysis.
https://dblp.org/rec/journals/pacmpl/AndriciCHMRTW24,Securing Verified IO Programs Against Unverified Code in F.
https://dblp.org/rec/journals/pacmpl/AngiuliCMZ21,Internalizing representation independence with univalence.
https://dblp.org/rec/journals/pacmpl/AngM24,Predictive Monitoring against Pattern Regular Languages.
https://dblp.org/rec/journals/pacmpl/AnSMS20,Augmented example-based synthesis using relational perturbation properties.
https://dblp.org/rec/journals/pacmpl/AntonopoulosKL19,Specification and inference of trace refinement relations.
https://dblp.org/rec/journals/pacmpl/AntonopoulosKLNNN23,An Algebra of Alignment for Relational Verification.
https://dblp.org/rec/journals/pacmpl/AntwerpenPRV18,Scopes as types.
https://dblp.org/rec/journals/pacmpl/ArmstrongBCRGNM19,"ISA semantics for ARMv8-a, RISC-v, and CHERI-MIPS."
https://dblp.org/rec/journals/pacmpl/ArntzeniusK20,Seminaïve evaluation for a higher-order functional language.
https://dblp.org/rec/journals/pacmpl/AroraMA24,"Disentanglement with Futures, State, and Interaction."
https://dblp.org/rec/journals/pacmpl/ArrialGK23,Quantitative Inhabitation for Different Lambda Calculi in a Unifying Framework.
https://dblp.org/rec/journals/pacmpl/ArvidssonCCDNPW23,Reference Capabilities for Flexible Memory Management.
https://dblp.org/rec/journals/pacmpl/AschieriG20,Par means parallel: multiplicative linear logic proofs as concurrent functional programs.
https://dblp.org/rec/journals/pacmpl/AstorgaHMM23,Perception Contracts for Safety of ML-Enabled Systems.
https://dblp.org/rec/journals/pacmpl/AstorgaSDWMX21,Synthesizing contracts correct modulo a test generator.
https://dblp.org/rec/journals/pacmpl/Astrauskas0PS19,Leveraging rust types for modular specification and verification.
https://dblp.org/rec/journals/pacmpl/AstrauskasMP0S20,How do programmers use unsafe rust?
https://dblp.org/rec/journals/pacmpl/Atkey24,Polynomial Time and Dependent Types.
https://dblp.org/rec/journals/pacmpl/AtkinsonBMYC21,Statically bounded-memory delayed sampling for probabilistic streams.
https://dblp.org/rec/journals/pacmpl/AtkinsonC20,Programming and reasoning with partial observability.
https://dblp.org/rec/journals/pacmpl/AtkinsonYBMC22,Semi-symbolic inference for efficient streaming probabilistic programming.
https://dblp.org/rec/journals/pacmpl/AttoucheBCGSS24,Validation of Modern JSON Schema: Formalization and Complexity.
https://dblp.org/rec/journals/pacmpl/AuerbachHMSS17,Prototyping a query compiler using Coq (experience report).
https://dblp.org/rec/journals/pacmpl/AugustssonBCJJSSS23,The Verse Calculus: A Core Calculus for Deterministic Functional Logic Programming.
https://dblp.org/rec/journals/pacmpl/AvanziniBGMV24,Hopping Proofs of Expectation-Based Properties: Applications to Skiplists and Security Proofs.
https://dblp.org/rec/journals/pacmpl/AvanziniBL21,On continuation-passing transformations and expected cost analysis.
https://dblp.org/rec/journals/pacmpl/AvanziniL17,Automating sized-type inference for complexity analysis.
https://dblp.org/rec/journals/pacmpl/AvanziniMS20,A modular cost analysis for probabilistic programs.
https://dblp.org/rec/journals/pacmpl/AvanziniMS23,Automated Expected Value Analysis of Recursive Programs.
https://dblp.org/rec/journals/pacmpl/AwarJRG21,Programming and execution models for parallel bounded exhaustive testing.
https://dblp.org/rec/journals/pacmpl/BaderSP019,Getafix: learning to fix bugs automatically.
https://dblp.org/rec/journals/pacmpl/BaekGS0TRP24,Wasm-R3: Record-Reduce-Replay for Realistic and Standalone WebAssembly Benchmarks.
https://dblp.org/rec/journals/pacmpl/BaeL19,Bounded model checking of signal temporal logic properties using syntactic separation.
https://dblp.org/rec/journals/pacmpl/Bagnall0023,Formally Verified Samplers from Probabilistic Programs with Loops and Conditioning.
https://dblp.org/rec/journals/pacmpl/BahrGM19,Simply RaTT: a fitch-style modal calculus for reactive programming without space leaks.
https://dblp.org/rec/journals/pacmpl/BahrGM21,Diamonds are not forever: liveness in reactive programming with guarded recursion.
https://dblp.org/rec/journals/pacmpl/BahrH22,Monadic compiler calculation (functional pearl).
https://dblp.org/rec/journals/pacmpl/BahrH23,Calculating Compilers for Concurrency.
https://dblp.org/rec/journals/pacmpl/BahrH24,Beyond Trees: Calculating Graph-Based Compilers (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/BahrM23,Asynchronous Modal FRP.
https://dblp.org/rec/journals/pacmpl/BakstGKJ17,Verifying distributed programs via canonical sequentialization.
https://dblp.org/rec/journals/pacmpl/BalabonskiBBK17,Foundations of strong call by need.
https://dblp.org/rec/journals/pacmpl/BalasubramanianMTZ24,Reachability in Continuous Pushdown VASS.
https://dblp.org/rec/journals/pacmpl/BaldanKMP19,Fixpoint games on continuous lattices.
https://dblp.org/rec/journals/pacmpl/BallantyneGH24,"Compiled, Extensible, Multi-language DSLs (Functional Pearl)."
https://dblp.org/rec/journals/pacmpl/BallantyneKF20,Macros for domain-specific languages.
https://dblp.org/rec/journals/pacmpl/BallHDHM24,Jacdac: Service-Based Prototyping of Embedded Systems.
https://dblp.org/rec/journals/pacmpl/BalzerP17,Manifest sharing with session types.
https://dblp.org/rec/journals/pacmpl/BanerjeeDCN20,Sound garbage collection for C using pointer provenance.
https://dblp.org/rec/journals/pacmpl/BanerjeeXS24,Input-Relational Verification of Deep Neural Networks.
https://dblp.org/rec/journals/pacmpl/BansalHOK23,Mosaic: An Interoperable Compiler for Tensor Algebra.
https://dblp.org/rec/journals/pacmpl/BansalNS20,Synthesis of coordination programs from linear temporal specifications.
https://dblp.org/rec/journals/pacmpl/BaoGHT22,A separation logic for negative dependence.
https://dblp.org/rec/journals/pacmpl/BaoKPS18,Analytical modeling of cache behavior for affine programs.
https://dblp.org/rec/journals/pacmpl/BaoWBJHR21,Reachability types: tracking aliasing and separation in higher-order functional programs.
https://dblp.org/rec/journals/pacmpl/BarbarossaM20,"Taylor subsumes Scott, Berry, Kahn and Plotkin."
https://dblp.org/rec/journals/pacmpl/BarbarS21,Compacting points-to sets through object clustering.
https://dblp.org/rec/journals/pacmpl/BarikSRC19,Optimization of swift protocols.
https://dblp.org/rec/journals/pacmpl/BarkeJP23,Grounded Copilot: How Programmers Interact with Code-Generating Models.
https://dblp.org/rec/journals/pacmpl/BarkePP20,Just-in-time learning for bottom-up enumerative synthesis.
https://dblp.org/rec/journals/pacmpl/BarnabyCSD23,ImageEye: Batch Image Processing using Program Synthesis.
https://dblp.org/rec/journals/pacmpl/BarowyBZ18,ExceLint: automatically finding spreadsheet formula errors.
https://dblp.org/rec/journals/pacmpl/BarrettBKMT17,Virtual machine warmup blows hot and cold.
https://dblp.org/rec/journals/pacmpl/BarriereBFPV21,Formally verified speculation and deoptimization in a JIT compiler.
https://dblp.org/rec/journals/pacmpl/BarriereBP23,Formally Verified Native Code Generation in an Effectful JIT: Turning the CompCert Backend into a Formally Verified JIT Compiler.
https://dblp.org/rec/journals/pacmpl/BarriereP24,Linear Matching of JavaScript Regular Expressions.
https://dblp.org/rec/journals/pacmpl/BartellDA20,Guided linking: dynamic linking without the costs.
https://dblp.org/rec/journals/pacmpl/BarthaCB21,"One down, 699 to go: or, synthesising compositional desugarings."
https://dblp.org/rec/journals/pacmpl/BartheBGHLPT20,Formal verification of a constant-time preserving C compiler.
https://dblp.org/rec/journals/pacmpl/BartheCKS021,Deciding accuracy of differential privacy schemes.
https://dblp.org/rec/journals/pacmpl/BartheCLG22,On Feller continuity and full abstraction.
https://dblp.org/rec/journals/pacmpl/BartheEGHS18,Proving expected sensitivity of probabilistic programs.
https://dblp.org/rec/journals/pacmpl/BartheHL20,A probabilistic separation logic.
https://dblp.org/rec/journals/pacmpl/BartheHYYZ20,Relational proofs for quantum programs.
https://dblp.org/rec/journals/pacmpl/Bastani0S19,Probabilistic verification of fairness properties via concentration.
https://dblp.org/rec/journals/pacmpl/BastianKN19,Reliable and fast DWARF-based stack unwinding.
https://dblp.org/rec/journals/pacmpl/BatzBKW24,Programmatic Strategy Synthesis: Resolving Nondeterminism in Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/BatzGKKW22,Weighted programming: a programming paradigm for specifying mathematical models.
https://dblp.org/rec/journals/pacmpl/BatzKKM21,Relatively complete verification of probabilistic programs: an expressive language for expectation-based reasoning.
https://dblp.org/rec/journals/pacmpl/BatzKKMN19,Quantitative separation logic: a logic for reasoning about probabilistic pointer programs.
https://dblp.org/rec/journals/pacmpl/BatzKKMV23,A Calculus for Amortized Expected Runtimes.
https://dblp.org/rec/journals/pacmpl/BaudonRG23,Bit-Stealing Made Legal: Compilation for Custom Memory Representations of Algebraic Data Types.
https://dblp.org/rec/journals/pacmpl/BaumanBST17,Sound gradual typing: only mostly dead.
https://dblp.org/rec/journals/pacmpl/BaumannGMTZ23,Context-Bounded Verification of Context-Free Specifications.
https://dblp.org/rec/journals/pacmpl/BaumannMTZ21,Context-bounded verification of liveness properties for multithreaded shared-memory programs.
https://dblp.org/rec/journals/pacmpl/BaumannMTZ22,Context-bounded verification of thread pools.
https://dblp.org/rec/journals/pacmpl/BavishiJCFGLRT22,Neurosymbolic repair for low-code formula languages.
https://dblp.org/rec/journals/pacmpl/BavishiLFSS19,AutoPandas: neural-backed generators for program synthesis.
https://dblp.org/rec/journals/pacmpl/BavishiLSS21,Gauss: program synthesis by reasoning over graphs.
https://dblp.org/rec/journals/pacmpl/Beck0CZZ24,"A Two-Phase Infinite/Finite Low-Level Memory Model: Reconciling Integer-Pointer Casts, Finite Space, and undef at the LLVM IR Level of Abstraction."
https://dblp.org/rec/journals/pacmpl/BeckerLWGHRM24,Probabilistic Programming with Programmable Variational Inference.
https://dblp.org/rec/journals/pacmpl/BeckettGMW20,Abstract interpretation of distributed network control planes.
https://dblp.org/rec/journals/pacmpl/BelyakovaCGNTV20,World age in Julia: optimizing method dispatch in the presence of eval.
https://dblp.org/rec/journals/pacmpl/BelyakovaCTV24,Decidable Subtyping of Existential Types for Julia.
https://dblp.org/rec/journals/pacmpl/Bembenek0C20,Formulog: Datalog for SMT-based static analysis.
https://dblp.org/rec/journals/pacmpl/Bembenek0C24,Making Formulog Fast: An Argument for Unconventional Datalog Evaluation.
https://dblp.org/rec/journals/pacmpl/BembenekGC23,From SMT to ASP: Solver-Based Approaches to Solving Datalog Synthesis-as-Rule-Selection Problems.
https://dblp.org/rec/journals/pacmpl/BenavidesV019,DProf: distributed profiler with strong guarantees.
https://dblp.org/rec/journals/pacmpl/BenderP19,A formalization of Java's concurrent access modes.
https://dblp.org/rec/journals/pacmpl/BenediktP21,Generating collection transformations from proofs.
https://dblp.org/rec/journals/pacmpl/BenzakenCHKMSS22,Translating canonical SQL to imperative code in Coq.
https://dblp.org/rec/journals/pacmpl/BergstrasserGLZ24,Ramsey Quantifiers in Linear Arithmetics.
https://dblp.org/rec/journals/pacmpl/Bernardy17,A pretty but not greedy printer (functional pearl).
https://dblp.org/rec/journals/pacmpl/BernardyBNJS18,Linear Haskell: practical linearity in a higher-order polymorphic language.
https://dblp.org/rec/journals/pacmpl/BernsteinBBCFKK17,Geo-distribution of actor-based services.
https://dblp.org/rec/journals/pacmpl/BertramLH23,Cutting the Cake: A Language for Fair Division.
https://dblp.org/rec/journals/pacmpl/Beurer-Kellner023,Prompting Is Programming: A Query Language for Large Language Models.
https://dblp.org/rec/journals/pacmpl/BezansonCCKSVZ18,Julia: dynamism and performance reconciled by design.
https://dblp.org/rec/journals/pacmpl/BhanukaPBB23,Getting into the Flow: Towards Better Type Error Messages for Constraint-Based Type Inference.
https://dblp.org/rec/journals/pacmpl/BianchiniDGZ23,Resource-Aware Soundness for Big-Step Semantics.
https://dblp.org/rec/journals/pacmpl/BianchiniDGZS22,Coeffects for sharing and mutation.
https://dblp.org/rec/journals/pacmpl/BielikFV18,Robust relational layout synthesis from examples for Android.
https://dblp.org/rec/journals/pacmpl/Bierhoff22,Wildcards need witness protection.
https://dblp.org/rec/journals/pacmpl/BiernackaCD22,A simple and efficient implementation of strong call by need by an abstract machine.
https://dblp.org/rec/journals/pacmpl/BiernackiPPS18,Handle with care: relational interpretation of algebraic effects and handlers.
https://dblp.org/rec/journals/pacmpl/BiernackiPPS19,Abstracting algebraic effects.
https://dblp.org/rec/journals/pacmpl/BiernackiPPS20,"Binders by day, labels by night: effect instances via lexically scoped handlers."
https://dblp.org/rec/journals/pacmpl/BinderJSO20,Decomposition diversity with symmetric data and codata.
https://dblp.org/rec/journals/pacmpl/BinderSSO24,Deriving Dependently-Typed OOP from First Principles.
https://dblp.org/rec/journals/pacmpl/BinderT0O24,Grokking the Sequent Calculus (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/BirkedalDGJST21,Theorems for free from separation logic specifications.
https://dblp.org/rec/journals/pacmpl/BiswasE19,On the complexity of checking transactional consistency.
https://dblp.org/rec/journals/pacmpl/BiswasKVEL21,MonkeyDB: effectively testing correctness under weak isolation levels.
https://dblp.org/rec/journals/pacmpl/BittnerSMYTWAT24,On the Expressive Power of Languages for Static Variability.
https://dblp.org/rec/journals/pacmpl/BizjakGKB19,Iron: managing obligations in higher-order concurrent separation logic.
https://dblp.org/rec/journals/pacmpl/BlaauwbroekOG24,Hashing Modulo Context-Sensitive 𝛼-Equivalence.
https://dblp.org/rec/journals/pacmpl/BlackshearGOS18,RacerD: compositional static race detection.
https://dblp.org/rec/journals/pacmpl/BlanchetteGPT19,Bindings as bounded natural functors.
https://dblp.org/rec/journals/pacmpl/BlanvillainBKO22,Type-level programming with match types.
https://dblp.org/rec/journals/pacmpl/BlaudeauL22,A conceptual framework for safe object initialization: a principled and mechanized soundness proof of the Celsius model.
https://dblp.org/rec/journals/pacmpl/BlaudeauRR24,Fulfilling OCaml Modules with Transparency.
https://dblp.org/rec/journals/pacmpl/BlinnLKO24,Statically Contextualizing Large Language Models with Typed Holes.
https://dblp.org/rec/journals/pacmpl/BodinGJS19,Skeletal semantics and their interpretations.
https://dblp.org/rec/journals/pacmpl/BoisseauG18,What you needa know about Yoneda: profunctor optics and the Yoneda lemma (functional pearl).
https://dblp.org/rec/journals/pacmpl/BojanczykK24,Polyregular Functions on Unordered Trees of Bounded Height.
https://dblp.org/rec/journals/pacmpl/BonchiGS23,Deconstructing the Calculus of Relations with Tape Diagrams.
https://dblp.org/rec/journals/pacmpl/BonchiHPSZ19,Diagrammatic algebra: from linear to concurrent systems.
https://dblp.org/rec/journals/pacmpl/BorgarelliEMN24,Reward Augmentation in Reinforcement Learning for Testing Distributed Systems.
https://dblp.org/rec/journals/pacmpl/BorkowskiVJ24,Mechanizing Refinement Types.
https://dblp.org/rec/journals/pacmpl/BornholtT18,Finding code that explodes under symbolic evaluation.
https://dblp.org/rec/journals/pacmpl/Boruch-Gruszecki22,A case for DOT: theoretical foundations for objects with pattern matching and GADT-style reasoning.
https://dblp.org/rec/journals/pacmpl/Boruch-Gruszecki24,Gradient: Gradual Compartmentalization via Object Capabilities Tracked in Types.
https://dblp.org/rec/journals/pacmpl/BostonGC18,Leto: verifying application-specific hardware fault tolerance with programmable execution models.
https://dblp.org/rec/journals/pacmpl/BottuXMS19,Coherence of type class resolution.
https://dblp.org/rec/journals/pacmpl/BouajjaniER23,Dynamic Partial Order Reduction for Checking Correctness against Transaction Isolation Levels.
https://dblp.org/rec/journals/pacmpl/BourgeatCEGSWC23,Flexible Instruction-Set Semantics via Abstract Monads (Experience Report).
https://dblp.org/rec/journals/pacmpl/BourkeBP20,Mechanized semantics and verified compilation for a dataflow synchronous language with reset.
https://dblp.org/rec/journals/pacmpl/BourRS18,Merlin: a language server for OCaml (experience report).
https://dblp.org/rec/journals/pacmpl/BowersOWGTES23,Top-Down Synthesis for Library Learning.
https://dblp.org/rec/journals/pacmpl/Bowman24,A Low-Level Look at A-Normal Form.
https://dblp.org/rec/journals/pacmpl/BowmanCRA18,Type-preserving CPS translation of Σ and Π types is not not possible.
https://dblp.org/rec/journals/pacmpl/BracevacASEEM18,Versatile event correlation with algebraic effects.
https://dblp.org/rec/journals/pacmpl/BracevacWJAJBR23,Graph IRs for Impure Higher-Order Languages: Making Aggressive Optimizations Affordable with Precise Effect Dependencies.
https://dblp.org/rec/journals/pacmpl/BrachthauserSLB22,"Effects, capabilities, and boxes: from scope-based reasoning to type-based reasoning and back."
https://dblp.org/rec/journals/pacmpl/BrachthauserSO18,Effect handlers for the masses.
https://dblp.org/rec/journals/pacmpl/BrachthauserSO20,Effects as capabilities: effect handlers and lightweight effect polymorphism.
https://dblp.org/rec/journals/pacmpl/BrahmakshatriyaRGA24,NetBlocks: Staging Layouts for High-Performance Custom Host Network Stacks.
https://dblp.org/rec/journals/pacmpl/BramEMSS21,Rich specifications for Ethereum smart contract verification.
https://dblp.org/rec/journals/pacmpl/BrandonDDBM23,Better Defunctionalization through Lambda Set Specialization.
https://dblp.org/rec/journals/pacmpl/Breitner23,More Fixpoints! (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/BreitnerS17,Lock-step simulation is child's play (experience report).
https://dblp.org/rec/journals/pacmpl/BreitnerSLRWW18,"Ready, set, verify! applying hs-to-coq to real-world Haskell code (experience report)."
https://dblp.org/rec/journals/pacmpl/BriggsLP24,Implementation and Synthesis of Math Library Functions.
https://dblp.org/rec/journals/pacmpl/BrightAP20,Origins of the D programming language.
https://dblp.org/rec/journals/pacmpl/Brody0Y20,A structural model for contextual code changes.
https://dblp.org/rec/journals/pacmpl/BrotzmanZKT21,SpecSafe: detecting cache side channels in a speculative world.
https://dblp.org/rec/journals/pacmpl/BrownP18,Jones-optimal partial evaluation by specialization-safe normalization.
https://dblp.org/rec/journals/pacmpl/BrownPBMP21,Not so fast: understanding and mitigating negative impacts of compiler optimizations on code reuse gadget sets.
https://dblp.org/rec/journals/pacmpl/BrunelMP20,Backpropagation in the simply typed lambda-calculus with linear negation.
https://dblp.org/rec/journals/pacmpl/BruniGGGP20,Abstract extensionality: on the properties of incomplete abstract interpretations.
https://dblp.org/rec/journals/pacmpl/BuckleyCOSRE24,An Algebraic Language for Specifying Quantum Networks.
https://dblp.org/rec/journals/pacmpl/BuiCGPT21,The reads-from equivalence for the TSO and PSO memory models.
https://dblp.org/rec/journals/pacmpl/BunaMargineanCSW24,On Learning Polynomial Recursive Programs.
https://dblp.org/rec/journals/pacmpl/BurckhardtC18,Reactive caching for composed services: polling at the speed of push.
https://dblp.org/rec/journals/pacmpl/BurckhardtGJKMM21,Durable functions: semantics for stateful serverless.
https://dblp.org/rec/journals/pacmpl/BurnOR18,Higher-order constrained horn clauses for verification.
https://dblp.org/rec/journals/pacmpl/ByrdBRM17,A unified approach to solving seven programming problems (functional pearl).
https://dblp.org/rec/journals/pacmpl/CaiFGH23,Asparagus: Automated Synthesis of Parametric Gas Upper-Bounds for Smart Contracts.
https://dblp.org/rec/journals/pacmpl/CairesT19,Refinement kinds: type-safe programming with practical type-level computation.
https://dblp.org/rec/journals/pacmpl/CaiZ23,A Cocktail Approach to Practical Call Graph Construction.
https://dblp.org/rec/journals/pacmpl/CambroneroGLPRST23,FlashFill++: Scaling Programming by Example by Cutting to the Chase.
https://dblp.org/rec/journals/pacmpl/CambroneroR19,AL: autogenerating supervised learning programs.
https://dblp.org/rec/journals/pacmpl/CampbellHF24,Computing Precise Control Interface Specifications.
https://dblp.org/rec/journals/pacmpl/CampionPG22,Partial (In)Completeness in abstract interpretation: limiting the imprecision in program analysis.
https://dblp.org/rec/journals/pacmpl/CampionPGU24,Monotonicity and the Precision of Program Analysis.
https://dblp.org/rec/journals/pacmpl/Campora020,Taming type annotations in gradual typing.
https://dblp.org/rec/journals/pacmpl/Campora0EW18,Migrating gradual types.
https://dblp.org/rec/journals/pacmpl/Campora0W18,Casts and costs: harmonizing safety and performance in gradual typing.
https://dblp.org/rec/journals/pacmpl/CamporaKC24,Type-Based Gradual Typing Performance Optimization.
https://dblp.org/rec/journals/pacmpl/CanouCH17,Scaling up functional programming education: under the hood of the OCaml MOOC.
https://dblp.org/rec/journals/pacmpl/CaoKNWTP23,babble: Learning Better Abstractions with E-Graphs and Anti-unification.
https://dblp.org/rec/journals/pacmpl/CaoTZYC23,Mat2Stencil: A Modular Matrix-Based DSL for Explicit and Implicit Matrix-Free PDE Solvers on Structured Grid.
https://dblp.org/rec/journals/pacmpl/CapriottiK18,Univalent higher categories via complete Semi-Segal types.
https://dblp.org/rec/journals/pacmpl/CaretteHKS24,"With a Few Square Roots, Quantum Computing Is as Easy as Pi."
https://dblp.org/rec/journals/pacmpl/CaretteHKS24a,How to Bake a Quantum Π.
https://dblp.org/rec/journals/pacmpl/CarnierPK24,Type Inference Logics.
https://dblp.org/rec/journals/pacmpl/CascavalBS23,A Lineage-Based Referencing DSL for Computer-Aided Design.
https://dblp.org/rec/journals/pacmpl/CassanoGLSFAF0J24,Knowledge Transfer from High-Resource to Low-Resource Programming Languages for Code LLMs.
https://dblp.org/rec/journals/pacmpl/Castagna23,"Typing Records, Maps, and Structs."
https://dblp.org/rec/journals/pacmpl/CastagnaL17,Gradual typing with union and intersection types.
https://dblp.org/rec/journals/pacmpl/CastagnaLN24,Polymorphic Type Inference for Dynamic Languages.
https://dblp.org/rec/journals/pacmpl/CastagnaLNL22,"On type-cases, union elimination, and occurrence typing."
https://dblp.org/rec/journals/pacmpl/CastagnaLPS19,Gradual typing: a new perspective.
https://dblp.org/rec/journals/pacmpl/CastellanC23,The Geometry of Causality: Multi-token Geometry of Interaction and Its Causal Unfolding.
https://dblp.org/rec/journals/pacmpl/CastellanY19,Two sides of the same coin: session types and game semantics: a synchronous side and an asynchronous side.
https://dblp.org/rec/journals/pacmpl/CastelloRK24,Inductive Diagrams for Causal Reasoning.
https://dblp.org/rec/journals/pacmpl/Castro-PerezY20,CAMP: cost-aware multiparty session protocols.
https://dblp.org/rec/journals/pacmpl/CastroHJNY19,Distributed programming using role-parametric session types in go: statically-typed endpoint APIs for dynamically-instantiated communication structures.
https://dblp.org/rec/journals/pacmpl/CavalcantiBA17,Evaluating and improving semistructured merge.
https://dblp.org/rec/journals/pacmpl/CavalloH19,Higher inductive types in cubical computational type theory.
https://dblp.org/rec/journals/pacmpl/CelikNRG19,"Design, implementation, and application of GPU-based Java bytecode interpreters."
https://dblp.org/rec/journals/pacmpl/CelikPKG17,Bounded exhaustive test-input generation on GPUs.
https://dblp.org/rec/journals/pacmpl/CeragioliGLT24,Quantum Bisimilarity via Barbs and Contexts: Curbing the Power of Non-deterministic Observers.
https://dblp.org/rec/journals/pacmpl/ChaeOHY17,Automatically generating features for learning program analysis heuristics for C-like languages.
https://dblp.org/rec/journals/pacmpl/ChakrabortyKMP24,How Hard Is Weak-Memory Testing?
https://dblp.org/rec/journals/pacmpl/ChakrabortyV19,Grounding thin-air reads with event structures.
https://dblp.org/rec/journals/pacmpl/ChaliasosGL22,A study of inline assembly in solidity smart contracts.
https://dblp.org/rec/journals/pacmpl/ChaliasosSDMMS21,Well-typed programs can go wrong: a study of typing-related bugs in JVM compilers.
https://dblp.org/rec/journals/pacmpl/ChalupaCPSV18,Data-centric dynamic partial order reduction.
https://dblp.org/rec/journals/pacmpl/Chambers20,"S, R, and data science."
https://dblp.org/rec/journals/pacmpl/ChandraB18,Bonsai: synthesis-based reasoning for type systems.
https://dblp.org/rec/journals/pacmpl/ChangBTB20,Dependent type systems as macros.
https://dblp.org/rec/journals/pacmpl/ChangKT18,Symbolic types for lenient symbolic execution.
https://dblp.org/rec/journals/pacmpl/ChappeHHZZ23,"Choice Trees: Representing Nondeterministic, Recursive, and Impure Programs in Coq."
https://dblp.org/rec/journals/pacmpl/Chargueraud20,Separation logic for sequential programs (functional pearl).
https://dblp.org/rec/journals/pacmpl/ChasinsB17,Skip blocks: reusing execution history to accelerate web scripts.
https://dblp.org/rec/journals/pacmpl/ChataingDSY24,"Unboxed Data Constructors: Or, How cpp Decides a Halting Problem."
https://dblp.org/rec/journals/pacmpl/ChatterjeeCP18,Optimal Dyck reachability for data-dependence and alias analysis.
https://dblp.org/rec/journals/pacmpl/ChatterjeeGMZ24,Quantitative Bounds on Resource Usage of Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/ChatterjeeGNZ24,Equivalence and Similarity Refutation for Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/ChatterjeeGOP19,Efficient parameterized algorithms for data packing.
https://dblp.org/rec/journals/pacmpl/ChatterjeePT19,Value-centric dynamic partial order reduction.
https://dblp.org/rec/journals/pacmpl/ChaudhuriVGRL17,Fast and precise type checking for JavaScript.
https://dblp.org/rec/journals/pacmpl/CheesemanPCKDCWL23,When Concurrency Matters: Behaviour-Oriented Concurrency.
https://dblp.org/rec/journals/pacmpl/ChenBDDD23,Data Extraction via Semantic Regular Expression Synthesis.
https://dblp.org/rec/journals/pacmpl/ChenC024,CoolerSpace: A Language for Physically Correct and Computationally Efficient Color Programming.
https://dblp.org/rec/journals/pacmpl/ChenCHHLS23,Solving String Constraints with Lengths by Stabilization.
https://dblp.org/rec/journals/pacmpl/ChenCHLW18,What is decidable about string constraints with the ReplaceAll function.
https://dblp.org/rec/journals/pacmpl/ChenFHHHKLRW22,Solving string constraints with Regex-dependent functions through transducers with priorities and variables.
https://dblp.org/rec/journals/pacmpl/ChenFKP22,Veracity: declarative multicore programming with commutativity.
https://dblp.org/rec/journals/pacmpl/ChengP24,The Ultimate Conditional Syntax.
https://dblp.org/rec/journals/pacmpl/ChenHLRW19,Decision procedures for path feasibility of string-manipulating programs with complex operations.
https://dblp.org/rec/journals/pacmpl/ChenLOKMJR23,Dargent: A Silver Bullet for Verified Data Layout Refinement.
https://dblp.org/rec/journals/pacmpl/ChenMABJSWZJ24,Synchronous Programming with Refinement Types.
https://dblp.org/rec/journals/pacmpl/ChenP24,The Long Way to Deforestation: A Type Inference and Elaboration Technique for Removing Intermediate Data Structures.
https://dblp.org/rec/journals/pacmpl/ChenPBCWDD22,Type-directed synthesis of visualizations from natural language queries.
https://dblp.org/rec/journals/pacmpl/ChenR20,A general approach to define binders using matching logic.
https://dblp.org/rec/journals/pacmpl/ChenS21,A computational interpretation of compact closed categories: reversible programming with negative and fractional types.
https://dblp.org/rec/journals/pacmpl/ChenS24,Quest Complete: The Holy Grail of Gradual Security.
https://dblp.org/rec/journals/pacmpl/ChenWFBD19,Relational verification using reinforcement learning.
https://dblp.org/rec/journals/pacmpl/ChenWGDFD22,Synthesis-powered optimization of smart contracts via data type refactoring.
https://dblp.org/rec/journals/pacmpl/ChenYLZWWSW24,Evaluating the Effectiveness of Deep Learning Models for Foundational Program Analysis Tasks.
https://dblp.org/rec/journals/pacmpl/ChenZW24,Design and Implementation of an Aspect-Oriented C Programming Language.
https://dblp.org/rec/journals/pacmpl/ChenZWTXML23,The Essence of Verilog: A Tractable and Tested Operational Semantics for Verilog.
https://dblp.org/rec/journals/pacmpl/ChenZXZDZ24,Allo: A Programming Model for Composable Accelerator Design.
https://dblp.org/rec/journals/pacmpl/ChiangMS23,Exact Recursive Probabilistic Programming.
https://dblp.org/rec/journals/pacmpl/ChiangYWX24,Staged Compilation with Module Functors.
https://dblp.org/rec/journals/pacmpl/ChidaT23,Repairing Regular Expressions for Extraction.
https://dblp.org/rec/journals/pacmpl/ChistikovMS22,Subcubic certificates for CFL reachability.
https://dblp.org/rec/journals/pacmpl/ChitreKP22,The road not taken: exploring alias analysis based optimizations missed by the compiler.
https://dblp.org/rec/journals/pacmpl/ChitreKP23,Rapid: Region-Based Pointer Disambiguation.
https://dblp.org/rec/journals/pacmpl/Chlipala21,Skipping the binder bureaucracy with mixed embeddings in a semantics course (functional pearl).
https://dblp.org/rec/journals/pacmpl/ChoiVSCA17,Kami: a platform for high-level parametric hardware specification and its modular verification.
https://dblp.org/rec/journals/pacmpl/ChoJRK23,Memento: A Framework for Detectable Recoverability in Persistent Memory.
https://dblp.org/rec/journals/pacmpl/ChoSLGD23,Stuttering for Free.
https://dblp.org/rec/journals/pacmpl/ChouA22,Compilation of dynamic sparse tensor algebra.
https://dblp.org/rec/journals/pacmpl/Choudhury22,Monadic and comonadic aspects of dependency analysis.
https://dblp.org/rec/journals/pacmpl/ChoudhuryEEW21,A graded dependent type system with a usage-aware semantics.
https://dblp.org/rec/journals/pacmpl/ChoudhuryK20,Recovering purity with comonads and capabilities.
https://dblp.org/rec/journals/pacmpl/ChoudhuryKS22,Symmetries in reversible programming: from symmetric rig groupoids to reversible programming languages.
https://dblp.org/rec/journals/pacmpl/ChouKA18,Format abstraction for sparse tensor algebra compilers.
https://dblp.org/rec/journals/pacmpl/ChowdharyN22,Fast shadow execution for debugging numerical errors using error free transformations.
https://dblp.org/rec/journals/pacmpl/ChristiansenDDH19,Dependently typed Haskell in industry (experience report).
https://dblp.org/rec/journals/pacmpl/CicconeP22,Fair termination of binary sessions.
https://dblp.org/rec/journals/pacmpl/ClairambaultGM18,Linearity in higher-order recursion schemes.
https://dblp.org/rec/journals/pacmpl/ClairambaultV20,Full abstraction for the quantum lambda-calculus.
https://dblp.org/rec/journals/pacmpl/ClairambaultVW19,Game semantics for quantum programming.
https://dblp.org/rec/journals/pacmpl/ClebschFDYWV17,Orca: GC and type system co-design for actor languages.
https://dblp.org/rec/journals/pacmpl/ClementC22,End-to-end translation validation for the halide language.
https://dblp.org/rec/journals/pacmpl/ClingerW20,Hygienic macro technology.
https://dblp.org/rec/journals/pacmpl/ClochardMP20,Deductive verification with ghost monitors.
https://dblp.org/rec/journals/pacmpl/CluneRMA20,Program equivalence for assisted grading of functional programs.
https://dblp.org/rec/journals/pacmpl/CoblenzAMS20,"Can advanced type systems be usable? An empirical study of ownership, assets, and typestate in Obsidian."
https://dblp.org/rec/journals/pacmpl/CockxA18,Elaborating dependent (co)pattern matching.
https://dblp.org/rec/journals/pacmpl/CockxTW21,The taming of the rew: a type theory with computational assumptions.
https://dblp.org/rec/journals/pacmpl/CogumbreiroSMSV17,Deadlock avoidance in parallel programs with futures: why parallel tasks should not wait for strangers.
https://dblp.org/rec/journals/pacmpl/Cohen18,Every data structure deserves lock-free memory reclamation.
https://dblp.org/rec/journals/pacmpl/CohenAL18,Object-oriented recovery for non-volatile memory.
https://dblp.org/rec/journals/pacmpl/CohenFL17,Efficient logging in non-volatile memory by exploiting coherency protocols.
https://dblp.org/rec/journals/pacmpl/CohenJ24,A Formalization of Core Why3 in Coq.
https://dblp.org/rec/journals/pacmpl/CohenJPR24,The Complex(ity) Landscape of Checking Infinite Descent.
https://dblp.org/rec/journals/pacmpl/CongA18,Handling delimited continuations with dependent types.
https://dblp.org/rec/journals/pacmpl/CongOER19,"Compiling with continuations, or without? whatever."
https://dblp.org/rec/journals/pacmpl/ConradoGKTZ23,Exploiting the Sparseness of Control-Flow and Call Graphs for Efficient and On-Demand Algebraic Program Analysis.
https://dblp.org/rec/journals/pacmpl/ConradoGL23,The Bounded Pathwidth of Control-Flow Graphs.
https://dblp.org/rec/journals/pacmpl/CorrensonNFW24,Finding ∀∃ Hyperbugs using Symbolic Execution.
https://dblp.org/rec/journals/pacmpl/CosmanJ17,Local refinement typing.
https://dblp.org/rec/journals/pacmpl/CourantL21,Verified code generation for the polyhedral model.
https://dblp.org/rec/journals/pacmpl/Cousot24,Calculational Design of [In]Correctness Transformational Program Logics by Abstract Interpretation.
https://dblp.org/rec/journals/pacmpl/CousotGR19,A²I: abstract² interpretation.
https://dblp.org/rec/journals/pacmpl/CoxNH20,The origins of Objective-C at PPI/Stepstone and its evolution at NeXT.
https://dblp.org/rec/journals/pacmpl/CraaijoVR24,libLISA: Instruction Discovery and Analysis on x86-64.
https://dblp.org/rec/journals/pacmpl/Crary19,Fully abstract module compilation.
https://dblp.org/rec/journals/pacmpl/CrichtonGK23,A Grounded Conceptual Model for Ownership Types in Rust.
https://dblp.org/rec/journals/pacmpl/CrichtonK24,"A Core Calculus for Documents: Or, Lambda: The Ultimate Document."
https://dblp.org/rec/journals/pacmpl/CrichtonK24a,Profiling Programming Language Learning.
https://dblp.org/rec/journals/pacmpl/CronburgG21,Permchecker: a toolchain for debugging memory managers with typestate.
https://dblp.org/rec/journals/pacmpl/CuiJO23,Greedy Implicit Bounded Quantification.
https://dblp.org/rec/journals/pacmpl/CuiWQZ24,Reward-Guided Synthesis of Intelligent Agents with Control Structures.
https://dblp.org/rec/journals/pacmpl/CutlerDEHHHHIKMMMRTW24,"Cedar: A New Language for Expressive, Fast, Safe, and Analyzable Authorization."
https://dblp.org/rec/journals/pacmpl/CutlerLD20,Denotational recurrence extraction for amortized analysis.
https://dblp.org/rec/journals/pacmpl/CutlerWNHGSP24,Stream Types.
https://dblp.org/rec/journals/pacmpl/CyphertBKR19,Refinement of path expressions for static analysis.
https://dblp.org/rec/journals/pacmpl/CyphertK24,Solvable Polynomial Ideals: The Ideal Reflection for Program Analysis.
https://dblp.org/rec/journals/pacmpl/DahlqvistK20,Semantics of higher-order probabilistic programs with conditioning.
https://dblp.org/rec/journals/pacmpl/DalozeTMMP18,Parallelization of dynamic languages: synchronizing built-in collections.
https://dblp.org/rec/journals/pacmpl/DalvandiD22,Implementing and verifying release-acquire transactional memory in C11.
https://dblp.org/rec/journals/pacmpl/DangJKD20,RustBelt meets relaxed memory.
https://dblp.org/rec/journals/pacmpl/Danielsson18,Up-to techniques using sized types.
https://dblp.org/rec/journals/pacmpl/DAntoniDGRRS24,Automatically Reducing Privilege for Access Control Policies.
https://dblp.org/rec/journals/pacmpl/DaraisLNH17,Abstracting definitional interpreters (functional pearl).
https://dblp.org/rec/journals/pacmpl/DaraisSLH20,A language for probabilistically oblivious computation.
https://dblp.org/rec/journals/pacmpl/DardinierL024,Hypra: A Deductive Program Verifier for Hyper Hoare Logic.
https://dblp.org/rec/journals/pacmpl/DardinierM24,Hyper Hoare Logic: (Dis-)Proving Program Hyperproperties.
https://dblp.org/rec/journals/pacmpl/DardinierMS22,Fractional resources in unbounded separation logic.
https://dblp.org/rec/journals/pacmpl/DardinierPM23,Verification-Preserving Inlining in Automatic Separation Logic Verifiers.
https://dblp.org/rec/journals/pacmpl/DarraghA20,Parsing with zippers (functional pearl).
https://dblp.org/rec/journals/pacmpl/Das0P18,Parallel complexity analysis with temporal session types.
https://dblp.org/rec/journals/pacmpl/DashKPS23,Affine Monads and Lazy Structures for Bayesian Programming.
https://dblp.org/rec/journals/pacmpl/DasTST23,Combining Functional and Automata Synthesis to Discover Causal Reactive Programs.
https://dblp.org/rec/journals/pacmpl/DasWH23,Probabilistic Resource-Aware Session Types.
https://dblp.org/rec/journals/pacmpl/David0Y20,Neural reverse engineering of stripped binaries using augmented control flow graphs.
https://dblp.org/rec/journals/pacmpl/DavisMS17,No-brainer CPS conversion (functional pearl).
https://dblp.org/rec/journals/pacmpl/DayGGM23,On the Expressive Power of String Constraints.
https://dblp.org/rec/journals/pacmpl/DegenbaevEHHLP18,Cross-component garbage collection.
https://dblp.org/rec/journals/pacmpl/DelawareSPYC19,Narcissus: correct-by-construction derivation of decoders and encoders from binary formats.
https://dblp.org/rec/journals/pacmpl/DengTPW24,A Case for Synthesis of Recursive Quantum Unitary Programs.
https://dblp.org/rec/journals/pacmpl/DesaiPQS18,Compositional programming and testing of dynamic distributed systems.
https://dblp.org/rec/journals/pacmpl/Devore-McDonald20,Mossad: defeating software plagiarism detection.
https://dblp.org/rec/journals/pacmpl/DevriesePP18,Parametricity versus the universal type.
https://dblp.org/rec/journals/pacmpl/DexterLC22,The essence of online data processing.
https://dblp.org/rec/journals/pacmpl/DeYoungMPD24,Parametric Subtyping for Structural Parametric Polymorphism.
https://dblp.org/rec/journals/pacmpl/DiasASP024,SparseAuto: An Auto-scheduler for Sparse Tensor Computations using Recursive Loop Nest Restructuring.
https://dblp.org/rec/journals/pacmpl/DiatchkiDGHHRSW24,Daedalus: Safer Document Parsing.
https://dblp.org/rec/journals/pacmpl/DiehlFS18,Generic zero-cost reuse for dependent types.
https://dblp.org/rec/journals/pacmpl/DietzA18,Software multiplexing: share your libraries and statically link them too.
https://dblp.org/rec/journals/pacmpl/DijkstraMN24,Functional Programming in Financial Markets (Experience Report).
https://dblp.org/rec/journals/pacmpl/DingL0TC24,MEA2: A Lightweight Field-Sensitive Escape Analysis with Points-to Calculation for Golang.
https://dblp.org/rec/journals/pacmpl/DingMKR24,CYCLE: Learning to Self-Refine the Code Generation.
https://dblp.org/rec/journals/pacmpl/DingQ24,Enhanced Enumeration Techniques for Syntax-Guided Synthesis of Bit-Vector Manipulations.
https://dblp.org/rec/journals/pacmpl/DingS17,GLORE: generalized loop redundancy elimination upon LER-notation.
https://dblp.org/rec/journals/pacmpl/DingZ23,Witnessability of Undecidable Problems.
https://dblp.org/rec/journals/pacmpl/DoengesABCNPPSX21,Petr4: formal foundations for p4 data planes.
https://dblp.org/rec/journals/pacmpl/DonaldsonELT17,Automated testing of graphics shader compilers.
https://dblp.org/rec/journals/pacmpl/DongolJR18,Transactions in relaxed memory architectures.
https://dblp.org/rec/journals/pacmpl/DOsualdoFD22,Proving hypersafety compositionally.
https://dblp.org/rec/journals/pacmpl/DOsualdoRV23,The Path to Durable Linearizability.
https://dblp.org/rec/journals/pacmpl/Downen24,Call-by-Unboxed-Value.
https://dblp.org/rec/journals/pacmpl/DownenAJE20,Kinds are calling conventions.
https://dblp.org/rec/journals/pacmpl/DragoiEOMN20,Testing consensus implementations using communication closure.
https://dblp.org/rec/journals/pacmpl/DragoiWZ20,Programming at the edge of synchrony.
https://dblp.org/rec/journals/pacmpl/DrechslerMSM18,Thread-safe reactive programming.
https://dblp.org/rec/journals/pacmpl/DrososSAM024,When Your Infrastructure Is a Buggy Program: Understanding Faults in Infrastructure as Code Ecosystems.
https://dblp.org/rec/journals/pacmpl/DSouzaYLP23,TASTyTruffle: Just-in-Time Specialization of Parametric Polymorphism.
https://dblp.org/rec/journals/pacmpl/DudenhefnerR19,Principality and approximation under dimensional bound.
https://dblp.org/rec/journals/pacmpl/DunfieldK19,Sound and complete bidirectional typechecking for higher-rank polymorphism with existentials and indexed types.
https://dblp.org/rec/journals/pacmpl/DuraRS21,JavaDL: automatically incrementalizing Java bug pattern detection.
https://dblp.org/rec/journals/pacmpl/DyerNFK22,Applying cognitive principles to model-finding output: the positive value of negative information.
https://dblp.org/rec/journals/pacmpl/EbnerURAM17,A metaprogramming framework for formal verification.
https://dblp.org/rec/journals/pacmpl/EhrhardPT18,"Measurable cones and stable, measurable functions: a model for probabilistic higher-order programming."
https://dblp.org/rec/journals/pacmpl/EichholzCKFM22,Dependently-typed data plane programming.
https://dblp.org/rec/journals/pacmpl/EilersD023,CommCSL: Proving Information Flow Security for Concurrent Programs using Abstract Commutativity.
https://dblp.org/rec/journals/pacmpl/EisenbergDWL21,An existential crisis resolved: type inference for first-class existential types.
https://dblp.org/rec/journals/pacmpl/EladPS24,An Infinite Needle in a Finite Haystack: Finding Infinite Counter-Models in Deductive Verification.
https://dblp.org/rec/journals/pacmpl/Elliott17,Generic functional parallel algorithms: scan and FFT.
https://dblp.org/rec/journals/pacmpl/Elliott17a,Compiling to categories.
https://dblp.org/rec/journals/pacmpl/Elliott18,The simple essence of automatic differentiation.
https://dblp.org/rec/journals/pacmpl/Elliott21,Symbolic and automatic differentiation of languages.
https://dblp.org/rec/journals/pacmpl/Elliott23,Timely Computation.
https://dblp.org/rec/journals/pacmpl/EllisZYS22,"Generic go to go: dictionary-passing, monomorphisation, and hybrid."
https://dblp.org/rec/journals/pacmpl/Elsman23,Garbage-Collection Safety for Region-Based Type-Polymorphic Programs.
https://dblp.org/rec/journals/pacmpl/Elsman24,Explicit Effects and Effect Constraints in ReML.
https://dblp.org/rec/journals/pacmpl/Elsman24a,Double-Ended Bit-Stealing for Algebraic Data Types.
https://dblp.org/rec/journals/pacmpl/ElsmanH23,Parallelism in a Region Inference Context.
https://dblp.org/rec/journals/pacmpl/ElsmanHAO18,Static interpretation of higher-order modules in Futhark: functional GPU programming in the large.
https://dblp.org/rec/journals/pacmpl/EmmiE18,"Sound, complete, and tractable linearizability monitoring for concurrent collections."
https://dblp.org/rec/journals/pacmpl/EmmiE19,Weak-consistency specification via visibility relaxation.
https://dblp.org/rec/journals/pacmpl/EmreBPSDH23,Aliasing Limits on Translating C to Safe Rust.
https://dblp.org/rec/journals/pacmpl/EmreSDH21,Translating C to safer Rust.
https://dblp.org/rec/journals/pacmpl/EmrichSCL22,Constraint-based type inference for FreezeML.
https://dblp.org/rec/journals/pacmpl/EneaGKM24,Model Checking Distributed Protocols in Must.
https://dblp.org/rec/journals/pacmpl/EneaK24,Scenario-Based Proofs for Concurrent Objects.
https://dblp.org/rec/journals/pacmpl/ErbsenPJLGPC24,Foundational Integration Verification of a Cryptographic Server.
https://dblp.org/rec/journals/pacmpl/EremondiGT22,Propositional equality for gradual dependently typed programming.
https://dblp.org/rec/journals/pacmpl/EremondiTG19,Approximate normalization for gradual dependent types.
https://dblp.org/rec/journals/pacmpl/EscotC22,Practical generic programming over a universe of native datatypes.
https://dblp.org/rec/journals/pacmpl/EssertelWR19,"Precise reasoning with structured time, structured heaps, and collective operations."
https://dblp.org/rec/journals/pacmpl/EymerDRL24,A Runtime System for Interruptible Query Processing: When Incremental Computing Meets Fine-Grained Parallelism.
https://dblp.org/rec/journals/pacmpl/EzudheenND0M18,Horn-ICE learning for synthesizing invariants and contracts.
https://dblp.org/rec/journals/pacmpl/FaesG18,Concurrency-aware object-oriented programming with roles.
https://dblp.org/rec/journals/pacmpl/FaggianPV24,"Higher Order Bayesian Networks, Exactly."
https://dblp.org/rec/journals/pacmpl/FangY24,Symbolic Execution for Quantum Error Correction Programs.
https://dblp.org/rec/journals/pacmpl/FarkaN0DF21,On algebraic abstractions for concurrent separation logics.
https://dblp.org/rec/journals/pacmpl/FarzanK18,Strategy synthesis for linear arithmetic games.
https://dblp.org/rec/journals/pacmpl/FarzanKP23,Stratified Commutativity in Verification Algorithms for Concurrent Programs.
https://dblp.org/rec/journals/pacmpl/FarzanKP24,Commutativity Simplifies Proofs of Parameterized Programs.
https://dblp.org/rec/journals/pacmpl/FarzanM24,Coarser Equivalences for Causal Concurrency.
https://dblp.org/rec/journals/pacmpl/FarzanV20,Reductions for safety proofs.
https://dblp.org/rec/journals/pacmpl/FavoniaAM23,An Order-Theoretic Analysis of Universe Polymorphism.
https://dblp.org/rec/journals/pacmpl/FeldmanISS20,Complexity and information in invariant inference.
https://dblp.org/rec/journals/pacmpl/FeldmanKE0NRS20,Proving highly-concurrent traversals correct.
https://dblp.org/rec/journals/pacmpl/FeldmanSSW21,Learning the boundary of inductive invariants.
https://dblp.org/rec/journals/pacmpl/FeldmanSSW22,Property-directed reachability as abstract interpretation in the monotone theory.
https://dblp.org/rec/journals/pacmpl/FelteyGSFS18,Collapsible contracts: fixing a pathology of gradual typing.
https://dblp.org/rec/journals/pacmpl/FengCSKKZ23,Lower Bounds for Possibly Divergent Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/FerdowsifardBPL21,LooPy: interactive program synthesis with control structures.
https://dblp.org/rec/journals/pacmpl/FerlesSD21,Verifying correct usage of context-free API protocols.
https://dblp.org/rec/journals/pacmpl/FerlesSKBD22,Synthesizing fine-grained synchronization protocols for implicit monitors.
https://dblp.org/rec/journals/pacmpl/FernandoJM19,Verifying safety and accuracy of approximate parallel programs via canonical sequentialization.
https://dblp.org/rec/journals/pacmpl/FerreiraMBCSJS24,Efficient Static Vulnerability Analysis for JavaScript with Multiversion Dependency Graphs.
https://dblp.org/rec/journals/pacmpl/FeserDS23,Inductive Program Synthesis Guided by Observational Program Similarity.
https://dblp.org/rec/journals/pacmpl/FeserM0S20,Deductive optimization of relational data storage.
https://dblp.org/rec/journals/pacmpl/FialaI0PS23,Leveraging Rust Types for Program Synthesis.
https://dblp.org/rec/journals/pacmpl/FioreS22,Formal metatheory of second-order abstract syntax.
https://dblp.org/rec/journals/pacmpl/FirstBG20,TacTok: semantics-aware proof synthesis.
https://dblp.org/rec/journals/pacmpl/FitzgibbonsPMTMA24,"RichWasm: Bringing Safe, Fine-Grained, Shared-Memory Interoperability Down to WebAssembly."
https://dblp.org/rec/journals/pacmpl/FlakeMGSD20,Verilog HDL and its ancestors and descendants.
https://dblp.org/rec/journals/pacmpl/FlanaganF20,The anchor verifier for blocking and non-blocking concurrent software.
https://dblp.org/rec/journals/pacmpl/FlattAAGFFGGKKMPPST23,Rhombus: A New Spin on Macros without All the Parentheses.
https://dblp.org/rec/journals/pacmpl/FlattDDKMSTZ19,Rebuilding racket on chez scheme (experience report).
https://dblp.org/rec/journals/pacmpl/FlorenceYTF19,"A calculus for Esterel: if can, can. if no can, no can."
https://dblp.org/rec/journals/pacmpl/FluckigerCYJHV20,Contextual dispatch for function specialization.
https://dblp.org/rec/journals/pacmpl/FluckigerSYGAV18,Correctness of speculative optimizations with dynamic deoptimization.
https://dblp.org/rec/journals/pacmpl/FonerZL18,Keep your laziness in check.
https://dblp.org/rec/journals/pacmpl/ForsterKR20,The weak call-by-value λ-calculus is reasonable for both time and space.
https://dblp.org/rec/journals/pacmpl/ForsterST24,Verified Extraction from Coq to OCaml.
https://dblp.org/rec/journals/pacmpl/FowlerASGT23,Special Delivery: Programming with Mailbox Types.
https://dblp.org/rec/journals/pacmpl/FowlerLMD19,Exceptional asynchronous session types: session types without tiers.
https://dblp.org/rec/journals/pacmpl/FoxSXBMPC23,A Verification Methodology for the Arm® Confidential Computing Architecture: From a Secure Specification to Safe Implementations.
https://dblp.org/rec/journals/pacmpl/FrankQL24,"Generating Well-Typed Terms That Are Not ""Useless""."
https://dblp.org/rec/journals/pacmpl/FromherzGHPRS19,"A verified, efficient embedding of a verifiable assembly language."
https://dblp.org/rec/journals/pacmpl/FromherzRSGMMR21,Steel: proof-oriented programming in a dependently typed concurrent separation logic.
https://dblp.org/rec/journals/pacmpl/FruminDHP22,A bunch of sessions: a propositions-as-sessions interpretation of bunched implications in channel-based concurrency.
https://dblp.org/rec/journals/pacmpl/FruminTB24,Modular Denotational Semantics for Effects with Guarded Interaction Trees.
https://dblp.org/rec/journals/pacmpl/FuKRS23,Proto-Quipper with Dynamic Lifting.
https://dblp.org/rec/journals/pacmpl/FuKT21,Label dependent lambda calculus and gradual typing.
https://dblp.org/rec/journals/pacmpl/GaherSJKD24,RefinedRust: A Type System for High-Assurance Verification of Rust Programs.
https://dblp.org/rec/journals/pacmpl/GaherSSJDKKD22,Simuliris: a separation logic framework for verifying concurrent program optimizations.
https://dblp.org/rec/journals/pacmpl/GancherSFSM23,A Core Calculus for Equational Proofs of Cryptographic Protocols.
https://dblp.org/rec/journals/pacmpl/Gao0W23,Discrete Adversarial Attack to Models of Code.
https://dblp.org/rec/journals/pacmpl/GaoBRSGLN020,Feedback-driven semi-supervised synthesis of program transformations.
https://dblp.org/rec/journals/pacmpl/GaoRSSGR21,APIfix: output-oriented program synthesis for combating breaking changes in libraries.
https://dblp.org/rec/journals/pacmpl/GaoZSCS23,Compositional Verification of Efficient Masking Countermeasures against Side-Channel Attacks.
https://dblp.org/rec/journals/pacmpl/GargHBM24,Bit Blasting Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/GargS22,Synthesizing code quality rules from examples.
https://dblp.org/rec/journals/pacmpl/GavazzoF23,Elements of Quantitative Rewriting.
https://dblp.org/rec/journals/pacmpl/GavranDM20,Interactive synthesis of temporal specifications from examples and natural language.
https://dblp.org/rec/journals/pacmpl/GeesonBDDS0W24,Mix Testing: Specifying and Testing ABI Compatibility of C/C++ Atomics Implementations.
https://dblp.org/rec/journals/pacmpl/GeislerYKHSS20,Geometry types for graphics programming.
https://dblp.org/rec/journals/pacmpl/GellerFB24,Indexed Types for a Statically Safe WebAssembly.
https://dblp.org/rec/journals/pacmpl/GencRXB19,"Dependence-aware, unbounded sound predictive race detection."
https://dblp.org/rec/journals/pacmpl/GengBBW24,IsoPredict: Dynamic Predictive Analysis for Detecting Unserializable Behaviors in Weakly Isolated Data Store Applications.
https://dblp.org/rec/journals/pacmpl/GeorgesGSTTHDB21,Efficient and provable local capability revocation using uninitialized capabilities.
https://dblp.org/rec/journals/pacmpl/GeorgesTB22,Le temps des cerises: efficient temporal stack safety on capability machines using directed capabilities.
https://dblp.org/rec/journals/pacmpl/GermaneM21,Newly-single and loving it: improving higher-order must-alias analysis with heap fragments.
https://dblp.org/rec/journals/pacmpl/GhalayiniK23,Explicit Refinement Types.
https://dblp.org/rec/journals/pacmpl/GheriY23,Hybrid Multiparty Session Types: Compositionality for Protocol Specification through Endpoint Projection.
https://dblp.org/rec/journals/pacmpl/GhicaLBP22,High-level effect handlers in C++.
https://dblp.org/rec/journals/pacmpl/GhilezanPPSY21,Precise subtyping for asynchronous multiparty sessions.
https://dblp.org/rec/journals/pacmpl/GhorbaniHHS23,Compiling Structured Tensor Algebra.
https://dblp.org/rec/journals/pacmpl/GhoshHMM20,Koord: a language for programming and verifying distributed robotics application.
https://dblp.org/rec/journals/pacmpl/GiannarakisSW21,ProbNV: probabilistic verification of network control planes.
https://dblp.org/rec/journals/pacmpl/GiarrussoSTBK20,Scala step-by-step: soundness for DOT with step-indexed logical relations in Iris.
https://dblp.org/rec/journals/pacmpl/GibbonsHHW18,Relational algebra by way of adjunctions.
https://dblp.org/rec/journals/pacmpl/GierczakMDA24,Gradually Typed Languages Should Be Vigilant!
https://dblp.org/rec/journals/pacmpl/GilbertCST19,Definitional proof-irrelevance without K.
https://dblp.org/rec/journals/pacmpl/GirolLB24,Quantitative Robustness for Vulnerability Assessment.
https://dblp.org/rec/journals/pacmpl/GiustoFLL23,A Partial Order View of Message-Passing Communication Models.
https://dblp.org/rec/journals/pacmpl/GladshteinZAAS24,Mechanised Hypersafety Proofs about Structured Data.
https://dblp.org/rec/journals/pacmpl/GlaunecKM23,Regular Expression Matching using Bit Vector Automata.
https://dblp.org/rec/journals/pacmpl/GlaunecKM24,HybridSA: GPU Acceleration of Multi-pattern Regex Matching using Bit Parallelism.
https://dblp.org/rec/journals/pacmpl/GleissenthallKB19,Pretend synchrony: synchronous verification of asynchronous distributed programs.
https://dblp.org/rec/journals/pacmpl/GoelDKKV21,What we eval in the shadows: a large-scale study of eval in R programs.
https://dblp.org/rec/journals/pacmpl/GoelJKFV21,Promises are made to be broken: migrating R to strict semantics.
https://dblp.org/rec/journals/pacmpl/GoelV19,"On the design, implementation, and use of laziness in R."
https://dblp.org/rec/journals/pacmpl/Goens0SAON23,Compound Memory Models.
https://dblp.org/rec/journals/pacmpl/GoharshadyHMM23,Algebro-geometric Algorithms for Template-Based Synthesis of Polynomial Programs.
https://dblp.org/rec/journals/pacmpl/GoharshadyLP24,Fast and Optimal Extraction for Sparse Equality Graphs.
https://dblp.org/rec/journals/pacmpl/GokhaleTT21,Automatic migration from synchronous to asynchronous JavaScript APIs.
https://dblp.org/rec/journals/pacmpl/GoldsteinFWP23,Reflecting on Random Generation.
https://dblp.org/rec/journals/pacmpl/GoldsteinP22,Parsing randomness.
https://dblp.org/rec/journals/pacmpl/GomesKMB17,Verifying strong eventual consistency in distributed systems.
https://dblp.org/rec/journals/pacmpl/Gomez-LondonoPS20,Do you have space for dessert? a verified space cost semantics for CakeML programs.
https://dblp.org/rec/journals/pacmpl/GoncharovMSTU23,Towards a Higher-Order Mathematical Operational Semantics.
https://dblp.org/rec/journals/pacmpl/GondelmanGNTB21,Distributed causal memory: modular specification and verification in higher-order distributed separation logic.
https://dblp.org/rec/journals/pacmpl/GondelmanHPTB23,Verifying Reliable Network Components in a Distributed Separation Logic with Dependent Separation Protocols.
https://dblp.org/rec/journals/pacmpl/GongCS0SWMPVNT18,An empirical study of the effect of source-level loop transformations on compiler stability.
https://dblp.org/rec/journals/pacmpl/GopinathanKS23,Mostly Automated Proof Repair for Verified Libraries.
https://dblp.org/rec/journals/pacmpl/GorinovaGS19,"Probabilistic programming with densities in SlicStan: efficient, flexible, and deterministic."
https://dblp.org/rec/journals/pacmpl/GorjiaraXD20,Satune: synthesizing efficient SAT encoders.
https://dblp.org/rec/journals/pacmpl/GorogiannisOS19,A true positives theorem for a static race detector.
https://dblp.org/rec/journals/pacmpl/GourdinBBMB23,Formally Verifying Optimizations with Block Simulations.
https://dblp.org/rec/journals/pacmpl/GrafJS20,Lower your guards: a compositional pattern-match coverage checker.
https://dblp.org/rec/journals/pacmpl/GratzerSB19,Implementing a modal dependent type theory.
https://dblp.org/rec/journals/pacmpl/GrechFFS17,Heaps don't lie: countering unsoundness with heap snapshots.
https://dblp.org/rec/journals/pacmpl/GrechKJBSS18,MadMax: surviving out-of-gas conditions in Ethereum smart contracts.
https://dblp.org/rec/journals/pacmpl/GrechLTS22,Elipmoc: advanced decompilation of Ethereum smart contracts.
https://dblp.org/rec/journals/pacmpl/GrechS17,P/Taint: unified points-to and taint analysis.
https://dblp.org/rec/journals/pacmpl/GreenbergB20,Executable formal semantics for the POSIX shell.
https://dblp.org/rec/journals/pacmpl/GreenmanF18,A spectrum of type soundness and performance.
https://dblp.org/rec/journals/pacmpl/GreenmanFD19,Complete monitors for gradual types.
https://dblp.org/rec/journals/pacmpl/GreenmanFD23,How Profilers Can Help Navigate Type Migration.
https://dblp.org/rec/journals/pacmpl/Gregersen0HTB24,Almost-Sure Termination by Guarded Refinement.
https://dblp.org/rec/journals/pacmpl/GregersenAHTB24,Asynchronous Probabilistic Couplings in Higher-Order Separation Logic.
https://dblp.org/rec/journals/pacmpl/GregersenBTB21,Mechanized logical relations for termination-insensitive noninterference.
https://dblp.org/rec/journals/pacmpl/GriesemerHKLTTW20,Featherweight go.
https://dblp.org/rec/journals/pacmpl/GriffinLSY20,TLC: temporal logic of distributed components.
https://dblp.org/rec/journals/pacmpl/GrodinNSH24,"Decalf: A Directed, Effectful Cost-Aware Logical Framework."
https://dblp.org/rec/journals/pacmpl/GrosserTFPKRSH20,Fast linear programming through transprecision computing on small and sparse data.
https://dblp.org/rec/journals/pacmpl/GrossmanAGMRSZ18,Online detection of effectively callback free objects with applications to smart contracts.
https://dblp.org/rec/journals/pacmpl/GrossmanTBASN24,Practical Verification of Smart Contracts using Memory Splitting.
https://dblp.org/rec/journals/pacmpl/GruetterFC24,Live Verification in an Interactive Proof Assistant.
https://dblp.org/rec/journals/pacmpl/GuanCYW0H24,Semantics Lifting for Syntactic Sugar.
https://dblp.org/rec/journals/pacmpl/GueneauHSSBD23,Melocoton: A Program Logic for Verified Interoperability Between OCaml and C.
https://dblp.org/rec/journals/pacmpl/GuilloudK24,Orthologic with Axioms.
https://dblp.org/rec/journals/pacmpl/GulwaniLRRR20,Structure interpretation of text formats.
https://dblp.org/rec/journals/pacmpl/GuoCYW0LCW20,Exposing cache timing side-channel leaks through out-of-order symbolic execution.
https://dblp.org/rec/journals/pacmpl/GuoJJZWJP20,Program synthesis by type-guided abstraction refinement.
https://dblp.org/rec/journals/pacmpl/GuptaRB20,Counterexample-guided correlation algorithm for translation validation.
https://dblp.org/rec/journals/pacmpl/GuriaFH23,Absynthe: Abstract Interpretation-Guided Synthesis.
https://dblp.org/rec/journals/pacmpl/GutsfeldMO21,Automata and fixpoints for asynchronous hyperproperties.
https://dblp.org/rec/journals/pacmpl/GutsfeldMO24,Deciding Asynchronous Hyperproperties for Recursive Programs.
https://dblp.org/rec/journals/pacmpl/GuTU23,Optimal CHC Solving via Termination Proofs.
https://dblp.org/rec/journals/pacmpl/HaasML22,CAAT: consistency as a theory.
https://dblp.org/rec/journals/pacmpl/HaasMML23,Static Analysis of Memory Models for SMT Encodings.
https://dblp.org/rec/journals/pacmpl/HackettH18,Parametric polymorphism and operational improvement.
https://dblp.org/rec/journals/pacmpl/HackettH19,Call-by-need is clairvoyant call-by-value.
https://dblp.org/rec/journals/pacmpl/HagedornLKQGS20,Achieving high-performance the functional way: a functional pearl on expressing high-performance optimizations as rewrite strategies.
https://dblp.org/rec/journals/pacmpl/HagueJL24,Parikh's Theorem Made Symbolic.
https://dblp.org/rec/journals/pacmpl/HainryP23,A General Noninterference Policy for Polynomial Time.
https://dblp.org/rec/journals/pacmpl/HajjJMH17,SAVI objects: sharing and virtuality incorporated.
https://dblp.org/rec/journals/pacmpl/HalalingaiahSMN24,The ART of Sharing Points-to Analysis: Reusing Points-to Analysis Results Safely and Efficiently.
https://dblp.org/rec/journals/pacmpl/Hamana17,How to prove your calculus is decidable: practical applications of second-order algebraic theories and computation.
https://dblp.org/rec/journals/pacmpl/HameerP19,Teaching the art of functional programming using automated grading (experience report).
https://dblp.org/rec/journals/pacmpl/HammondLPSBP24,An Axiomatic Basis for Computer Programming on the Relaxed Arm-A Architecture: The AxSL Logic.
https://dblp.org/rec/journals/pacmpl/HamzaVK19,System FR: formalized foundations for the stainless verifier.
https://dblp.org/rec/journals/pacmpl/HanceHPP23,Leaf: Modularity for Temporary Sharing in Separation Logic.
https://dblp.org/rec/journals/pacmpl/HandaKVR21,An order-aware dataflow model for parallel Unix pipelines.
https://dblp.org/rec/journals/pacmpl/HandleyVH20,Liquidate your assets: reasoning about resource usage in liquid Haskell.
https://dblp.org/rec/journals/pacmpl/HanerHT20,Assertion-based optimization of Quantum programs.
https://dblp.org/rec/journals/pacmpl/HarkKGK20,Aiming low is harder: induction for lower bounds in probabilistic program verification.
https://dblp.org/rec/journals/pacmpl/HaselwarterLMG024,Tachis: Higher-Order Separation Logic with Credits for Expected Costs.
https://dblp.org/rec/journals/pacmpl/HaudebourgGJ20,Regular language type inference with term rewriting.
https://dblp.org/rec/journals/pacmpl/HeGLTZSX23,A Container-Usage-Pattern-Based Context Debloating Approach for Object-Sensitive Pointer Analysis.
https://dblp.org/rec/journals/pacmpl/HeimD24,Solving Infinite-State Games via Acceleration.
https://dblp.org/rec/journals/pacmpl/HeMPWY22,Profile inference revisited.
https://dblp.org/rec/journals/pacmpl/HenriksenBP19,Derivative grammars: a symbolic approach to parsing with derivatives.
https://dblp.org/rec/journals/pacmpl/HenryHYCOAK21,Compilation of sparse array programming models.
https://dblp.org/rec/journals/pacmpl/HerklotzPRW21,Formal verification of high-level synthesis.
https://dblp.org/rec/journals/pacmpl/HerklotzW24,Hyperblock Scheduling for Verified High-Level Synthesis.
https://dblp.org/rec/journals/pacmpl/HeunenK22,Quantum information effects.
https://dblp.org/rec/journals/pacmpl/HeWCPRSSTWYZ21,A type system for extracting functional specifications from memory-safe imperative programs.
https://dblp.org/rec/journals/pacmpl/HewerH24,Quotient Haskell: Lightweight Quotient Types for All.
https://dblp.org/rec/journals/pacmpl/HeZWW24,VeriEQL: Bounded Equivalence Verification for Complex SQL Queries with Integrity Constraints.
https://dblp.org/rec/journals/pacmpl/Hickey20,A history of Clojure.
https://dblp.org/rec/journals/pacmpl/Hietala0HW021,A verified optimizer for Quantum circuits.
https://dblp.org/rec/journals/pacmpl/HillerstromLL20,Effects for efficiency: asymptotic speedup with first-class control.
https://dblp.org/rec/journals/pacmpl/HinrichsenBK20,Actris: session-type based reasoning in separation logic.
https://dblp.org/rec/journals/pacmpl/HinrichsenJK24,Multris: Functional Verification of Multiparty Message Passing in Separation Logic.
https://dblp.org/rec/journals/pacmpl/HirschC21,Giving semantics to program-counter labels via secure effects.
https://dblp.org/rec/journals/pacmpl/HirschG22,Pirouette: higher-order typed functional choreographies.
https://dblp.org/rec/journals/pacmpl/Hirschowitz19,Familial monads and structural operational semantics.
https://dblp.org/rec/journals/pacmpl/HirschT18,Strict and lazy semantics for effects: layering monads and comonads.
https://dblp.org/rec/journals/pacmpl/HoangTLS22,Random testing of a higher-order blockchain language (experience report).
https://dblp.org/rec/journals/pacmpl/HoeflichFS22,"Highly illogical, Kirk: spotting type mismatches in the large despite broken contracts, unsound types, and too many linters."
https://dblp.org/rec/journals/pacmpl/HoFP23,"Modularity, Code Specialization, and Zero-Cost Abstractions for Program Verification."
https://dblp.org/rec/journals/pacmpl/HoFP24,Sound Borrow-Checking for Rust via Symbolic Semantics.
https://dblp.org/rec/journals/pacmpl/HolikJLRV18,String constraints with concatenation and transducers solved efficiently.
https://dblp.org/rec/journals/pacmpl/HoltzenBM20,Scaling exact inference for discrete probabilistic programs.
https://dblp.org/rec/journals/pacmpl/HongA24,Recursive Program Synthesis using Paramorphisms.
https://dblp.org/rec/journals/pacmpl/HongL24,Regular Abstractions for Array Systems.
https://dblp.org/rec/journals/pacmpl/HongR24,"Don't Write, but Return: Replacing Output Parameters with Algebraic Data Types in C-to-Rust Translation."
https://dblp.org/rec/journals/pacmpl/HonoreKSS21,Much ADO about failures: a fault-aware model for compositional verification of strongly consistent distributed systems.
https://dblp.org/rec/journals/pacmpl/HonoreQKSKS24,AdoB: Bridging Benign and Byzantine Consensus with Atomic Distributed Objects.
https://dblp.org/rec/journals/pacmpl/HoP22,Aeneas: Rust verification by functional translation.
https://dblp.org/rec/journals/pacmpl/HornPC18,Incremental relational lenses.
https://dblp.org/rec/journals/pacmpl/HoushmandL19,Hamsaz: replication coordination analysis and synthesis.
https://dblp.org/rec/journals/pacmpl/HoushmandLV21,Grafs: declarative graph analytics.
https://dblp.org/rec/journals/pacmpl/HouW22,Logarithm and program testing.
https://dblp.org/rec/journals/pacmpl/Huang0CG19,Modular verification for almost-sure termination of probabilistic programs.
https://dblp.org/rec/journals/pacmpl/HuangO21,Distributing intersection and union types with splits and duality (functional pearl).
https://dblp.org/rec/journals/pacmpl/HuangP24,Compiling Conditional Quantum Gates without Using Helper Qubits.
https://dblp.org/rec/journals/pacmpl/HuangY23,Defunctionalization with Dependent Types.
https://dblp.org/rec/journals/pacmpl/HubersM23,"Generic Programming with Extensible Data Types: Or, Making Ad Hoc Extensible Data Types Less Ad Hoc."
https://dblp.org/rec/journals/pacmpl/HuiK20,APL since 1978.
https://dblp.org/rec/journals/pacmpl/HuL20,Undecidability of d<:  and its decidable fragments.
https://dblp.org/rec/journals/pacmpl/HungHZYHW19,Quantitative robustness analysis of quantum programs.
https://dblp.org/rec/journals/pacmpl/HuntSS23,Reconciling Shannon and Scott with a Lattice of Computable Information.
https://dblp.org/rec/journals/pacmpl/HuotGLSFSRSM24,GenSQL: A Probabilistic Programming System for Querying Generative Models of Database Tables.
https://dblp.org/rec/journals/pacmpl/IgarashiOST24,"Space-Efficient Polymorphic Gradual Typing, Mostly Parametric."
https://dblp.org/rec/journals/pacmpl/IgarashiSI17,On polymorphic gradual typing.
https://dblp.org/rec/journals/pacmpl/IgarashiTVW17,Gradual session types.
https://dblp.org/rec/journals/pacmpl/IkebuchiEC22,Certifying derivation of state machines from coroutines.
https://dblp.org/rec/journals/pacmpl/InalaS18,WebRelate: integrating web data with spreadsheets using examples.
https://dblp.org/rec/journals/pacmpl/Ingalls20,The evolution of Smalltalk: from Smalltalk-72 through Squeak.
https://dblp.org/rec/journals/pacmpl/IorgaDSW21,The semantics of shared memory in Intel CPU/FPGA systems.
https://dblp.org/rec/journals/pacmpl/IraciCHZ23,Validating IoT Devices with Rate-Based Session Types.
https://dblp.org/rec/journals/pacmpl/IsemannGBKG23,Don't Look UB: Exposing Sanitizer-Eliding Compiler Optimizations.
https://dblp.org/rec/journals/pacmpl/IshimweNN21,Dynaplex: analyzing program complexity using dynamically inferred recurrence relations.
https://dblp.org/rec/journals/pacmpl/Jaber20,SyTeCi: automating contextual equivalence for higher-order programs with references.
https://dblp.org/rec/journals/pacmpl/JaberWJKS21,QuickSilver: modeling and parameterized verification for distributed agreement-based systems.
https://dblp.org/rec/journals/pacmpl/Jacobs21,Paradoxes of probabilistic programming: and how to condition on events of measure zero with infinitesimal probabilities.
https://dblp.org/rec/journals/pacmpl/JacobsB23,Higher-Order Leak and Deadlock Free Locks.
https://dblp.org/rec/journals/pacmpl/JacobsBK22,Connectivity graphs: a method for proving deadlock freedom based on separation logic.
https://dblp.org/rec/journals/pacmpl/JacobsBK22a,Multiparty GV: functional multiparty session types with certified deadlock freedom.
https://dblp.org/rec/journals/pacmpl/JacobsDT22,Purity of an ST monad: full abstraction by semantically typed back-translation.
https://dblp.org/rec/journals/pacmpl/JacobsHK23,Dependent Session Protocols in Separation Logic from First Principles (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/JacobsHK24,Deadlock-Free Separation Logic: Linearity Yields Progress for Dependent Higher-Order Message Passing.
https://dblp.org/rec/journals/pacmpl/JacobsTD21,Fully abstract from static to gradual.
https://dblp.org/rec/journals/pacmpl/JacobsW23,Fast Coalgebraic Bisimilarity Minimization.
https://dblp.org/rec/journals/pacmpl/JagadeesanJR20,Pomsets with preconditions: a simple model of relaxed memory.
https://dblp.org/rec/journals/pacmpl/JamesGWDPJP20,Digging for fold: synthesis-aided API discovery for Haskell.
https://dblp.org/rec/journals/pacmpl/JangdaPBG19,Formal foundations of serverless computing.
https://dblp.org/rec/journals/pacmpl/JangGMP22,Mœbius: metaprogramming using contextual types: the stage where system f can pattern match on itself.
https://dblp.org/rec/journals/pacmpl/JangRLZK24,Modular Hardware Design of Pipelined Circuits with Hazards.
https://dblp.org/rec/journals/pacmpl/JayantiJYH24,"A Universal, Sound, and Complete Forward Reasoning Technique for Machine-Verified Proofs of Linearizability."
https://dblp.org/rec/journals/pacmpl/JeffreyRBCKP22,The leaky semicolon: compositional semantic dependencies for relaxed-memory concurrency.
https://dblp.org/rec/journals/pacmpl/JeonCKLOK24,Quantum Probabilistic Model Checking for Time-Bounded Properties.
https://dblp.org/rec/journals/pacmpl/JeongJCO17,Data-driven context-sensitivity for points-to analysis.
https://dblp.org/rec/journals/pacmpl/JeonJO18,Precise and scalable points-to analysis via data-driven context tunneling.
https://dblp.org/rec/journals/pacmpl/JeonLO20,Learning graph-based heuristics for pointer analysis without handcrafting application-specific features.
https://dblp.org/rec/journals/pacmpl/JeonO22,Return of CFA: call-site sensitivity can be superior to object sensitivity even for object-oriented programs.
https://dblp.org/rec/journals/pacmpl/JeonPO24,PL4XGL: A Programming Language Approach to Explainable Graph Learning.
https://dblp.org/rec/journals/pacmpl/JiaKLMZ22,Semantics for variational Quantum programming.
https://dblp.org/rec/journals/pacmpl/JiaKT21,A derivative-based parser generator for visibly Pushdown grammars.
https://dblp.org/rec/journals/pacmpl/Jiang24,Qubit Recycling Revisited.
https://dblp.org/rec/journals/pacmpl/JiaT24,V-Star: Learning Visibly Pushdown Grammars from Program Inputs.
https://dblp.org/rec/journals/pacmpl/JiKXH23,Improving Oracle-Guided Inductive Synthesis by Efficient Question Selection.
https://dblp.org/rec/journals/pacmpl/JinAZ23,Extensible Metatheory Mechanization via Family Polymorphism.
https://dblp.org/rec/journals/pacmpl/JinPR22,Neural architecture search using property guided synthesis.
https://dblp.org/rec/journals/pacmpl/JiS0H20,Guiding dynamic programing via structural probability for accelerating programming by example.
https://dblp.org/rec/journals/pacmpl/JiXXH21,Generalizable synthesis through unification.
https://dblp.org/rec/journals/pacmpl/JiZPXH24,Superfusion: Eliminating Intermediate Data Structures via Inductive Synthesis.
https://dblp.org/rec/journals/pacmpl/JochemsJR23,Higher-Order MSL Horn Constraints.
https://dblp.org/rec/journals/pacmpl/JohnsonKRD24,Automating Pruning in Top-Down Enumeration for Program Synthesis Problems with Monotonic Semantics.
https://dblp.org/rec/journals/pacmpl/JonesME20,"Partial type constructors: or, making ad hoc datatypes less ad hoc."
https://dblp.org/rec/journals/pacmpl/JonesR21,Intensional datatype refinement: with application to scalable verification of pattern-match safety.
https://dblp.org/rec/journals/pacmpl/JungDKD20,Stacked borrows: an aliasing model for Rust.
https://dblp.org/rec/journals/pacmpl/JungKPK24,Concurrent Immediate Reference Counting.
https://dblp.org/rec/journals/pacmpl/JungLCKPK23,Modular Verification of Safe Memory Reclamation in Concurrent Separation Logic.
https://dblp.org/rec/journals/pacmpl/JungLPRTDJ20,The future is ours: prophecy variables in separation logic.
https://dblp.org/rec/journals/pacmpl/JungmairEG24,HiPy: Extracting High-Level Semantics from Python Code for Data Processing.
https://dblp.org/rec/journals/pacmpl/KabahaD24,Verification of Neural Networks' Global Robustness.
https://dblp.org/rec/journals/pacmpl/KabirLL20,ιDOT: a DOT calculus with object initialization.
https://dblp.org/rec/journals/pacmpl/KahnH21,Automatic amortized resource analysis with the Quantum physicist's method.
https://dblp.org/rec/journals/pacmpl/KaiserZKRD18,Mtac2: typed tactics for backward reasoning in Coq.
https://dblp.org/rec/journals/pacmpl/KakarlaYB24,Diffy: Data-Driven Bug Finding for Configurations.
https://dblp.org/rec/journals/pacmpl/KakiESJ18,Safe replication through bounded concurrency verification.
https://dblp.org/rec/journals/pacmpl/KakiNNJ18,Alone together: compositional reasoning and inference for weak isolation.
https://dblp.org/rec/journals/pacmpl/KakiPSJ19,Mergeable replicated data types.
https://dblp.org/rec/journals/pacmpl/KalhaugeP18,Sound deadlock prediction.
https://dblp.org/rec/journals/pacmpl/KalitaMDRR22,Synthesizing abstract transformers.
https://dblp.org/rec/journals/pacmpl/KallasNSA20,DiffStream: differential output testing for stream processing programs.
https://dblp.org/rec/journals/pacmpl/KallasZAAL23,"Executing Microservice Applications on Serverless, Correctly."
https://dblp.org/rec/journals/pacmpl/KaminskiKCW17,Reliable and automatic composition of language extensions to C: the ableC extensible language framework.
https://dblp.org/rec/journals/pacmpl/KammarKS22,Fully abstract models for effectful λ-calculi via category-theoretic logical relations.
https://dblp.org/rec/journals/pacmpl/KanabarVAMNPZ23,PureCake: A Verified Compiler for a Lazy Functional Language.
https://dblp.org/rec/journals/pacmpl/KangLO24,Statistical Testing of Quantum Programs via Fixed-Point Amplitude Amplification.
https://dblp.org/rec/journals/pacmpl/KangO23,Modular Component-Based Quantum Circuit Synthesis.
https://dblp.org/rec/journals/pacmpl/KaposiKA19,Constructing quotient inductive-inductive types.
https://dblp.org/rec/journals/pacmpl/KarachaliasKPS21,Efficient compilation of algebraic effect handlers.
https://dblp.org/rec/journals/pacmpl/KarimovLOPVWW22,What's decidable about linear loops?
https://dblp.org/rec/journals/pacmpl/KatsumataMUW22,Flexible presentations of graded monads.
https://dblp.org/rec/journals/pacmpl/KatsuraKS23,Higher-Order Property-Directed Reachability.
https://dblp.org/rec/journals/pacmpl/KavanaghP24,Message-Observing Sessions.
https://dblp.org/rec/journals/pacmpl/Kavvos19,"Modalities, cohesion, and information flow."
https://dblp.org/rec/journals/pacmpl/KavvosMLD20,Recurrence extraction for functional programs through call-by-push-value.
https://dblp.org/rec/journals/pacmpl/KawamataUST24,Answer Refinement Modification: Refinement Type System for Algebraic Effects and Handlers.
https://dblp.org/rec/journals/pacmpl/KazerounianFM21,SimTyper: sound type inference for Ruby using type equality prediction.
https://dblp.org/rec/journals/pacmpl/KeidelE19,Sound and reusable components for abstract interpretation.
https://dblp.org/rec/journals/pacmpl/KeidelEH23,Combinator-Based Fixpoint Algorithms for Big-Step Abstract Interpreters.
https://dblp.org/rec/journals/pacmpl/KeidelPE18,Compositional soundness proofs of abstract interpreters.
https://dblp.org/rec/journals/pacmpl/KellisonH24,Numerical Fuzz: A Type System for Rounding Error Analysis.
https://dblp.org/rec/journals/pacmpl/KerinecMO23,Why Are Proofs Relevant in Proof-Relevant Models?
https://dblp.org/rec/journals/pacmpl/Kesner22,A fine-grained computational interpretation of Girard's intuitionistic proof-nets.
https://dblp.org/rec/journals/pacmpl/KetkarRCBR24,A Lightweight Polyglot Code Transformation Language.
https://dblp.org/rec/journals/pacmpl/KeuchelHLD22,Verified symbolic execution with Kripke specification monads (and no meta-programming).
https://dblp.org/rec/journals/pacmpl/KhyzhaL21,Taming x86-TSO persistency.
https://dblp.org/rec/journals/pacmpl/KidneyW21,Algebras for weighted search.
https://dblp.org/rec/journals/pacmpl/KidneyYW24,Algebraic Effects Meet Hoare Logic in Cubical Agda.
https://dblp.org/rec/journals/pacmpl/KimDR23,Unrealizability Logic.
https://dblp.org/rec/journals/pacmpl/KimHDR21,Semantics-guided synthesis.
https://dblp.org/rec/journals/pacmpl/KimLMBSN24,Unifying Static and Dynamic Intermediate Languages for Accelerator Generators.
https://dblp.org/rec/journals/pacmpl/KimVT20,Deterministic parallel fixpoint computation.
https://dblp.org/rec/journals/pacmpl/KincaidBCR19,Closed forms for numerical loops.
https://dblp.org/rec/journals/pacmpl/KincaidCBR18,Non-linear reasoning for invariant synthesis.
https://dblp.org/rec/journals/pacmpl/KincaidKZ23,When Less Is More: Consequence-Finding in a Weak Theory of Arithmetic.
https://dblp.org/rec/journals/pacmpl/King20,A history of the Groovy programming language.
https://dblp.org/rec/journals/pacmpl/KirisameSP22,Optimal heap limits for reducing browser memory use.
https://dblp.org/rec/journals/pacmpl/Kirkham0TM20,Foundations of empirical memory consistency testing.
https://dblp.org/rec/journals/pacmpl/KissFEJ19,Higher-order type-level programming in Haskell.
https://dblp.org/rec/journals/pacmpl/KissPW18,Generic deriving of generic traversals.
https://dblp.org/rec/journals/pacmpl/KjelstromP22,The decidability and complexity of interleaved bidirected Dyck reachability.
https://dblp.org/rec/journals/pacmpl/KjolstadKCLA17,The tensor algebra compiler.
https://dblp.org/rec/journals/pacmpl/KlimisCBNWD23,Taking Back Control in an Intermediate Representation for GPU Computing.
https://dblp.org/rec/journals/pacmpl/KlinkenbergBCHK24,Exact Bayesian Inference for Loopy Probabilistic Programs using Generating Functions.
https://dblp.org/rec/journals/pacmpl/KloppEP24,Object-Oriented Fixpoint Programming with Datalog.
https://dblp.org/rec/journals/pacmpl/KloppEP24a,A Typed Multi-level Datalog IR and Its Compiler Framework.
https://dblp.org/rec/journals/pacmpl/KnothWRHP20,Liquid resource types.
https://dblp.org/rec/journals/pacmpl/KobayashiTST23,HFL(Z) Validity Checking for Automated Program Verification.
https://dblp.org/rec/journals/pacmpl/KoCL22,Datatype-generic programming meets elaborator reflection.
https://dblp.org/rec/journals/pacmpl/Kodosky20,LabVIEW.
https://dblp.org/rec/journals/pacmpl/KoehlerGBGTS24,Guided Equality Saturation.
https://dblp.org/rec/journals/pacmpl/KoH18,An axiomatic basis for bidirectional programming.
https://dblp.org/rec/journals/pacmpl/KohlerEWMS20,Rethinking safe consistency in distributed object-oriented programming.
https://dblp.org/rec/journals/pacmpl/KokkeMP19,Better late than never: a fully-abstract semantics for classical processes.
https://dblp.org/rec/journals/pacmpl/Kokologiannakis18,Effective stateless model checking for C/C++ concurrency.
https://dblp.org/rec/journals/pacmpl/Kokologiannakis19,Effective lock handling in stateless model checking.
https://dblp.org/rec/journals/pacmpl/Kokologiannakis21,PerSeVerE: persistency semantics for verification under ext4.
https://dblp.org/rec/journals/pacmpl/Kokologiannakis22,"Truly stateless, optimal dynamic partial order reduction."
https://dblp.org/rec/journals/pacmpl/KokologiannakisLV23,Kater: Automating Weak Memory Model Metatheory and Consistency Checking.
https://dblp.org/rec/journals/pacmpl/KokologiannakisMV24,SPORE: Combining Symmetry and Partial Order Reduction.
https://dblp.org/rec/journals/pacmpl/KolesarPH22,Checking equivalence in a non-strict language.
https://dblp.org/rec/journals/pacmpl/KolosickNJWLGJS22,Isolation without taxation: near-zero-cost transitions for WebAssembly and SFI.
https://dblp.org/rec/journals/pacmpl/KongM20,StreamQL: a query language for processing streaming time series.
https://dblp.org/rec/journals/pacmpl/KoparkarRVKN21,Efficient tree-traversals: reconciling parallelism and dense data representations.
https://dblp.org/rec/journals/pacmpl/KopckeGS24,Descend: A Safe GPU Systems Programming Language.
https://dblp.org/rec/journals/pacmpl/KoppelGVSP22,Searching entangled program spaces.
https://dblp.org/rec/journals/pacmpl/KoppelKS22,Automatically deriving control-flow graph generators from operational semantics.
https://dblp.org/rec/journals/pacmpl/KoppelPS18,"One tool, many languages: language-parametric transformation with incremental parametric syntax."
https://dblp.org/rec/journals/pacmpl/KoppelSS18,Capturing the future by replaying the past (functional pearl).
https://dblp.org/rec/journals/pacmpl/KoutrisD23,The Fine-Grained Complexity of CFL Reachability.
https://dblp.org/rec/journals/pacmpl/KovachKGK23,Indexed Streams: A Formal Intermediate Representation for Fused Contraction Programs.
https://dblp.org/rec/journals/pacmpl/Kovacs20,Elaboration with first-class implicit function types.
https://dblp.org/rec/journals/pacmpl/Kovacs22,Staged compilation with two-level type theory.
https://dblp.org/rec/journals/pacmpl/Kovacs24,Closure-Free Functional Programming in a Two-Level Type Theory.
https://dblp.org/rec/journals/pacmpl/KovalKA23,CQS: A Formally-Verified Framework for Fair and Abortable Synchronization.
https://dblp.org/rec/journals/pacmpl/KrastevSLDS24,A Tensor Compiler with Automatic Data Packing for Simple and Efficient Fully Homomorphic Encryption.
https://dblp.org/rec/journals/pacmpl/KrauterRBSEB21,Persistent software transactional memory in Haskell.
https://dblp.org/rec/journals/pacmpl/KravchukKirilyukFIZA24,Persimmon: Nested Family Polymorphism with Extensible Variant Types.
https://dblp.org/rec/journals/pacmpl/KrawiecJKEEF22,"Provably correct, asymptotically efficient, higher-order reverse-mode automatic differentiation."
https://dblp.org/rec/journals/pacmpl/KrebbersJ0TKTCD18,"MoSeL: a general, extensible modal framework for interactive proofs in separation logic."
https://dblp.org/rec/journals/pacmpl/KrikavaMV19,Scala implicits are everywhere: a large-scale study of the use of Scala implicits in the wild.
https://dblp.org/rec/journals/pacmpl/KrishnaLPT24,On-the-Fly Static Analysis via Dynamic Bidirected Dyck Reachability.
https://dblp.org/rec/journals/pacmpl/KrishnaSW18,Go with the flow: compositional abstractions for concurrent data structures.
https://dblp.org/rec/journals/pacmpl/KristensenM17,Type test scripts for TypeScript testing.
https://dblp.org/rec/journals/pacmpl/KrogmeierLMM22,Synthesizing axiomatizations using logic learning.
https://dblp.org/rec/journals/pacmpl/KrogmeierM22,Learning formulas in finite variable logics.
https://dblp.org/rec/journals/pacmpl/KrogmeierM23,Languages with Decidable Learning: A Meta-theorem.
https://dblp.org/rec/journals/pacmpl/KSG22,Solving constrained Horn clauses modulo algebraic data types and recursive functions.
https://dblp.org/rec/journals/pacmpl/KuepperEGCSTWCC23,CryptOpt: Verified Compilation with Randomized Program Search for Cryptographic Primitives.
https://dblp.org/rec/journals/pacmpl/KumarS020,Shiftry: RNN inference in 2KB of RAM.
https://dblp.org/rec/journals/pacmpl/Kuncar018,Safety and conservativity of definitions in HOL and Isabelle/HOL.
https://dblp.org/rec/journals/pacmpl/KuperbergPP21,"Cyclic proofs, system t, and the power of contraction."
https://dblp.org/rec/journals/pacmpl/KurashigeJGBNIJ24,CCLemma: E-Graph Guided Lemma Discovery for Inductive Equational Proofs.
https://dblp.org/rec/journals/pacmpl/LabradaTTD22,Plausible sealing for gradual parametricity.
https://dblp.org/rec/journals/pacmpl/LaddadPMCH22,Katara: synthesizing CRDTs with verified lifting.
https://dblp.org/rec/journals/pacmpl/LagoFR21,Intersection types and (positive) almost-sure termination.
https://dblp.org/rec/journals/pacmpl/LagoG22,Effectful program distancing.
https://dblp.org/rec/journals/pacmpl/LagoG22a,A relational theory of effects and coeffects.
https://dblp.org/rec/journals/pacmpl/LagoG24,On Model-Checking Higher-Order Effectful Programs.
https://dblp.org/rec/journals/pacmpl/LagouvardosGTS20,"Precise static modeling of Ethereum ""memory""."
https://dblp.org/rec/journals/pacmpl/LagoVMY19,Intersection types and runtime errors in the pi-calculus.
https://dblp.org/rec/journals/pacmpl/LahavNOPV21,Making weak memory models fair.
https://dblp.org/rec/journals/pacmpl/LairdLBD24,SpEQ: Translation of Sparse Codes using Equivalences.
https://dblp.org/rec/journals/pacmpl/Lam0W0M020,A large-scale longitudinal study of flaky tests.
https://dblp.org/rec/journals/pacmpl/LambaTBBBL24,Cocoon: Static Information Flow Control in Rust.
https://dblp.org/rec/journals/pacmpl/Lampropoulos0P19,"Coverage guided, property based testing."
https://dblp.org/rec/journals/pacmpl/LampropoulosPP18,Generating good generators for inductive relations.
https://dblp.org/rec/journals/pacmpl/LanzingerWUD21,Scalability and precision by combining expressive type systems and deductive verification.
https://dblp.org/rec/journals/pacmpl/LaroseKBM23,AST vs. Bytecode: Interpreters in the Age of Meta-Compilation.
https://dblp.org/rec/journals/pacmpl/LarsenGHS23,P4R-Type: A Verified API for P4 Control Plane Programs.
https://dblp.org/rec/journals/pacmpl/LattuadaHCBSZHPH23,Verus: Verifying Rust Programs using Linear Ghost Types.
https://dblp.org/rec/journals/pacmpl/LaurelQSM23,Synthesizing Precise Static Analyzers for Automatic Differentiation.
https://dblp.org/rec/journals/pacmpl/LaurelYSM22,A dual number abstraction for static analysis of Clarke Jacobians.
https://dblp.org/rec/journals/pacmpl/LaurelYUNSM22,A general construction for abstract interpretation of higher-order automatic differentiation.
https://dblp.org/rec/journals/pacmpl/LaursenXM24,Reducing Static Analysis Unsoundness with Approximate Interpretation.
https://dblp.org/rec/journals/pacmpl/LazarekGFD21,How to evaluate blame for gradual types.
https://dblp.org/rec/journals/pacmpl/LazarekGFD23,"How to Evaluate Blame for Gradual Types, Part 2."
https://dblp.org/rec/journals/pacmpl/LazarekKSFD20,Does blame shifting work?
https://dblp.org/rec/journals/pacmpl/LeAFKN20,DynamiTe: dynamic termination and non-termination proofs.
https://dblp.org/rec/journals/pacmpl/LecoeurMD23,Program Reconditioning: Avoiding Undefined Behaviour When Finding and Reducing Compiler Bugs.
https://dblp.org/rec/journals/pacmpl/Lee0A18,On automatically proving the correctness of math.h implementations.
https://dblp.org/rec/journals/pacmpl/Lee21,Combining the top-down propagation and bottom-up enumeration for inductive program synthesis.
https://dblp.org/rec/journals/pacmpl/LeeC23,Inductive Synthesis of Structurally Recursive Functional Programs from Non-recursive Expressions.
https://dblp.org/rec/journals/pacmpl/LeeCKMSH23,Fair Operational Semantics.
https://dblp.org/rec/journals/pacmpl/LeeHJLRL18,Reconciling high-level optimizations and low-level code in LLVM.
https://dblp.org/rec/journals/pacmpl/LeeL23,Simple Reference Immutability for System F.
https://dblp.org/rec/journals/pacmpl/LeeRY23,Smoothness Analysis for Probabilistic Programs with Application to Optimised Variational Inference.
https://dblp.org/rec/journals/pacmpl/LeeSSO18,Automatic diagnosis and correction of logical errors for functional programming assignments.
https://dblp.org/rec/journals/pacmpl/LeeYRY20,Towards verified stochastic variational inference for probabilistic programs.
https://dblp.org/rec/journals/pacmpl/LeeZLYSB24,Qualifying System F<: Some Terms and Conditions May Apply.
https://dblp.org/rec/journals/pacmpl/LeGLGS24,Concurrent Data Structures Made Easy.
https://dblp.org/rec/journals/pacmpl/LegoupilRGPB24,Iris-MSWasm: Elucidating and Mechanising the Security Invariants of Memory-Safe WebAssembly.
https://dblp.org/rec/journals/pacmpl/LehmannGVJ23,Flux: Liquid Types for Rust.
https://dblp.org/rec/journals/pacmpl/LeiBSZ24,Context-Free Language Reachability via Skewed Tabulation.
https://dblp.org/rec/journals/pacmpl/LeijenL23,Tail Recursion Modulo Context: An Equational Approach.
https://dblp.org/rec/journals/pacmpl/LeiSDZ22,Taming transitive redundancy for context-free language reachability.
https://dblp.org/rec/journals/pacmpl/LeissaBHPMSMS18,AnyDSL: a partial evaluation framework for programming high-performance libraries.
https://dblp.org/rec/journals/pacmpl/LeiSTZ23,Recursive State Machine Guided Graph Folding for Context-Free Language Reachability.
https://dblp.org/rec/journals/pacmpl/LeLSS22,A Quantum interpretation of separating conjunction for local reasoning of Quantum programs based on separation logic.
https://dblp.org/rec/journals/pacmpl/Lemerre23,SSA Translation Is an Abstract Interpretation.
https://dblp.org/rec/journals/pacmpl/LeobasP20,Semiring optimizations: dynamic elision of expressions with identity and absorbing elements.
https://dblp.org/rec/journals/pacmpl/LepigreSMKDS22,VIP: verifying real-world C idioms with integer-pointer casts.
https://dblp.org/rec/journals/pacmpl/LeRVBDO22,Finding real bugs in big programs with incorrectness logic.
https://dblp.org/rec/journals/pacmpl/LesaniXKBCPZ22,C4: verified transactional objects.
https://dblp.org/rec/journals/pacmpl/LesbreL24,Compiling with Abstract Interpretation.
https://dblp.org/rec/journals/pacmpl/LewchenkoRGC19,Sequential programming for replicated data stores.
https://dblp.org/rec/journals/pacmpl/LewCSCM20,Trace types and denotational semantics for sound programmable inference in probabilistic languages.
https://dblp.org/rec/journals/pacmpl/LewGRM23,Probabilistic Programming with Stochastic Probabilities.
https://dblp.org/rec/journals/pacmpl/LewHSM23,ADEV: Sound Automatic Differentiation of Expected Values of Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/Li0H23,Lilac: A Modal Separation Logic for Conditional Probability.
https://dblp.org/rec/journals/pacmpl/LiA21,Deriving efficient program transformations from rewrite rules.
https://dblp.org/rec/journals/pacmpl/LiangF18,Progress of concurrent objects with partial methods.
https://dblp.org/rec/journals/pacmpl/LibertiLN021,Functorial semantics for partial theories.
https://dblp.org/rec/journals/pacmpl/LickerJ20,Duplo: a framework for OCaml post-link optimisation.
https://dblp.org/rec/journals/pacmpl/LiewCL24,Sound and Partially-Complete Static Analysis of Data-Races in GPU Programs.
https://dblp.org/rec/journals/pacmpl/LiHN23,Scallop: A Language for Neurosymbolic Programming.
https://dblp.org/rec/journals/pacmpl/LiHZQ24,Enhancing Static Analysis for Practical Bug Detection: An LLM-Integrated Approach.
https://dblp.org/rec/journals/pacmpl/LiL0SW024,Drowzee: Metamorphic Testing for Fact-Conflicting Hallucination Detection in Large Language Models.
https://dblp.org/rec/journals/pacmpl/LiLZCHPH22,Linear types for large-scale systems verification.
https://dblp.org/rec/journals/pacmpl/LimAGN21,An approach to generate correctly rounded math libraries for new floating point variants.
https://dblp.org/rec/journals/pacmpl/LimN22,One polynomial approximation to produce correctly rounded results of an elementary function for multiple representations and rounding modes.
https://dblp.org/rec/journals/pacmpl/LinCTWR23,Generating Proof Certificates for a Language-Agnostic Deductive Program Verifier.
https://dblp.org/rec/journals/pacmpl/LindenhoviusMZ19,Mixed linear and non-linear recursive types.
https://dblp.org/rec/journals/pacmpl/LinGP24,FlowCert: Translation Validation for Asynchronous Dataflow via Dynamic Fractional Permissions.
https://dblp.org/rec/journals/pacmpl/LinvillKW23,Verifying Indistinguishability of Privacy-Preserving Protocols.
https://dblp.org/rec/journals/pacmpl/LiPMLWPJ24,Quarl: A Learning-Based Quantum Circuit Optimizer.
https://dblp.org/rec/journals/pacmpl/LiS00X24,Boosting the Performance of Alias-Aware IFDS Analysis with CFL-Based Environment Transformers.
https://dblp.org/rec/journals/pacmpl/LiS23,Accelerating Fuzzing through Prefix-Guided Execution.
https://dblp.org/rec/journals/pacmpl/LiSZ22,Efficient algorithms for dynamic bidirected Dyck-reachability.
https://dblp.org/rec/journals/pacmpl/LiTMS18,Precision-guided context sensitivity for pointer analysis.
https://dblp.org/rec/journals/pacmpl/LiTS24,Boosting Compiler Testing by Injecting Real-World Code.
https://dblp.org/rec/journals/pacmpl/LiuBCR22,Verified tensor-program optimization via high-level scheduling rewrites.
https://dblp.org/rec/journals/pacmpl/LiuBCR24,A Verified Compiler for a Functional Tensor Language.
https://dblp.org/rec/journals/pacmpl/LiuCA0B23,Conflict-Driven Synthesis for Layout Engines.
https://dblp.org/rec/journals/pacmpl/LiuCSW24,Internalizing Indistinguishability with Dependent Types.
https://dblp.org/rec/journals/pacmpl/LiuFYSL22,Scalable linear invariant generation with Farkas' lemma.
https://dblp.org/rec/journals/pacmpl/LiuH22,SHARP: fast incremental context-sensitive pointer analysis for Java.
https://dblp.org/rec/journals/pacmpl/LiuLBGO20,A type-and-effect system for object initialization.
https://dblp.org/rec/journals/pacmpl/LiuLHX23,Initializing Global Objects: Time and Order.
https://dblp.org/rec/journals/pacmpl/LiuMGJRD24,Synthesizing Formal Semantics from Executable Interpreters.
https://dblp.org/rec/journals/pacmpl/LiuMM17,A volatile-by-default JVM for server applications.
https://dblp.org/rec/journals/pacmpl/LiuMOZB22,Bridging the semantic gap between qualitative and quantitative models of distributed systems.
https://dblp.org/rec/journals/pacmpl/LiuPRK0V20,Verifying replicated data types with typeclass refinements in Liquid Haskell.
https://dblp.org/rec/journals/pacmpl/LiuQGGU24,Program Analysis for Adaptive Data Analysis.
https://dblp.org/rec/journals/pacmpl/LiuRSGCKY20,Virtual timeline: a formal abstraction for verifying preemptive schedulers with temporal isolation.
https://dblp.org/rec/journals/pacmpl/LiuRXLKB24,Compiler Support for Sparse Tensor Convolutions.
https://dblp.org/rec/journals/pacmpl/LiuSCYK22,Compositional virtual timelines: verifying dynamic-priority partitions with algorithmic temporal isolation.
https://dblp.org/rec/journals/pacmpl/LiuSPTAB23,VMSL: A Separation Logic for Mechanised Robust Safety of Virtual Machines Communicating above FF-A.
https://dblp.org/rec/journals/pacmpl/LiuSZHL20,WATCHER: in-situ failure diagnosis.
https://dblp.org/rec/journals/pacmpl/LiuW23,Dependently-Typed Programming with Logical Equality Reflection.
https://dblp.org/rec/journals/pacmpl/LiuWYDZ22,Coverage-guided tensor compiler fuzzing with joint IR-pass mutation.
https://dblp.org/rec/journals/pacmpl/LiuZDBRZ24,UniSparse: An Intermediate Language for General Sparse Format Customization.
https://dblp.org/rec/journals/pacmpl/LiuZH23,Automated Ambiguity Detection in Layout-Sensitive Grammars.
https://dblp.org/rec/journals/pacmpl/LiVHPWH22,Verified compilation of Quantum oracles.
https://dblp.org/rec/journals/pacmpl/LivinskiiBR20,Random testing for C and C++ compilers with YARPGen.
https://dblp.org/rec/journals/pacmpl/LivinskiiBR23,Fuzzing Loop Optimizations in Compilers for C++ and Data-Parallel Languages.
https://dblp.org/rec/journals/pacmpl/LiVSZ23,"Type-Preserving, Dependence-Aware Guide Generation for Sound, Effective Amortized Probabilistic Inference."
https://dblp.org/rec/journals/pacmpl/LiW22,Program adverbs and Tlön embeddings.
https://dblp.org/rec/journals/pacmpl/LiWNN19,Improving bug detection via context-based code representation learning and attention-based neural networks.
https://dblp.org/rec/journals/pacmpl/LiWZ24,Compiling Probabilistic Programs for Variable Elimination with Information Flow.
https://dblp.org/rec/journals/pacmpl/LiXW21,Reasoning about the garden of forking paths.
https://dblp.org/rec/journals/pacmpl/LiY18,Algorithmic analysis of termination problems for quantum programs.
https://dblp.org/rec/journals/pacmpl/LiZ17,Transforming programs and tests in tandem for fault localization.
https://dblp.org/rec/journals/pacmpl/LiZ18,A derivation framework for dependent security label inference.
https://dblp.org/rec/journals/pacmpl/LiZDZW24,Efficient Bottom-Up Synthesis for Programs with Local Variables.
https://dblp.org/rec/journals/pacmpl/LiZP24,Mechanizing the CMP Abstraction for Parameterized Verification.
https://dblp.org/rec/journals/pacmpl/LiZR21,On the complexity of bidirected interleaved Dyck-reachability.
https://dblp.org/rec/journals/pacmpl/LiZR23,Single-Source-Single-Target Interleaved-Dyck Reachability via Integer Linear Programming.
https://dblp.org/rec/journals/pacmpl/LiZYDY020,Projection-based runtime assertions for testing and debugging Quantum programs.
https://dblp.org/rec/journals/pacmpl/LodingMP18,Foundations for natural proofs and quantifier instantiation.
https://dblp.org/rec/journals/pacmpl/LoehrW22,"Safe, modular packet pipeline programming."
https://dblp.org/rec/journals/pacmpl/LopesMMSYZSV17,DéjàVu: a map of code duplicates on GitHub.
https://dblp.org/rec/journals/pacmpl/LorenzenL22,Reference counting with frame limited reuse.
https://dblp.org/rec/journals/pacmpl/LorenzenLS23,FP²: Fully in-Place Functional Programming.
https://dblp.org/rec/journals/pacmpl/LorenzenLSL24,The Functional Essence of Imperative Binary Search Trees.
https://dblp.org/rec/journals/pacmpl/LorenzenWDEL24,Oxidizing OCaml with Modal Memory Management.
https://dblp.org/rec/journals/pacmpl/LuanYBS019,Aroma: code recommendation via structural code search.
https://dblp.org/rec/journals/pacmpl/LuB23,Grisette: Symbolic Compilation as a Functional Programming Library.
https://dblp.org/rec/journals/pacmpl/LubinC21,How statically-typed functional programmers write code.
https://dblp.org/rec/journals/pacmpl/LubinCOC20,Program sketching with live bidirectional evaluation.
https://dblp.org/rec/journals/pacmpl/LubinFYYC24,Equivalence by Canonicalization for Synthesis-Backed Refactoring.
https://dblp.org/rec/journals/pacmpl/LuHPLS24,Understanding and Finding Java Decompiler Bugs.
https://dblp.org/rec/journals/pacmpl/LuK24,Identifying and Correcting Programming Language Behavior Misconceptions.
https://dblp.org/rec/journals/pacmpl/LuKFT23,What Happens When Students Switch (Functional) Languages (Experience Report).
https://dblp.org/rec/journals/pacmpl/LutzeM24,Associated Effects: Flexible Abstractions for Effectful Programming.
https://dblp.org/rec/journals/pacmpl/LutzeMSB23,With or Without You: Programming with Effect Exclusion.
https://dblp.org/rec/journals/pacmpl/LuX19,Precision-preserving yet fast object-sensitive pointer analysis with partial context sensitivity.
https://dblp.org/rec/journals/pacmpl/MachiryKMEHH22,C to checked C by 3c.
https://dblp.org/rec/journals/pacmpl/MackayEND22,Necessity specifications for robustness.
https://dblp.org/rec/journals/pacmpl/MackayPAG20,Decidable subtyping for path dependent types.
https://dblp.org/rec/journals/pacmpl/MacQueenHR20,The history of Standard ML.
https://dblp.org/rec/journals/pacmpl/MadiotP22,A separation logic for heap space under garbage collection.
https://dblp.org/rec/journals/pacmpl/MadsenL20,Fixpoints for the masses: programming with first-class Datalog constraints.
https://dblp.org/rec/journals/pacmpl/MadsenLT17,A model for reasoning about JavaScript promises.
https://dblp.org/rec/journals/pacmpl/MadsenP20,Polymorphic types and effects with Boolean unification.
https://dblp.org/rec/journals/pacmpl/MadsenP21,Relational nullable types with Boolean unification.
https://dblp.org/rec/journals/pacmpl/MadsenPH23,Fast and Efficient Boolean Unification for Hindley-Milner-Style Type and Effect Systems.
https://dblp.org/rec/journals/pacmpl/MaengCL17,Alpaca: intermittent execution without checkpoints.
https://dblp.org/rec/journals/pacmpl/MaGLZ24,"Lexical Effect Handlers, Directly."
https://dblp.org/rec/journals/pacmpl/MaillardAAMHRT19,Dijkstra monads for all.
https://dblp.org/rec/journals/pacmpl/MaillardHRM20,The next 700 relational program logics.
https://dblp.org/rec/journals/pacmpl/MaillardLTT22,A reasonably gradual type theory.
https://dblp.org/rec/journals/pacmpl/MainaMFPWZ18,Synthesizing quotient lenses.
https://dblp.org/rec/journals/pacmpl/Mainland17,Better living through operational semantics: an optimizing compiler for radio protocols.
https://dblp.org/rec/journals/pacmpl/MajumdarN18,Why is random testing effective for partition tolerance bugs?
https://dblp.org/rec/journals/pacmpl/MajumdarS24,Positive Almost-Sure Termination: Complexity and Proof Rules.
https://dblp.org/rec/journals/pacmpl/MajumdarYZ20,Multiparty motion coordination: from choreographies to robotics programs.
https://dblp.org/rec/journals/pacmpl/MaLB24,ReLU Hull Approximation.
https://dblp.org/rec/journals/pacmpl/MalewskiGT21,Gradually structured data.
https://dblp.org/rec/journals/pacmpl/MalewskiMTT24,Gradual Indexed Inductive Types.
https://dblp.org/rec/journals/pacmpl/MamourasC24,Efficient Matching of Regular Expressions with Lookaround Assertions.
https://dblp.org/rec/journals/pacmpl/MamourasGLC24,Static Analysis for Checking the Disambiguation Robustness of Regular Expressions.
https://dblp.org/rec/journals/pacmpl/MangipudiCEVS23,Generalized Policy-Based Noninterference for Efficient Confidentiality-Preservation.
https://dblp.org/rec/journals/pacmpl/ManskyAN17,A verified messaging system.
https://dblp.org/rec/journals/pacmpl/ManskyD24,An Iris Instance for Verifying CompCert C Programs.
https://dblp.org/rec/journals/pacmpl/MarcozziTDC19,Compiler fuzzing: how much does it matter?
https://dblp.org/rec/journals/pacmpl/MargalitL21,Verifying observational robustness against a c11-style memory model.
https://dblp.org/rec/journals/pacmpl/MarianoCFDD22,Automated transpilation of imperative to functional code using neural-guided program synthesis.
https://dblp.org/rec/journals/pacmpl/MarianoRXNQFS19,Program synthesis with algebraic library specifications.
https://dblp.org/rec/journals/pacmpl/MarianoWPCD24,Control-Flow Deobfuscation using Trace-Informed Compositional Program Synthesis.
https://dblp.org/rec/journals/pacmpl/MarntirosianSOK20,Resolution as intersection subtyping via Modus Ponens.
https://dblp.org/rec/journals/pacmpl/MarshallO24,Functional Ownership through Fractional Uniqueness.
https://dblp.org/rec/journals/pacmpl/MastrangeloHN19,Casting about in the dark: an empirical study of cast operations in Java programs.
https://dblp.org/rec/journals/pacmpl/Materzok22,Generating circuits with generators.
https://dblp.org/rec/journals/pacmpl/MathiasenP21,The fine-grained and parallel complexity of andersen's pointer analysis.
https://dblp.org/rec/journals/pacmpl/MathurK018,What happens-after the first race? enhancing the predictive power of happens-before based dynamic race detection.
https://dblp.org/rec/journals/pacmpl/MathurMKMV20,Deciding memory safety for single-pass heap-manipulating programs.
https://dblp.org/rec/journals/pacmpl/MathurMV19,Decidable verification of uninterpreted programs.
https://dblp.org/rec/journals/pacmpl/MatsudaFWW23,Embedding by Unembedding.
https://dblp.org/rec/journals/pacmpl/MatsudaW20,Sparcl: a language for partially-invertible computation.
https://dblp.org/rec/journals/pacmpl/MatuteNBCC24,Syntactic Code Search with Sequence-to-Tree Matching: Supporting Syntactic Search with Incomplete Code Fragments.
https://dblp.org/rec/journals/pacmpl/MaWTKZ23,Quantifying and Mitigating Cache Side Channel Leakage with Differential Set.
https://dblp.org/rec/journals/pacmpl/MaY0M0023,Context Sensitivity without Contexts: A Cut-Shortcut Approach to Fast and Precise Pointer Analysis.
https://dblp.org/rec/journals/pacmpl/MayerKC18,Bidirectional evaluation with direct manipulation.
https://dblp.org/rec/journals/pacmpl/MazinanianKTD17,Understanding the use of lambda expressions in Java.
https://dblp.org/rec/journals/pacmpl/MazzaP21,Automatic differentiation in PCF.
https://dblp.org/rec/journals/pacmpl/MazzaPV18,"Polyadic approximations, fibrations and intersection types."
https://dblp.org/rec/journals/pacmpl/McIverMKK18,A new proof rule for almost-sure termination.
https://dblp.org/rec/journals/pacmpl/MehtaKGTV23,Reusing Just-in-Time Compiled Code.
https://dblp.org/rec/journals/pacmpl/MeierMKC23,Historia: Refuting Callback Reachability with Message-History Logics.
https://dblp.org/rec/journals/pacmpl/MeierRG18,Virtual machine design for parallel dynamic programming languages.
https://dblp.org/rec/journals/pacmpl/MelgrattiP17,Chaperone contracts for higher-order sessions.
https://dblp.org/rec/journals/pacmpl/Mellies19,Categorical combinatorics of scheduling and synchronization in game semantics.
https://dblp.org/rec/journals/pacmpl/MellZB24,Optimal Program Synthesis via Abstract Interpretation.
https://dblp.org/rec/journals/pacmpl/MeloRAP18,Inference of static semantics for incomplete C programs.
https://dblp.org/rec/journals/pacmpl/MelquiondM24,A Safe Low-Level Language for Computer Algebra and Its Formally Verified Compiler.
https://dblp.org/rec/journals/pacmpl/MemarianGDKRWS19,Exploring C semantics and pointer provenance.
https://dblp.org/rec/journals/pacmpl/MendisA18,goSLP: globally optimized superword level parallelism framework.
https://dblp.org/rec/journals/pacmpl/MenzHLG23,Compositional Security Definitions for Higher-Order Where Declassification.
https://dblp.org/rec/journals/pacmpl/MerigouxCP21,Catala: a programming language for the law.
https://dblp.org/rec/journals/pacmpl/MeuliSRH20,Enabling accuracy-aware Quantum compilers using symbolic resource estimation.
https://dblp.org/rec/journals/pacmpl/MevelJ21,Formal verification of a concurrent bounded queue in a weak memory model.
https://dblp.org/rec/journals/pacmpl/MevelJP20,Cosmo: a concurrent separation logic for multicore OCaml.
https://dblp.org/rec/journals/pacmpl/MeyerW19,Decoupling lock-free data structures from memory reclamation for static analysis.
https://dblp.org/rec/journals/pacmpl/MeyerW20,Pointer life cycle types for lock-free data structures with memory reclamation.
https://dblp.org/rec/journals/pacmpl/MeyerWW22,A concurrent program logic with a future and history.
https://dblp.org/rec/journals/pacmpl/MichaelGBJDDWPPVS23,MSWasm: Soundly Enforcing Memory-Safe Execution of Unsafe Code.
https://dblp.org/rec/journals/pacmpl/MichellandZG24,Abstract Interpreters: A Monadic Approach to Modular Verification.
https://dblp.org/rec/journals/pacmpl/MichelMYBCBRCL24,Distributions for Compositionally Differentiating Parametric Discontinuities.
https://dblp.org/rec/journals/pacmpl/MidtgaardJKNN17,Effect-driven QuickChecking of compilers.
https://dblp.org/rec/journals/pacmpl/MigeedP20,What is decidable about gradual types?
https://dblp.org/rec/journals/pacmpl/MikekZ24,SMT Theory Arbitrage: Approximating Unbounded Constraints using Bounded Theories.
https://dblp.org/rec/journals/pacmpl/Milanova20,FlowCFL: generalized type-based reachability analysis: graph reduction and equivalence of CFL-based and type-based reachability.
https://dblp.org/rec/journals/pacmpl/MilovancevicK23,Proving and Disproving Equivalence of Functional Programming Assignments.
https://dblp.org/rec/journals/pacmpl/MiltnerFPWZ18,Synthesizing bijective lenses.
https://dblp.org/rec/journals/pacmpl/MiltnerGLLRSTU19,On the fly synthesis of edit suggestions.
https://dblp.org/rec/journals/pacmpl/MiltnerLMFW23,Saggitarius: A DSL for Specifying Grammatical Domains.
https://dblp.org/rec/journals/pacmpl/MiltnerMFPWZ19,Synthesizing symmetric lenses.
https://dblp.org/rec/journals/pacmpl/MiltnerNBCD22,Bottom-up synthesis of recursive functional programs using angelic execution.
https://dblp.org/rec/journals/pacmpl/MiraldoS19,An efficient algorithm for type-safe structural diffing.
https://dblp.org/rec/journals/pacmpl/MishraJ22,Specification-guided component-based synthesis from effectful libraries.
https://dblp.org/rec/journals/pacmpl/MiyazakiSI19,Dynamic type inference for gradual Hindley-Milner typing.
https://dblp.org/rec/journals/pacmpl/MoellerJBDSSFS24,KATch: A Fast Symbolic Verifier for NetKAT.
https://dblp.org/rec/journals/pacmpl/MogelbergV19,Bisimulation as path type for guarded recursive types.
https://dblp.org/rec/journals/pacmpl/MogkDSM19,A fault-tolerant programming model for distributed interactive applications.
https://dblp.org/rec/journals/pacmpl/MohanLFKK23,Formal Abstractions for Packet Scheduling.
https://dblp.org/rec/journals/pacmpl/MoineCP23,A High-Level Separation Logic for Heap Space under Garbage Collection.
https://dblp.org/rec/journals/pacmpl/MoineWB24,DisLog: A Separation Logic for Disentanglement.
https://dblp.org/rec/journals/pacmpl/MoiseenkoKV22,Model checking for a multi-execution memory model.
https://dblp.org/rec/journals/pacmpl/MokhovLMD19,Selective applicative functors.
https://dblp.org/rec/journals/pacmpl/MokhovMJ18,Build systems à la carte.
https://dblp.org/rec/journals/pacmpl/MolerL20,A history of MATLAB.
https://dblp.org/rec/journals/pacmpl/MollerNT20,Detecting locations in JavaScript programs affected by breaking library changes.
https://dblp.org/rec/journals/pacmpl/MollerV20,Eliminating abstraction overhead of Java stream pipelines using ahead-of-time program optimization.
https://dblp.org/rec/journals/pacmpl/MonnierS20,Evolution of Emacs Lisp.
https://dblp.org/rec/journals/pacmpl/MontaguJ20,Stable relations and abstract interpretation of higher-order programs.
https://dblp.org/rec/journals/pacmpl/MoosbruggerSBK22,This is the moment for probabilistic loops.
https://dblp.org/rec/journals/pacmpl/MoraDPS23,Message Chains for Distributed System Verification.
https://dblp.org/rec/journals/pacmpl/MordidoS0V23,Parameterized Algebraic Protocols.
https://dblp.org/rec/journals/pacmpl/MoreiraOP21,VESPA: static profiling for binary optimization.
https://dblp.org/rec/journals/pacmpl/Morihata19,Lambda calculus with algebraic simplification for reduction parallelization by equational reasoning.
https://dblp.org/rec/journals/pacmpl/MorrisE17,Constrained type families.
https://dblp.org/rec/journals/pacmpl/MorrisM19,"Abstracting extensible data types: or, rows by any other name."
https://dblp.org/rec/journals/pacmpl/MoseleyNRSTVWX23,Derivative Based Nonbacktracking Real-World Regex Matching with Backtracking Semantics.
https://dblp.org/rec/journals/pacmpl/MoyDF24,Effectful Software Contracts.
https://dblp.org/rec/journals/pacmpl/MoyNTH21,Corpse reviver: sound and efficient gradual typing via contract verification.
https://dblp.org/rec/journals/pacmpl/MuduliR22,Satisfiability modulo fuzzing: a synergistic combination of SMT solving and fuzzing.
https://dblp.org/rec/journals/pacmpl/MuehlboeckT17,Sound gradual typing is nominally alive and well.
https://dblp.org/rec/journals/pacmpl/MuehlboeckT18,Empowering union and intersection types with integrated subtyping.
https://dblp.org/rec/journals/pacmpl/MuehlboeckT21,Transitioning from structural to nominal code with efficient gradual typing.
https://dblp.org/rec/journals/pacmpl/MukherjeeDBL20,Learning-based controlled concurrency testing.
https://dblp.org/rec/journals/pacmpl/MukherjeeKLR20,Dataflow-based pruning for speeding up superoptimization.
https://dblp.org/rec/journals/pacmpl/MukherjeeR24,Hydra: Generalizing Peephole Optimizations with Program Synthesis.
https://dblp.org/rec/journals/pacmpl/Mulder0K23,Beyond Backtracking: Connections in Fine-Grained Concurrent Separation Logic.
https://dblp.org/rec/journals/pacmpl/MulderK23,Proof Automation for Linearizability in Separation Logic.
https://dblp.org/rec/journals/pacmpl/MullenersJH24,Example-Based Reasoning about the Realizability of Polymorphic Programs.
https://dblp.org/rec/journals/pacmpl/Muller021,Modeling and analyzing evaluation cost of CUDA kernels.
https://dblp.org/rec/journals/pacmpl/Muller0SV23,Abstract Interpretation of Fixpoint Iterators with Applications to Neural Networks.
https://dblp.org/rec/journals/pacmpl/Muller22,Static prediction of parallel computation graphs.
https://dblp.org/rec/journals/pacmpl/MullerA018,Competitive parallelism: getting your priorities right.
https://dblp.org/rec/journals/pacmpl/MullerMSPV22,PRIMA: general and precise neural network certification via scalable convex hull approximations.
https://dblp.org/rec/journals/pacmpl/MullerSBO23,Back to Direct Style: Typed and Tight.
https://dblp.org/rec/journals/pacmpl/MullerSKNALA23,Responsive Parallelism with Synchronization.
https://dblp.org/rec/journals/pacmpl/MullerSSOB23,From Capabilities to Regions: Enabling Efficient Compilation of Lexical Effect Handlers.
https://dblp.org/rec/journals/pacmpl/MullerWA19,Fairness in responsive parallelism.
https://dblp.org/rec/journals/pacmpl/MullnerMK24,Strong Invariants Are Hard: On the Hardness of Strongest Polynomial Invariants for (Probabilistic) Programs.
https://dblp.org/rec/journals/pacmpl/MuraliPBLM22,Model-guided synthesis of inductive lemmas for FOL with least fixpoints.
https://dblp.org/rec/journals/pacmpl/MuraliPJM23,Complete First-Order Reasoning for Properties of Functional Programs.
https://dblp.org/rec/journals/pacmpl/MuraliRM24,Predictable Verification using Intrinsic Definitions.
https://dblp.org/rec/journals/pacmpl/MururuKCCPGP23,Beacons: An End-to-End Compiler Framework for Predicting and Utilizing Dynamic Loop Characteristics.
https://dblp.org/rec/journals/pacmpl/MuylderND24,Internal and Observational Parametricity for Cubical Agda.
https://dblp.org/rec/journals/pacmpl/NagarSCJ24,Automated Robustness Verification of Concurrent Data Structure Libraries against Relaxed Memory Models.
https://dblp.org/rec/journals/pacmpl/NagyKRD24,Automating Unrealizability Logic: Hoare-Style Proof Synthesis for Infinite Sets of Programs.
https://dblp.org/rec/journals/pacmpl/NaikSWNW24,TorchQL: A Programming Framework for Integrity Constraints in Machine Learning.
https://dblp.org/rec/journals/pacmpl/NandiWPBGT18,Functional programming for compiling and decompiling computer-aided design.
https://dblp.org/rec/journals/pacmpl/NandiWZWSASGT21,Rewrite rule inference using equality saturation.
https://dblp.org/rec/journals/pacmpl/Nanevski0DF19,Specifying concurrent programs in separation logic: morphisms and simulations.
https://dblp.org/rec/journals/pacmpl/NarayananS17,Symbolic conditioning of arrays in probabilistic programs.
https://dblp.org/rec/journals/pacmpl/NardelliBPCBV18,Julia subtyping: a rational reconstruction.
https://dblp.org/rec/journals/pacmpl/NazariHSRR23,Explainable Program Synthesis by Localizing Specifications.
https://dblp.org/rec/journals/pacmpl/NearDASGWSZSSS19,Duet: an expressive higher-order language and linear type system for statically enforcing differential privacy.
https://dblp.org/rec/journals/pacmpl/NelsonGPDBCCVLRRVWWK24,Forge: A Tool and Language for Teaching Formal Methods.
https://dblp.org/rec/journals/pacmpl/NewA18,Graduality from embedding-projection pairs.
https://dblp.org/rec/journals/pacmpl/NewcombAJBK20,Verifying and improving Halide's term rewriting system with program synthesis.
https://dblp.org/rec/journals/pacmpl/NewGL23,Gradual Typing for Effect Handlers.
https://dblp.org/rec/journals/pacmpl/NewJA20,Graduality and parametricity: together again for the first time.
https://dblp.org/rec/journals/pacmpl/NewLA19,Gradual type theory.
https://dblp.org/rec/journals/pacmpl/NguyenGTH18,Soft contract verification for higher-order stateful programs.
https://dblp.org/rec/journals/pacmpl/NguyenPWW22,Modular probabilistic models via algebraic effects.
https://dblp.org/rec/journals/pacmpl/NiePZKMG20,Unifying execution of imperative generators and declarative specifications.
https://dblp.org/rec/journals/pacmpl/NietoGRTB22,Modular verification of op-based CRDTs in separation logic.
https://dblp.org/rec/journals/pacmpl/NigamAS23,Modular Hardware Design with Timeline Types.
https://dblp.org/rec/journals/pacmpl/NikolaevR24,A Family of Fast and Memory Efficient Lock- and Wait-Free Reclamation.
https://dblp.org/rec/journals/pacmpl/NiuSGH22,A cost-aware logical framework.
https://dblp.org/rec/journals/pacmpl/NorlinderOBW24,Mark-Scavenge: Waiting for Trash to Take Itself Out.
https://dblp.org/rec/journals/pacmpl/NuytsVD17,Parametric quantifiers for dependent type theory.
https://dblp.org/rec/journals/pacmpl/OderskyBLBMS18,Simplicitly: foundations and applications of implicit function types.
https://dblp.org/rec/journals/pacmpl/OHearn20,Incorrectness logic.
https://dblp.org/rec/journals/pacmpl/OhmanN22,Visibility reasoning for concurrent snapshot algorithms.
https://dblp.org/rec/journals/pacmpl/OhoriUM18,Finitary polymorphism for optimizing type-directed compilation.
https://dblp.org/rec/journals/pacmpl/OmarA18,Reasonably programmable literal notation.
https://dblp.org/rec/journals/pacmpl/OmarVCH19,Live functional programming with typed holes.
https://dblp.org/rec/journals/pacmpl/OrchardCDR17,Verifying spatial properties of array computations.
https://dblp.org/rec/journals/pacmpl/OrchardLE19,Quantitative program reasoning with graded modal types.
https://dblp.org/rec/journals/pacmpl/OstermannBSSD22,"Introduction and elimination, left and right."
https://dblp.org/rec/journals/pacmpl/OttLCLB18,BioScript: programming safe chemistry on laboratories-on-a-chip.
https://dblp.org/rec/journals/pacmpl/OuD18,Towards understanding the costs of avoiding out-of-thin-air results.
https://dblp.org/rec/journals/pacmpl/OwensNKMT17,Verifying efficient function calls in CakeML.
https://dblp.org/rec/journals/pacmpl/OzkanMNBW18,Randomized testing of distributed systems with probabilistic guarantees.
https://dblp.org/rec/journals/pacmpl/OzkanMO19,Trace aware random testing for distributed systems.
https://dblp.org/rec/journals/pacmpl/PacakE23,Interactive Debugging of Datalog Programs.
https://dblp.org/rec/journals/pacmpl/PacakES20,A systematic approach to deriving incremental type checkers.
https://dblp.org/rec/journals/pacmpl/PadhiJPPGM18,FlashProfile: a framework for synthesizing data profiles.
https://dblp.org/rec/journals/pacmpl/PadhyeLSSV19,FuzzFactory: domain-specific fuzzing with waypoints.
https://dblp.org/rec/journals/pacmpl/PadonHLPSS18,Reducing liveness to safety in first-order logic.
https://dblp.org/rec/journals/pacmpl/PadonLSS17,Paxos made EPR: decidable reasoning about distributed protocols.
https://dblp.org/rec/journals/pacmpl/PadonWKMA22,Induction duality: primal-dual search for invariants.
https://dblp.org/rec/journals/pacmpl/Pailoor0SD20,Automated policy synthesis for system call sandboxing.
https://dblp.org/rec/journals/pacmpl/PailoorCWRGMCG023,Automated Detection of Under-Constrained Circuits in Zero-Knowledge Proofs.
https://dblp.org/rec/journals/pacmpl/PailoorWD24,Semantic Code Refactoring for Abstract Data Types.
https://dblp.org/rec/journals/pacmpl/PalmerFW24,Intensional Functions.
https://dblp.org/rec/journals/pacmpl/PalmerPSW20,Higher-order demand-driven symbolic evaluation.
https://dblp.org/rec/journals/pacmpl/PalmkvistCHB23,Statically Resolvable Ambiguity.
https://dblp.org/rec/journals/pacmpl/PalSTRZFWTN23,Equality Saturation Theory Exploration à la Carte.
https://dblp.org/rec/journals/pacmpl/PaltenghiP22,Bugs in Quantum computing platforms: an empirical study.
https://dblp.org/rec/journals/pacmpl/PanchekhaETK19,Modular verification of web page layout.
https://dblp.org/rec/journals/pacmpl/PanHXD19,Automatic repair of regular expressions.
https://dblp.org/rec/journals/pacmpl/PapadakisB0AH17,Seam: provably safe local edits on graphs.
https://dblp.org/rec/journals/pacmpl/ParadisDBV24,Synthetiq: Fast and Versatile Quantum Circuit Synthesis.
https://dblp.org/rec/journals/pacmpl/Paraskevopoulou19,Closure conversion is safe for space.
https://dblp.org/rec/journals/pacmpl/Paraskevopoulou21,Compositional optimizations for CertiCoq.
https://dblp.org/rec/journals/pacmpl/Paraskevopoulou21a,"Compiling with continuations, correctly."
https://dblp.org/rec/journals/pacmpl/ParkDR23,Synthesizing Specifications.
https://dblp.org/rec/journals/pacmpl/ParkerVH19,LWeb: information flow security for multi-tier web applications.
https://dblp.org/rec/journals/pacmpl/ParkHSR19,Polymorphic symmetric multiple dispatch with variance.
https://dblp.org/rec/journals/pacmpl/ParkinsonVVCDMB17,Project snowflake: non-blocking safe manual memory management in .NET.
https://dblp.org/rec/journals/pacmpl/ParkKMJLKK24,A Proof Recipe for Linearizability in Relaxed Memory Separation Logic.
https://dblp.org/rec/journals/pacmpl/ParkSNKSL23,HEaaN.MLIR: An Optimizing Compiler for Fast Ring-Based Homomorphic Encryption.
https://dblp.org/rec/journals/pacmpl/ParkWZS21,Generative type-aware mutation for testing SMT solvers.
https://dblp.org/rec/journals/pacmpl/ParkYLR23,Feature-Sensitive Coverage for Conformance Testing of Programming Language Implementations.
https://dblp.org/rec/journals/pacmpl/Parreaux20,The simple essence of algebraic subtyping: principal type inference with subtyping made easy (functional pearl).
https://dblp.org/rec/journals/pacmpl/ParreauxBFC24,When Subtyping Constraints Liberate: A Novel Type Inference Approach for First-Class Polymorphism.
https://dblp.org/rec/journals/pacmpl/ParreauxC22,MLstruct: principal type inference in a Boolean algebra of structural types.
https://dblp.org/rec/journals/pacmpl/ParreauxVSK18,Unifying analytic and statically-typed quasiquotes.
https://dblp.org/rec/journals/pacmpl/ParthasarathyDBMS24,Towards Trustworthy Automated Program Verifiers: Formally Validating Translations into an Intermediate Verification Language.
https://dblp.org/rec/journals/pacmpl/PaszkeJDVRJRM21,Getting to the point: index sets and parallelism-preserving autodiff for pointful array programming.
https://dblp.org/rec/journals/pacmpl/PatelKSW21,Verifying concurrent multicopy search structures.
https://dblp.org/rec/journals/pacmpl/PatrignaniMD21,On the semantic expressiveness of recursive types.
https://dblp.org/rec/journals/pacmpl/PattonRMBD24,Programming-by-Demonstration for Long-Horizon Robot Tasks.
https://dblp.org/rec/journals/pacmpl/PaulinoMCGMR23,AtomiS: Data-Centric Synchronization Made Practical.
https://dblp.org/rec/journals/pacmpl/PavlinovicSW21,Data flow refinement type inference.
https://dblp.org/rec/journals/pacmpl/Pavlogiannis20,"Fast, sound, and effectively complete dynamic race prediction."
https://dblp.org/rec/journals/pacmpl/PedrotT20,"The fire triangle: how to mix substitution, dependent elimination, and effects."
https://dblp.org/rec/journals/pacmpl/PedrotTFT19,A reasonably exceptional type theory.
https://dblp.org/rec/journals/pacmpl/PelegGIY20,Programming with a read-eval-synth loop.
https://dblp.org/rec/journals/pacmpl/PelenitsynBCTV21,Type stability in Julia: avoiding performance pathologies in JIT compilation.
https://dblp.org/rec/journals/pacmpl/PelsmaekerAPV22,Language-parametric static semantic code completion.
https://dblp.org/rec/journals/pacmpl/PeltonSELFHXCKLBCB24,Wavefront Threading Enables Effective High-Level Synthesis.
https://dblp.org/rec/journals/pacmpl/PengYLW24,SimuQ: A Framework for Programming Quantum Hamiltonian Simulation with Analog Compilation.
https://dblp.org/rec/journals/pacmpl/PereraNPW22,Linked visualisations via Galois dependencies.
https://dblp.org/rec/journals/pacmpl/Perez18,Fault tolerant functional reactive programming (functional pearl).
https://dblp.org/rec/journals/pacmpl/PerezN17,Testing and debugging functional reactive programming.
https://dblp.org/rec/journals/pacmpl/Pham0S024,Programmable MCMC with Soundly Composed Guide Programs.
https://dblp.org/rec/journals/pacmpl/PhamSH24,Robust Resource Bounds with Static Analysis and Bayesian Inference.
https://dblp.org/rec/journals/pacmpl/Phipps-CostinAG21,Solver-based gradual type migration.
https://dblp.org/rec/journals/pacmpl/PhippsCostinRGLHSPL23,Continuing WebAssembly with Effect Handlers.
https://dblp.org/rec/journals/pacmpl/PickardH21,Calculating dependently-typed compilers (functional pearl).
https://dblp.org/rec/journals/pacmpl/PickDG23,Psym: Efficient Symbolic Exploration of Distributed Systems.
https://dblp.org/rec/journals/pacmpl/PimpalkhareK24,Monotone Procedure Summarization via Vector Addition Systems and Inductive Potentials.
https://dblp.org/rec/journals/pacmpl/PitchanathanGG24,Falcon: A Scalable Analytical Cache Model.
https://dblp.org/rec/journals/pacmpl/PitchanathanUWH21,FPL: fast Presburger arithmetic through transprecision.
https://dblp.org/rec/journals/pacmpl/Pitts23,Locally Nameless Sets.
https://dblp.org/rec/journals/pacmpl/PodkopaevLV19,Bridging the gap between programming languages and hardware weak memory models.
https://dblp.org/rec/journals/pacmpl/PoesiaGFP17,Static placement of computation on heterogeneous devices.
https://dblp.org/rec/journals/pacmpl/PoesiaP20,Dynamic dispatch of context-sensitive optimizations.
https://dblp.org/rec/journals/pacmpl/PolikarpovaS19,Structuring the synthesis of heap-manipulating programs.
https://dblp.org/rec/journals/pacmpl/PolikarpovaSYIH20,Liquid information flow control.
https://dblp.org/rec/journals/pacmpl/PombrioKW17,Inferring scope through syntactic sugar.
https://dblp.org/rec/journals/pacmpl/Popescu24,Nominal Recursors as Epi-Recursors.
https://dblp.org/rec/journals/pacmpl/PopescuT23,Admissible Types-to-PERs Relativization in Higher-Order Logic.
https://dblp.org/rec/journals/pacmpl/PopescuXAAL21,Safer at any speed: automatic context-aware safety enhancement for Rust.
https://dblp.org/rec/journals/pacmpl/Porncharoenwase22,A formal foundation for symbolic evaluation with merging.
https://dblp.org/rec/journals/pacmpl/PorncharoenwasePT23,A Pretty Expressive Printer.
https://dblp.org/rec/journals/pacmpl/PorreFPB21,ECROs: building global scale systems from sequential code.
https://dblp.org/rec/journals/pacmpl/Pottier17,Visitors unchained.
https://dblp.org/rec/journals/pacmpl/PottierGJM24,Thunks and Debits in Separation Logic with Time Credits.
https://dblp.org/rec/journals/pacmpl/PoulsenR23,Hefty Algebras: Modular Elaboration of Higher-Order Algebraic Effects.
https://dblp.org/rec/journals/pacmpl/PoulsenRTKV18,Intrinsically-typed definitional interpreters for imperative languages.
https://dblp.org/rec/journals/pacmpl/PradelS18,DeepBugs: a learning approach to name-based bug detection.
https://dblp.org/rec/journals/pacmpl/PrinzL23,Merging Inductive Relations.
https://dblp.org/rec/journals/pacmpl/ProtzenkoZRRWBD17,Verified low-level programming embedded in F.
https://dblp.org/rec/journals/pacmpl/Puente17,Persistence for the masses: RRB-vectors in a systems language.
https://dblp.org/rec/journals/pacmpl/PujetT22,Observational equality: now for good.
https://dblp.org/rec/journals/pacmpl/PujetT23,Impredicative Observational Equality.
https://dblp.org/rec/journals/pacmpl/PulteFDFSS18,Simplifying ARM concurrency: multicopy-atomic axiomatic and operational models for ARMv8.
https://dblp.org/rec/journals/pacmpl/PulteMSMSK23,CN: Verifying Systems C Code with Separation-Logic Refinement Types.
https://dblp.org/rec/journals/pacmpl/Qian0SWW24,Semantic-Type-Guided Bug Finding.
https://dblp.org/rec/journals/pacmpl/QianKB21,Client-server sessions in linear logic.
https://dblp.org/rec/journals/pacmpl/QinOGHKS24,Shoggoth: A Formal Foundation for Strategic Rewriting.
https://dblp.org/rec/journals/pacmpl/QiuKSKHS24,LiDO: Linearizable Byzantine Distributed Objects with Refinement-Based Liveness Proofs.
https://dblp.org/rec/journals/pacmpl/QiuS17,Natural synthesis of provably-correct data-structure manipulations.
https://dblp.org/rec/journals/pacmpl/QuG019,Relational cost analysis for functional-imperative programs.
https://dblp.org/rec/journals/pacmpl/QuiringH24,Deriving with Derivatives: Optimizing Incremental Fixpoints for Higher-Order Flow Analysis.
https://dblp.org/rec/journals/pacmpl/QuiringRS22,Analyzing binding extent in 3CPS.
https://dblp.org/rec/journals/pacmpl/RaadBDO22,Concurrent incorrectness separation logic.
https://dblp.org/rec/journals/pacmpl/RaadDRLV19,On library correctness under weak memory consistency: specifying and verifying concurrent libraries under declarative consistency models.
https://dblp.org/rec/journals/pacmpl/RaadLV20,Persistent Owicki-Gries reasoning: a program logic for reasoning about persistent programs on Intel-x86.
https://dblp.org/rec/journals/pacmpl/RaadMV22,Extending Intel-x86 consistency and persistency: formalising the semantics of Intel-x86 memory types and non-temporal stores.
https://dblp.org/rec/journals/pacmpl/RaadV18,Persistence semantics for weak memory: integrating epoch persistency with the TSO memory model.
https://dblp.org/rec/journals/pacmpl/RaadVO24,Non-termination Proving at Scale.
https://dblp.org/rec/journals/pacmpl/RaadWNV20,Persistency semantics of the Intel-x86 architecture.
https://dblp.org/rec/journals/pacmpl/RaadWV19,Weak persistency semantics from the ground up: formalising the persistency semantics of ARMv8 and transactional models.
https://dblp.org/rec/journals/pacmpl/RadanneST20,Kindly bent to free us.
https://dblp.org/rec/journals/pacmpl/RadicekBG0Z18,Monadic refinements for relational cost analysis.
https://dblp.org/rec/journals/pacmpl/RadulPFJM23,You Only Linearize Once: Tangents Transpose to Gradients.
https://dblp.org/rec/journals/pacmpl/RaghothamanMZNS20,Provenance-guided synthesis of Datalog programs.
https://dblp.org/rec/journals/pacmpl/RahmaniNDJ19,CLOTHO: directed test generation for weakly consistent database systems.
https://dblp.org/rec/journals/pacmpl/RahmaniRGLMRST21,Multi-modal program inference: a marriage of pre-trained language models and component-based synthesis.
https://dblp.org/rec/journals/pacmpl/RajaniB024,A Modal Type Theory of Expected Cost in Higher-Order Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/RajaniG0021,A unifying type-theory for higher-order (amortized) cost analysis.
https://dblp.org/rec/journals/pacmpl/RakotonirinaBS24,Decision and Complexity of Dolev-Yao Hyperproperties.
https://dblp.org/rec/journals/pacmpl/RamaKS18,Refinement in object-sensitivity points-to analysis via slicing.
https://dblp.org/rec/journals/pacmpl/RamsayW24,Ill-Typed Programs Don't Evaluate.
https://dblp.org/rec/journals/pacmpl/Ramsey22,Beyond Relooper: recursive translation of unstructured control flow to structured control flow (functional pearl).
https://dblp.org/rec/journals/pacmpl/RandoneBIT24,Inference of Probabilistic Programs with Moment-Matching Gaussian Mixtures.
https://dblp.org/rec/journals/pacmpl/RaoGLWPGB23,Iris-Wasm: Robust and Modular Verification of WebAssembly Programs.
https://dblp.org/rec/journals/pacmpl/RapoportKHL17,A simple soundness proof for dependent object types.
https://dblp.org/rec/journals/pacmpl/RapoportL19,A path to DOT: formalizing fully path-dependent types.
https://dblp.org/rec/journals/pacmpl/RaskindBML24,VESTA: Power Modeling with Language Runtime Events.
https://dblp.org/rec/journals/pacmpl/Reid17,Who guards the guards? formal validation of the Arm v8-m architecture specification.
https://dblp.org/rec/journals/pacmpl/ReidLS20,History of coarrays and SPMD parallelism in Fortran.
https://dblp.org/rec/journals/pacmpl/ReitzFP24,"StarMalloc: Verifying a Modern, Hardened Memory Allocator."
https://dblp.org/rec/journals/pacmpl/RenauxVM23,Secure RDTs: Enforcing Access Control Policies for Offline Available JSON Data.
https://dblp.org/rec/journals/pacmpl/RendaDC23,Turaco: Complexity-Guided Data Sampling for Training Neural Surrogates of Programs.
https://dblp.org/rec/journals/pacmpl/RennelsC23,How Domain Experts Use an Embedded DSL.
https://dblp.org/rec/journals/pacmpl/RestPRVM22,Intrinsically-typed definitional interpreters à la carte.
https://dblp.org/rec/journals/pacmpl/RestS22,A completely unique account of enumeration.
https://dblp.org/rec/journals/pacmpl/ReynaudSY21,A practical mode system for recursive definitions.
https://dblp.org/rec/journals/pacmpl/RicciottiSPC17,Imperative functional programs that explain their work.
https://dblp.org/rec/journals/pacmpl/RiceAJJPA17,Detecting argument selection defects.
https://dblp.org/rec/journals/pacmpl/RichardsAT17,The VM already knew that: leveraging compile-time knowledge to optimize gradual typing.
https://dblp.org/rec/journals/pacmpl/RiggerS20,Finding bugs in database systems via query partitioning.
https://dblp.org/rec/journals/pacmpl/RinaldiwAM24,Pipelines and Beyond: Graph Types for ADTs with Futures.
https://dblp.org/rec/journals/pacmpl/RingerGST17,A solver-aided language for test input generation.
https://dblp.org/rec/journals/pacmpl/RiouxHOZ23,"A Bowtie for a Beast: Overloading, Eta Expansion, and Extensible Data Types in F⋈."
https://dblp.org/rec/journals/pacmpl/RiouxZ20,Computation focusing.
https://dblp.org/rec/journals/pacmpl/RitschelFHGS22,Can guided decomposition help end-users write larger block-based programs? a mobile robot experiment.
https://dblp.org/rec/journals/pacmpl/RitterH22,AnICA: analyzing inconsistencies in microarchitectural code analyzers.
https://dblp.org/rec/journals/pacmpl/RiveraFP24,Floating-Point TVPI Abstract Domain.
https://dblp.org/rec/journals/pacmpl/RiveraK22,Structural versus pipeline composition of higher-order functions (experience report).
https://dblp.org/rec/journals/pacmpl/RochaC21,Propositions-as-types and shared state.
https://dblp.org/rec/journals/pacmpl/RootYLGBK24,Compilation of Shape Operators on Sparse Arrays.
https://dblp.org/rec/journals/pacmpl/RoseB24,Modeling Dynamic (De)Allocations of Local Memory for Translation Validation.
https://dblp.org/rec/journals/pacmpl/RosemannMH21,An abstract interpretation for SPMD divergence on reducible control flow graphs.
https://dblp.org/rec/journals/pacmpl/Rossberg23,Mutually Iso-Recursive Subtyping.
https://dblp.org/rec/journals/pacmpl/Roth21,Study of the subtyping machine of nominal subtyping with variance.
https://dblp.org/rec/journals/pacmpl/RothG23,Fluent APIs in Functional Languages.
https://dblp.org/rec/journals/pacmpl/RouvoetAPKV20,Knowing when to ask: sound scheduling of name resolution in type checkers derived from declarative specifications.
https://dblp.org/rec/journals/pacmpl/RouvoetKV21,Intrinsically typed compilation with nameless labels.
https://dblp.org/rec/journals/pacmpl/RoyHSS20,A history of the Oz multiparadigm language.
https://dblp.org/rec/journals/pacmpl/RyanCLJ24,Accurate Data Race Prediction in the Linux Kernel through Sparse Fourier Learning.
https://dblp.org/rec/journals/pacmpl/SaadCSRM19,Bayesian synthesis of probabilistic programs for automatic data modeling.
https://dblp.org/rec/journals/pacmpl/SaadFRM20,Optimal approximate sampling from discrete probability distributions.
https://dblp.org/rec/journals/pacmpl/SabokSSW21,Probabilistic programming semantics for name generation.
https://dblp.org/rec/journals/pacmpl/Saffrich0024,Law and Order for Typestate with Borrowing.
https://dblp.org/rec/journals/pacmpl/SahaGLBB23,Obtaining Information Leakage Bounds via Approximate Model Counting.
https://dblp.org/rec/journals/pacmpl/SahebolamriBMM23,Bring Your Own Data Structures to Datalog.
https://dblp.org/rec/journals/pacmpl/SaiocLM24,Automated Verification of Parametric Channel-Based Process Communication.
https://dblp.org/rec/journals/pacmpl/SakkaS017,TreeFuser: a framework for analyzing and fusing general recursive tree traversals.
https://dblp.org/rec/journals/pacmpl/SakkasEGWJ22,Seq2Parse: neurosymbolic parse error repair.
https://dblp.org/rec/journals/pacmpl/SalvaneschiKSHE19,Language-integrated privacy-aware distributed queries.
https://dblp.org/rec/journals/pacmpl/SamakKR20,Synthesizing replacement classes.
https://dblp.org/rec/journals/pacmpl/SamanthaNNR17,Exploiting implicit beliefs to resolve sparse usage problem in usage-based specification mining.
https://dblp.org/rec/journals/pacmpl/SammlerGDL20,The high-level benefits of low-level sandboxing.
https://dblp.org/rec/journals/pacmpl/SammlerSSDKGD23,DimSum: A Decentralized Approach to Multi-language Semantics and Verification.
https://dblp.org/rec/journals/pacmpl/SampsonMM17,Static stages for heterogeneous programming.
https://dblp.org/rec/journals/pacmpl/SangEPRR20,Scalable and serializable networked multi-actor programming.
https://dblp.org/rec/journals/pacmpl/Sangiorgi22,From enhanced coinduction towards enhanced induction.
https://dblp.org/rec/journals/pacmpl/SanoKP23,Mechanizing Session-Types using a Structural View: Enforcing Linearity without Linearity.
https://dblp.org/rec/journals/pacmpl/SantoBP24,A Coq Mechanization of JavaScript Regular Expression Semantics.
https://dblp.org/rec/journals/pacmpl/SantolucitoZDSP17,Synthesizing configuration file specifications with association rule learning.
https://dblp.org/rec/journals/pacmpl/SantosMNWG18,JaVerT: JavaScript verification toolchain.
https://dblp.org/rec/journals/pacmpl/SantosMS24,Seneca: Taint-Based Call Graph Construction for Java Object Deserialization.
https://dblp.org/rec/journals/pacmpl/SantosMSG19,JaVerT 2.0: compositional symbolic execution for JavaScript.
https://dblp.org/rec/journals/pacmpl/SatoABGGH19,"Formal verification of higher-order probabilistic programs: reasoning about approximation, convergence, Bayesian inference, and optimization."
https://dblp.org/rec/journals/pacmpl/SatoN24,Multiverse Notebook: Shifting Data Scientists to Time Travelers.
https://dblp.org/rec/journals/pacmpl/ScalasY19,Less is more: multiparty session types revisited.
https://dblp.org/rec/journals/pacmpl/SchroerBKKM23,A Deductive Verification Infrastructure for Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/SchusterBO20,Compiling effect handlers in capability-passing style.
https://dblp.org/rec/journals/pacmpl/SchwartzKP24,Jmvx: Fast Multi-threaded Multi-version Execution and Record-Replay for Managed Languages.
https://dblp.org/rec/journals/pacmpl/SchwerterCJG21,Abstracting gradual typing moving forward: precise and space-efficient.
https://dblp.org/rec/journals/pacmpl/ScibiorKG18,Functional programming for modular Bayesian inference.
https://dblp.org/rec/journals/pacmpl/ScibiorKVSYCOMH18,Denotational validation of higher-order Bayesian inference.
https://dblp.org/rec/journals/pacmpl/ScottDPGD23,Trustworthy Runtime Verification via Bisimulation (Experience Report).
https://dblp.org/rec/journals/pacmpl/ScottLDN17,"Monadic composition for deterministic, parallel batch processing."
https://dblp.org/rec/journals/pacmpl/SeidelSCWJ17,Learning to blame: localizing novice type errors with data-driven diagnosis.
https://dblp.org/rec/journals/pacmpl/Sekiyama024,Higher-Order Model Checking of Effect-Handling Programs with Answer-Type Modification.
https://dblp.org/rec/journals/pacmpl/SekiyamaT21,CPS transformation with affine types for call-by-value implicit polymorphism.
https://dblp.org/rec/journals/pacmpl/SekiyamaTI20,Signature restriction for polymorphic algebraic effects.
https://dblp.org/rec/journals/pacmpl/SekiyamaU23,Temporal Verification with Answer-Effect Modification: Dependent Temporal Type-and-Effect System with Delimited Continuations.
https://dblp.org/rec/journals/pacmpl/SelakovicPKT18,Test generation for higher-order functions in dynamic languages.
https://dblp.org/rec/journals/pacmpl/SelaP22,Concurrent size.
https://dblp.org/rec/journals/pacmpl/SellamiGRCB24,Inference of Robust Reachability Constraints.
https://dblp.org/rec/journals/pacmpl/SelsamHM20,Sealing pointer-based optimizations behind pure functions.
https://dblp.org/rec/journals/pacmpl/SenanayakeHWWCK20,A sparse iteration space transformation framework for sparse tensor algebra.
https://dblp.org/rec/journals/pacmpl/SergeyNJ0TH19,Safer smart contract programming with Scilla.
https://dblp.org/rec/journals/pacmpl/SergeyWT18,Programming and proving with distributed protocols.
https://dblp.org/rec/journals/pacmpl/Serrano21,Of JavaScript AOT compilation performance.
https://dblp.org/rec/journals/pacmpl/SerranoF24,"The Functional, the Imperative, and the Sudoku: Getting Good, Bad, and Ugly to Get Along (Functional Pearl)."
https://dblp.org/rec/journals/pacmpl/SerranoHJV20,A quick look at impredicativity.
https://dblp.org/rec/journals/pacmpl/SewellMTKMAO23,Cakes That Bake Cakes: Dynamic Computation in CakeML.
https://dblp.org/rec/journals/pacmpl/ShadabGTEKLLS23,Inference of Resource Management Specifications.
https://dblp.org/rec/journals/pacmpl/ShahinC20,Automatic and efficient variability-aware lifting of functional programs.
https://dblp.org/rec/journals/pacmpl/ShaikhhaFVJ19,Efficient differentiable programming in a functional array-processing language.
https://dblp.org/rec/journals/pacmpl/ShaikhhaHSO22,Functional collection programming with semi-ring dictionaries.
https://dblp.org/rec/journals/pacmpl/ShajiiNBBA19,Seq: a high-performance language for bioinformatics.
https://dblp.org/rec/journals/pacmpl/ShapiraAD23,Deep Learning Robustness Verification for Few-Pixel Attacks.
https://dblp.org/rec/journals/pacmpl/SharifSHKJSZAMA19,ApproxHPVM: a portable compiler IR for accuracy-aware optimizations.
https://dblp.org/rec/journals/pacmpl/SharmaA24,Compilation of Qubit Circuits to Optimized Qutrit Circuits.
https://dblp.org/rec/journals/pacmpl/ShenKK23,HasChor: Functional Choreographic Programming for All (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/ShenZDAAGGGMSST21,Coarsening optimization for differentiable programming.
https://dblp.org/rec/journals/pacmpl/ShenZZLJW19,IntelliMerge: a refactoring-aware software merging technique.
https://dblp.org/rec/journals/pacmpl/ShermanMC19,Sound and robust solid modeling via exact real arithmetic and continuity.
https://dblp.org/rec/journals/pacmpl/ShermanMC21,𝜆ₛ: computable semantics for differentiable programming with higher-order functions and datatypes.
https://dblp.org/rec/journals/pacmpl/ShiHZML19,Reflection-aware static regression test selection.
https://dblp.org/rec/journals/pacmpl/ShiKGPL23,Etna: An Evaluation Platform for Property-Based Testing (Experience Report).
https://dblp.org/rec/journals/pacmpl/ShiSL19,FrAngel: component-based synthesis with control structures.
https://dblp.org/rec/journals/pacmpl/ShiWYZ22,Indexing the extended Dyck-CFL reachability for context-sensitive program analysis.
https://dblp.org/rec/journals/pacmpl/SieczkowskiPB23,A General Fine-Grained Reduction Theory for Effect Handlers.
https://dblp.org/rec/journals/pacmpl/SieczkowskiSSB24,The Essence of Generalized Algebraic Data Types.
https://dblp.org/rec/journals/pacmpl/SilverZ21,Dijkstra monads forever: termination-sensitive specifications for interaction trees.
https://dblp.org/rec/journals/pacmpl/SimonnetLS24,A Dependent Nominal Physical Type System for Static Analysis of Memory in Low Level Code.
https://dblp.org/rec/journals/pacmpl/SinghGPV19,An abstract domain for certifying neural networks.
https://dblp.org/rec/journals/pacmpl/SinghL23,An Operational Approach to Library Abstraction under Relaxed Memory Concurrency.
https://dblp.org/rec/journals/pacmpl/SinghPV18,A practical construction for decomposing numerical abstract domains.
https://dblp.org/rec/journals/pacmpl/SiraichiSCP19,Qubit allocation as a combination of subgraph isomorphism and token swapping.
https://dblp.org/rec/journals/pacmpl/SiscoBSH23,Loop Rerolling for Hardware Decompilation.
https://dblp.org/rec/journals/pacmpl/SistlaCR24,Weighted Context-Free-Language Ordered Binary Decision Diagrams.
https://dblp.org/rec/journals/pacmpl/Sivaramakrishnan20,Retrofitting parallelism onto OCaml.
https://dblp.org/rec/journals/pacmpl/SivaramanSCLM22,Data-driven lemma synthesis for interactive proofs.
https://dblp.org/rec/journals/pacmpl/SixBM20,Certified and efficient instruction scheduling: application to interlocked VLIW processors.
https://dblp.org/rec/journals/pacmpl/SjobergSWS19,DeepSEA: a language for certified system software.
https://dblp.org/rec/journals/pacmpl/SkorstengaardDB19,StkTokens: enforcing well-bracketed control flow and stack encapsulation using linear capabilities.
https://dblp.org/rec/journals/pacmpl/SmaragdakisGLTT21,"Symbolic value-flow static analysis: deep, precise, complete modeling of Ethereum smart contracts."
https://dblp.org/rec/journals/pacmpl/SmedingV23,Efficient Dual-Numbers Reverse AD via Well-Known Program Transformations.
https://dblp.org/rec/journals/pacmpl/SmedingV24,Efficient CHAD.
https://dblp.org/rec/journals/pacmpl/SmithA19,Synthesizing differentially private programs.
https://dblp.org/rec/journals/pacmpl/SmithHA19,Trace abstraction modulo probability.
https://dblp.org/rec/journals/pacmpl/SmithZ24,A Pure Demand Operational Semantics with Applications to Program Analysis.
https://dblp.org/rec/journals/pacmpl/SmolkaFHKKS20,Guarded Kleene algebra with tests: verification of uninterpreted programs in nearly linear time.
https://dblp.org/rec/journals/pacmpl/SolomonHKLMMPS20,History of Logo.
https://dblp.org/rec/journals/pacmpl/SomersK24,Verified Lock-Free Session Channels with Linking.
https://dblp.org/rec/journals/pacmpl/SongCKKKH20,CompCertM: CompCert with C-assembly linking and lightweight modular verification.
https://dblp.org/rec/journals/pacmpl/SongCLHSD23,Conditional Contextual Refinement.
https://dblp.org/rec/journals/pacmpl/SongFC24,Specification and Verification for Unrestricted Algebraic Effects and Handling.
https://dblp.org/rec/journals/pacmpl/SongL24,Refinement Composition Logic.
https://dblp.org/rec/journals/pacmpl/SongLO19,Automatic and scalable detection of logical errors in functional programming assignments.
https://dblp.org/rec/journals/pacmpl/SorensenSREWMD21,Specifying and testing GPU workgroup progress models.
https://dblp.org/rec/journals/pacmpl/SotiropoulosCMS20,A model for detecting faults in build specifications.
https://dblp.org/rec/journals/pacmpl/SotiropoulosCS24,API-Driven Program Synthesis for Testing Static Typing Implementations.
https://dblp.org/rec/journals/pacmpl/SousaDL18,Verified three-way program merge.
https://dblp.org/rec/journals/pacmpl/SozeauBFTW20,"Coq Coq correct! verification of type checking and erasure for Coq, in Coq."
https://dblp.org/rec/journals/pacmpl/SozeauM19,Equations reloaded: high-level dependently-typed functional programming and proving in Coq.
https://dblp.org/rec/journals/pacmpl/SpallMT20,Build scripts with perfect dependencies.
https://dblp.org/rec/journals/pacmpl/SpathAB17,IDEal: efficient and precise alias-aware dataflow analysis.
https://dblp.org/rec/journals/pacmpl/SpathAB19,"Context-, flow-, and field-sensitive data-flow analysis using synchronized Pushdown systems."
https://dblp.org/rec/journals/pacmpl/SpiesGSD24,Quiver: Guided Abductive Inference of Separation Logic Specifications in Coq.
https://dblp.org/rec/journals/pacmpl/SpiesGTJKBD22,Later credits: resourceful reasoning for the later modality.
https://dblp.org/rec/journals/pacmpl/SpiesKD21,Transfinite step-indexing for termination.
https://dblp.org/rec/journals/pacmpl/Spivey17,Faster coroutine pipelines.
https://dblp.org/rec/journals/pacmpl/SpiwackKBWE22,Linearly qualified types: generic inference for capabilities and uniqueness.
https://dblp.org/rec/journals/pacmpl/SrinivasanVR17,Model-assisted machine-code synthesis.
https://dblp.org/rec/journals/pacmpl/St-AmourFFYF17,Herbarium Racketensis: a stroll through the woods (functional pearl).
https://dblp.org/rec/journals/pacmpl/StampoulisC18,Prototyping a functional language using higher-order logic programming: a functional pearl on learning the ways of λProlog/Makam.
https://dblp.org/rec/journals/pacmpl/SteeleV21,LXM: better splittable pseudorandom number generators (and almost as fast).
https://dblp.org/rec/journals/pacmpl/SteinNCM19,Static analysis with demand-driven value refinement.
https://dblp.org/rec/journals/pacmpl/StievenartM20,Fuzzing channel-based concurrency runtimes using types and effects.
https://dblp.org/rec/journals/pacmpl/StjernaR24,A Constraint Solving Approach to Parikh Images of Regular Languages.
https://dblp.org/rec/journals/pacmpl/Stroustrup20,Thriving in a crowded and changing world: C++ 2006-2020.
https://dblp.org/rec/journals/pacmpl/StrydonckPD19,Linear capabilities for fully abstract compilation of separation-logic-verified code.
https://dblp.org/rec/journals/pacmpl/StuckiG21,A theory of higher-order subtyping with type intervals.
https://dblp.org/rec/journals/pacmpl/StumpJSM20,Strong functional pearl: Harper's regular-expression matcher in Cedille.
https://dblp.org/rec/journals/pacmpl/SuiCZ020,Flow2Vec: value-flow-based precise code embedding.
https://dblp.org/rec/journals/pacmpl/SundararajahSK22,UniRec: a unimodular-like framework for nested recursions and loops.
https://dblp.org/rec/journals/pacmpl/SunDO22,Compositional embeddings of domain-specific languages.
https://dblp.org/rec/journals/pacmpl/SundramTK24,Compiling Recurrences over Dense and Sparse Arrays.
https://dblp.org/rec/journals/pacmpl/SunFH22,Consistency-preserving propagation for SMT solving of concurrent program verification.
https://dblp.org/rec/journals/pacmpl/SunPX23,Synthesizing Efficient Memoization Algorithms.
https://dblp.org/rec/journals/pacmpl/SunSCC24,EasyBC: A Cryptography-Specific Language for Security Analysis of Block Ciphers against Differential Cryptanalysis.
https://dblp.org/rec/journals/pacmpl/SurbatovichJL19,I/O dependent idempotence bugs in intermittent systems.
https://dblp.org/rec/journals/pacmpl/SurbatovichL020,Towards a formal foundation of intermittent computing.
https://dblp.org/rec/journals/pacmpl/SurbatovichS0L23,A Type System for Safe Intermittent Computing.
https://dblp.org/rec/journals/pacmpl/SusagLHR22,Symbolic execution for randomized programs.
https://dblp.org/rec/journals/pacmpl/SuYWSXPWS21,Fully automated functional fuzzing of Android apps for detecting non-crashing logic bugs.
https://dblp.org/rec/journals/pacmpl/SvyatlovskiyML24,Compositional Semantics for Shared-Variable Concurrency.
https://dblp.org/rec/journals/pacmpl/SwamyRFMAM20,SteelCore: an extensible concurrent separation logic for effectful dependently typed programs.
https://dblp.org/rec/journals/pacmpl/Swasey0D17,Robust and compositional verification of object capability patterns.
https://dblp.org/rec/journals/pacmpl/SwierstraB19,A predicate transformer semantics for effects (functional pearl).
https://dblp.org/rec/journals/pacmpl/Syme20,The early history of F#.
https://dblp.org/rec/journals/pacmpl/SzaboBEV18,Incrementalizing lattice-based program analyses in Datalog.
https://dblp.org/rec/journals/pacmpl/TabareauTS18,Equivalences for free: univalent parametricity for effective transport.
https://dblp.org/rec/journals/pacmpl/TakashimaCM0P24,Crabtree: Rust API Test Synthesis Guided by Coverage and Type.
https://dblp.org/rec/journals/pacmpl/TaLKC18,Automated lemma synthesis in symbolic-heap separation logic.
https://dblp.org/rec/journals/pacmpl/TamirTMSHGS23,Counterexample Driven Quantifier Instantiations with Applications to Distributed Protocols.
https://dblp.org/rec/journals/pacmpl/TangHLM24,Soundly Handling Linearity.
https://dblp.org/rec/journals/pacmpl/TangHMSDFL23,Structural Subtyping as Parametric Polymorphism.
https://dblp.org/rec/journals/pacmpl/TanLMXS21,Making pointer analysis more precise by unleashing the power of selective context sensitivity.
https://dblp.org/rec/journals/pacmpl/TanMLDF22,SolType: refinement types for arithmetic overflow in solidity.
https://dblp.org/rec/journals/pacmpl/TanO24,A Case for First-Class Environments.
https://dblp.org/rec/journals/pacmpl/TaoNMT23,Architecture-Preserving Provable Repair of Deep Neural Networks.
https://dblp.org/rec/journals/pacmpl/TardieuGBCCE23,Reliable Actors with Retry Orchestration.
https://dblp.org/rec/journals/pacmpl/TassarottiH19,A separation logic for concurrent randomized programs.
https://dblp.org/rec/journals/pacmpl/TassarottiT23,Verified Density Compilation for a Probabilistic Programming Language.
https://dblp.org/rec/journals/pacmpl/Tejiscak20,A dependently typed calculus with pattern matching and erasure inference.
https://dblp.org/rec/journals/pacmpl/Ter-GabrielyanS19,Modular verification of heap reachability properties in separation logic.
https://dblp.org/rec/journals/pacmpl/ThakkarSPANR23,Mobius: Synthesizing Relational Queries with Recursive and Invented Predicates.
https://dblp.org/rec/journals/pacmpl/TheodoridisS24,"Refined Input, Degraded Output: The Counterintuitive World of Compiler Behavior."
https://dblp.org/rec/journals/pacmpl/Thiemann23,Intrinsically Typed Sessions with Callbacks (Functional Pearl).
https://dblp.org/rec/journals/pacmpl/ThiemannV20,Label-dependent session types.
https://dblp.org/rec/journals/pacmpl/ThijmBGW23,Modular Control Plane Verification via Temporal Invariants.
https://dblp.org/rec/journals/pacmpl/ThokairZMV23,Dynamic Race Detection with O(1) Samples.
https://dblp.org/rec/journals/pacmpl/ThomsonRWS22,Fusing industry and academia at GitHub (experience report).
https://dblp.org/rec/journals/pacmpl/ThyCGS23,Adventure of a Lifetime: Extract Method Refactoring for Rust.
https://dblp.org/rec/journals/pacmpl/TimanyB19,Mechanized relational verification of concurrent programs with continuations.
https://dblp.org/rec/journals/pacmpl/TimanyGB24,The Logical Essence of Well-Bracketed Control Flow.
https://dblp.org/rec/journals/pacmpl/TimanyGSHGNB24,Trillium: Higher-Order Concurrent and Distributed Separation Logic for Intensional Refinement.
https://dblp.org/rec/journals/pacmpl/TimanySKB18,A logical relation for monadic encapsulation of state: proving contextual equivalences in the presence of runST.
https://dblp.org/rec/journals/pacmpl/Titzer22,A fast in-place interpreter for WebAssembly.
https://dblp.org/rec/journals/pacmpl/TomanG19,Concerto: a framework for combined concrete and abstract interpretation.
https://dblp.org/rec/journals/pacmpl/TorczonAAVW24,Effects and Coeffects in Call-by-Push-Value.
https://dblp.org/rec/journals/pacmpl/ToroLT19,"Gradual parametricity, revisited."
https://dblp.org/rec/journals/pacmpl/TorrensOV24,On the Operational Theory of the CPS-Calculus: Towards a Theoretical Foundation for IRs.
https://dblp.org/rec/journals/pacmpl/ToschBBJM19,PlanAlyzer: assessing threats to the validity of online experiments.
https://dblp.org/rec/journals/pacmpl/TouzeauMMR19,Fast and exact analysis for LRU caches.
https://dblp.org/rec/journals/pacmpl/TrinhCJ20,Inter-theory dependency analysis for SMT string solvers.
https://dblp.org/rec/journals/pacmpl/TsukadaA24,Enriched Presheaf Model of Quantum FPC.
https://dblp.org/rec/journals/pacmpl/TsukadaU22,Software model-checking as cyclic-proof search.
https://dblp.org/rec/journals/pacmpl/TsukadaU24,Inductive Approach to Spacer.
https://dblp.org/rec/journals/pacmpl/Tunc0P023,Sound Dynamic Deadlock Prediction in Linear Time.
https://dblp.org/rec/journals/pacmpl/TuncA0K0P23,Optimal Reads-From Consistency Checking for C11-Style Memory Models.
https://dblp.org/rec/journals/pacmpl/TurcotteGKV20,"Designing types for R, empirically."
https://dblp.org/rec/journals/pacmpl/TuronovaHLSVV20,Regex matching with counting-set automata.
https://dblp.org/rec/journals/pacmpl/UgareBM023,Incremental Verification of Neural Networks.
https://dblp.org/rec/journals/pacmpl/UgareSM22,Proof transfer for fast certification of multiple approximate neural networks.
https://dblp.org/rec/journals/pacmpl/UgawaAM17,Model checking copy phases of concurrent copying garbage collection with various memory models.
https://dblp.org/rec/journals/pacmpl/UllrichM22,'do' unchained: embracing local imperativity in a purely functional language (functional pearl).
https://dblp.org/rec/journals/pacmpl/UnnoTGK23,Modular Primal-Dual Fixpoint Logic Solving for Temporal Verification.
https://dblp.org/rec/journals/pacmpl/Unruh19,Quantum relational Hoare logic.
https://dblp.org/rec/journals/pacmpl/UrbanCWZ20,Perfectly parallel fairness certification of neural networks.
https://dblp.org/rec/journals/pacmpl/VakarKS19,A domain theory for statistical probabilistic programming.
https://dblp.org/rec/journals/pacmpl/ValeMSKS22,Layered and object-based game semantics.
https://dblp.org/rec/journals/pacmpl/ValeSC23,A Compositional Theory of Linearizability.
https://dblp.org/rec/journals/pacmpl/ValeW0YS24,Compositionality and Observational Refinement for Linearizability with Crashes.
https://dblp.org/rec/journals/pacmpl/ValizadehB23,Search-Based Regular Expression Inference on a GPU.
https://dblp.org/rec/journals/pacmpl/ValliappanRC22,Normalization for fitch-style modal calculi.
https://dblp.org/rec/journals/pacmpl/VandenbogaerdeS24,Blame-Correct Support for Receiver Properties in Recursively-Structured Actor Contracts.
https://dblp.org/rec/journals/pacmpl/VandenbrouckeS20,PλωNK: functional probabilistic NetKAT.
https://dblp.org/rec/journals/pacmpl/VarshosazGJW23,Formal Specification and Testing for Reinforcement Learning.
https://dblp.org/rec/journals/pacmpl/VasilenkoVB22,Safe couplings: coupled refinement types.
https://dblp.org/rec/journals/pacmpl/VassenaDGCKJTS21,Automatically eliminating speculative leaks from cryptographic code with blade.
https://dblp.org/rec/journals/pacmpl/VassenaRGRS19,From fine- to coarse-grained dynamic information flow control and back.
https://dblp.org/rec/journals/pacmpl/VazouTCSNWJ18,Refinement reflection: complete verification with SMT.
https://dblp.org/rec/journals/pacmpl/VazouTH18,Gradual liquid type inference.
https://dblp.org/rec/journals/pacmpl/VeduradaN18,Identifying refactoring opportunities for replacing type code with subclass and state.
https://dblp.org/rec/journals/pacmpl/VenevGDV24,Modular Synthesis of Efficient Quantum Uncomputation.
https://dblp.org/rec/journals/pacmpl/VerbruggenLG21,Semantic programming by example with pre-trained models.
https://dblp.org/rec/journals/pacmpl/VesgaRGC24,Sensitivity by Parametricity.
https://dblp.org/rec/journals/pacmpl/VezzosiM019,Cubical agda: a dependently typed programming language with univalence and higher inductive types.
https://dblp.org/rec/journals/pacmpl/VieringHEZ21,A multiparty session typing discipline for fault-tolerant event-driven distributed programming.
https://dblp.org/rec/journals/pacmpl/Vilhena0VR24,Extending the C/C++ Memory Model with Inline Assembly.
https://dblp.org/rec/journals/pacmpl/VilhenaP21,A separation logic for effect handlers.
https://dblp.org/rec/journals/pacmpl/VilhenaPJ20,Spy game: verifying a local generic solver in Iris.
https://dblp.org/rec/journals/pacmpl/VindumB23,Spirea: A Mechanized Concurrent Separation Logic for Weak Persistent Memory.
https://dblp.org/rec/journals/pacmpl/VoichickLRH23,Qunity: A Unified Language for Quantum and Classical Computing.
https://dblp.org/rec/journals/pacmpl/VuCGGH21,Reconciling optimization with secure compilation.
https://dblp.org/rec/journals/pacmpl/VukoticRV19,Asphalion: trustworthy shielding against Byzantine faults.
https://dblp.org/rec/journals/pacmpl/WagnerE024,Realistic Realizability: Specifying ABIs You Can Count On.
https://dblp.org/rec/journals/pacmpl/WagnerJS23,Enabling Bounded Verification of Doubly-Unbounded Distributed Agreement-Based Systems via Bounded Regions.
https://dblp.org/rec/journals/pacmpl/WaliaNCTS19,From high-level inference algorithms to efficient code.
https://dblp.org/rec/journals/pacmpl/WandCGC18,Contextual equivalence for a probabilistic language with continuous random variables and recursion.
https://dblp.org/rec/journals/pacmpl/Wang024,Rustlantis: Randomized Differential Testing of the Rust Compiler.
https://dblp.org/rec/journals/pacmpl/WangAPJ22,Interval universal approximation for neural networks.
https://dblp.org/rec/journals/pacmpl/WangCB18,Speeding up symbolic reasoning for relational queries.
https://dblp.org/rec/journals/pacmpl/WangCMH19,Certifying graph-manipulating C programs via localizations within data structures.
https://dblp.org/rec/journals/pacmpl/WangDS17,Synthesis of data completion scripts using finite tree automata.
https://dblp.org/rec/journals/pacmpl/WangDS18,Program synthesis using abstraction refinement.
https://dblp.org/rec/journals/pacmpl/WangFBCD20,Visualization by example.
https://dblp.org/rec/journals/pacmpl/WangFCDX20,Proving expected sensitivity of probabilistic programs with randomized variable-dependent termination time.
https://dblp.org/rec/journals/pacmpl/WangGW23,Synthesizing MILP Constraints for Efficient and Robust Optimization.
https://dblp.org/rec/journals/pacmpl/WangH19,Type-guided worst-case input generation.
https://dblp.org/rec/journals/pacmpl/WangKH20,Raising expectations: automating expected cost analysis with types.
https://dblp.org/rec/journals/pacmpl/WangKNBS23,User-Customizable Transpilation of Scripting Languages.
https://dblp.org/rec/journals/pacmpl/WangL23,Solving Conditional Linear Recurrences for Program Verification: The Periodic Case.
https://dblp.org/rec/journals/pacmpl/WangLJQR23,Comparative Synthesis: Learning Near-Optimal Network Designs by Query.
https://dblp.org/rec/journals/pacmpl/WangLSWLLM23,Two Birds with One Stone: Boosting Code Generation and Code Search via a Generative Adversarial Network.
https://dblp.org/rec/journals/pacmpl/WangMWW24,PP-CSA: Practical Privacy-Preserving Software Call Stack Analysis.
https://dblp.org/rec/journals/pacmpl/WangPPWD24,From Batch to Stream: Automatic Generation of Online Algorithms.
https://dblp.org/rec/journals/pacmpl/WangR24,Newtonian Program Analysis of Probabilistic Programs.
https://dblp.org/rec/journals/pacmpl/WangWC17,TiML: a functional language for practical complexity analysis with invariants.
https://dblp.org/rec/journals/pacmpl/WangWGW20,Learning semantic program embeddings with graph interval neural network.
https://dblp.org/rec/journals/pacmpl/WangWS19,An abstract stack based approach to verified compositional compilation to machine code.
https://dblp.org/rec/journals/pacmpl/WangWW23,An Explanation Method for Models of Code.
https://dblp.org/rec/journals/pacmpl/WangXWS20,CompCertELF: verified separate compilation of C programs into ELF object files.
https://dblp.org/rec/journals/pacmpl/WangYFLO24,Static Posterior Inference of Bayesian Probabilistic Programming via Polynomial Solving.
https://dblp.org/rec/journals/pacmpl/WangYTSZ22,Complexity-guided container replacement synthesis.
https://dblp.org/rec/journals/pacmpl/WangZDWER19,Demystifying differentiable programming: shift/reset the penultimate backpropagator.
https://dblp.org/rec/journals/pacmpl/WangZS19,Detecting nondeterministic payment bugs in Ethereum smart contracts.
https://dblp.org/rec/journals/pacmpl/WangZSK22,Verified compilation of C programs with a nominal memory model.
https://dblp.org/rec/journals/pacmpl/WanLDHJML23,Run-Time Prevention of Software Integration Failures of Machine Learning APIs.
https://dblp.org/rec/journals/pacmpl/WatanabeGPPS21,Certifying the synthesis of heap-manipulating programs.
https://dblp.org/rec/journals/pacmpl/WattRP19,Weakening WebAssembly.
https://dblp.org/rec/journals/pacmpl/WattRPCS19,CT-wasm: type-driven secure cryptography for the web ecosystem.
https://dblp.org/rec/journals/pacmpl/WattTLM23,WasmRef-Isabelle: A Verified Monadic Interpreter and Industrial Fuzzing Oracle for WebAssembly.
https://dblp.org/rec/journals/pacmpl/WayeCD17,Whip: higher-order contracts for modern services.
https://dblp.org/rec/journals/pacmpl/WebbersGJ24,Refinement Type Refutations.
https://dblp.org/rec/journals/pacmpl/WeiBJBR24,"Polymorphic Reachability Types: Tracking Freshness, Aliasing, and Separation in Higher-Order Generic Programs."
https://dblp.org/rec/journals/pacmpl/WeiBTR20,Compiling symbolic execution with staging and algebraic effects.
https://dblp.org/rec/journals/pacmpl/WeiCR19,Staged abstract interpreters: fast and modular whole-program analysis via meta-programming.
https://dblp.org/rec/journals/pacmpl/WeidnerMM20,Composing and decomposing op-based CRDTs with semidirect products.
https://dblp.org/rec/journals/pacmpl/WeiDR18,Refunctionalization of abstract abstract machines: bridging the gap between abstract abstract machines and abstract definitional interpreters (functional pearl).
https://dblp.org/rec/journals/pacmpl/WeirichCVE19,A role for dependent types in Haskell.
https://dblp.org/rec/journals/pacmpl/WeirichVAE17,A specification for dependent types in Haskell.
https://dblp.org/rec/journals/pacmpl/WeisenburgerKS18,Distributed system development with ScalaLoci.
https://dblp.org/rec/journals/pacmpl/WeitzLHTET17,SpaceSearch: a library for building and verifying solver-aided tools.
https://dblp.org/rec/journals/pacmpl/WeiXZYZ24,Consolidating Smart Contracts with Behavioral Contracts.
https://dblp.org/rec/journals/pacmpl/WestrickAA22,Entanglement detection with near-zero cost.
https://dblp.org/rec/journals/pacmpl/WestrickFRA24,Automatic Parallelism Management.
https://dblp.org/rec/journals/pacmpl/WestrickYFA20,Disentanglement in nested-parallel programs.
https://dblp.org/rec/journals/pacmpl/WilkinsonCD23,Register Tiling for Unstructured Sparsity in Neural Network Inference.
https://dblp.org/rec/journals/pacmpl/WilliamsMW18,The root cause of blame: contracts for intersection and union types.
https://dblp.org/rec/journals/pacmpl/WilliamsR18,A principled approach to ornamentation in ML.
https://dblp.org/rec/journals/pacmpl/WillisWP20,Staged selective parser combinators.
https://dblp.org/rec/journals/pacmpl/WillseyNWFTP21,egg: Fast and extensible equality saturation.
https://dblp.org/rec/journals/pacmpl/WimmerSHJWKPW19,"Initialize once, start fast: application initialization at build time."
https://dblp.org/rec/journals/pacmpl/WimmerSKW24,Scaling Type-Based Points-to Analysis with Saturation.
https://dblp.org/rec/journals/pacmpl/Winograd-CortHR17,A framework for adaptive differential privacy.
https://dblp.org/rec/journals/pacmpl/WinterBGGO23,Randomized Testing of Byzantine Fault Tolerant Algorithms.
https://dblp.org/rec/journals/pacmpl/Winterer024,Validating SMT Solvers for Correctness and Performance via Grammar-Based Enumeration.
https://dblp.org/rec/journals/pacmpl/WintererZS20,On the unusual effectiveness of type-aware operator mutations for testing SMT solvers.
https://dblp.org/rec/journals/pacmpl/Winterhalter24,Dependent Ghosts Have a Reflection for Free.
https://dblp.org/rec/journals/pacmpl/Wirfs-BrockE20,JavaScript: the first 20 years.
https://dblp.org/rec/journals/pacmpl/WiseBWATS20,Gradual verification of recursive heap data structures.
https://dblp.org/rec/journals/pacmpl/WolffBMMS21,Modular specification and verification of closures in Rust.
https://dblp.org/rec/journals/pacmpl/WongBBF24,Making Sense of Multi-threaded Application Performance at Scale with NonSequitur.
https://dblp.org/rec/journals/pacmpl/WongMLK18,Faster variational execution with transparent bytecode transformation.
https://dblp.org/rec/journals/pacmpl/WoodCBG17,Instrumentation bias for dynamic data race detection.
https://dblp.org/rec/journals/pacmpl/WuBSNS22,Scalable verification of GNN-based job schedulers.
https://dblp.org/rec/journals/pacmpl/WuC17,How type errors were fixed and what students did?
https://dblp.org/rec/journals/pacmpl/WuCC17,Learning user friendly type-error messages.
https://dblp.org/rec/journals/pacmpl/WuCHS019,Generating precise error specifications for C: a zero shot learning approach.
https://dblp.org/rec/journals/pacmpl/WuL24,QuAC: Quick Attribute-Centric Type Inference for Python.
https://dblp.org/rec/journals/pacmpl/WuSGCLJ20,Hidden inheritance: an inline caching design for TypeScript performance.
https://dblp.org/rec/journals/pacmpl/XiaIKCCW024,Story of Your Lazy Function's Life: A Bidirectional Demand Semantics for Mechanized Cost Analysis of Lazy Programs.
https://dblp.org/rec/journals/pacmpl/XiangLD20,Precise inference of expressive units of measurement types.
https://dblp.org/rec/journals/pacmpl/XiaZHHMPZ20,Interaction trees: representing recursive and impure programs in Coq.
https://dblp.org/rec/journals/pacmpl/Xie0MP24,Parallel Algebraic Effect Handlers.
https://dblp.org/rec/journals/pacmpl/XieBHSL20,"Effect handlers, evidently."
https://dblp.org/rec/journals/pacmpl/XieCIL22,First-class names for effect handlers.
https://dblp.org/rec/journals/pacmpl/XieEO20,Kind inference for datatypes.
https://dblp.org/rec/journals/pacmpl/XieL21,Generalized evidence passing for effect handlers: efficient compilation of effect handlers to C.
https://dblp.org/rec/journals/pacmpl/XiePLWYW22,Staging with class: a specification for typed template Haskell.
https://dblp.org/rec/journals/pacmpl/XieWNY23,MacoCaml: Staging Composable and Compilable Macros.
https://dblp.org/rec/journals/pacmpl/XuBO24,Degrees of Separation: A Flexible Type System for Safe Concurrency.
https://dblp.org/rec/journals/pacmpl/XuCBZY18,ShareJIT: JIT code cache sharing across processes and its practical implementation.
https://dblp.org/rec/journals/pacmpl/XuCSTACA24,PROMPT: A Fast and Extensible Memory Profiling Framework.
https://dblp.org/rec/journals/pacmpl/XueO24,Contextual Typing.
https://dblp.org/rec/journals/pacmpl/XuHO23,Making a Type Difference: Subtraction on Intersection Types as Generalized Record Operations.
https://dblp.org/rec/journals/pacmpl/XuK21,Copy-and-patch compilation: a fast compilation algorithm for high-level languages and bytecode.
https://dblp.org/rec/journals/pacmpl/XuLSX24,Iterative-Epoch Online Cycle Elimination for Context-Free Language Reachability.
https://dblp.org/rec/journals/pacmpl/XuMPTA23,Synthesizing Quantum-Circuit Optimizers.
https://dblp.org/rec/journals/pacmpl/XuTZZJS23,Pushing the Limit of 1-Minimality of Language-Agnostic Program Reduction.
https://dblp.org/rec/journals/pacmpl/YadavallyLWN24,A Learning-Based Approach to Static Program Slicing.
https://dblp.org/rec/journals/pacmpl/Yaghmazadeh0DD17,SQLizer: query synthesis from natural language.
https://dblp.org/rec/journals/pacmpl/Yallop17,Staged generic programming.
https://dblp.org/rec/journals/pacmpl/YallopGK18,Partially-static data as free extension of algebras.
https://dblp.org/rec/journals/pacmpl/YallopW19,Lambda: the ultimate sublanguage (experience report).
https://dblp.org/rec/journals/pacmpl/YallopXK23,flap: A Deterministic Parser with Fused Lexing.
https://dblp.org/rec/journals/pacmpl/YamaguchiMDW21,Synbit: synthesizing bidirectional programs using unidirectional sketches.
https://dblp.org/rec/journals/pacmpl/YamazakiNIC19,Generating a fluent API with syntax checking from an LR grammar.
https://dblp.org/rec/journals/pacmpl/YamazakiNSUC23,Collecting Cyclic Garbage across Foreign Function Interfaces: Who Takes the Last Piece of Cake?
https://dblp.org/rec/journals/pacmpl/Yang0JH24,Dependency-Aware Code Naturalness.
https://dblp.org/rec/journals/pacmpl/YangAC21,Simplifying dependent reductions in the polyhedral model.
https://dblp.org/rec/journals/pacmpl/YangDLY0J024,WhiteFox: White-Box Compiler Fuzzing Empowered by Large Language Models.
https://dblp.org/rec/journals/pacmpl/YangO17,Unifying typing and subtyping.
https://dblp.org/rec/journals/pacmpl/YangSS24,Fully Verified Instruction Scheduling.
https://dblp.org/rec/journals/pacmpl/YangW21,Reasoning about effect interaction by fusion.
https://dblp.org/rec/journals/pacmpl/YangW23,Modular Models of Monoids with Operations.
https://dblp.org/rec/journals/pacmpl/YanJY22,On incorrectness logic for Quantum programs.
https://dblp.org/rec/journals/pacmpl/YanM21,SecRSL: security separation logic for C11 release-acquire concurrency.
https://dblp.org/rec/journals/pacmpl/YanovskiDJD21,GhostCell: separating permissions from data in Rust.
https://dblp.org/rec/journals/pacmpl/YanZD24,Scaling Abstraction Refinement for Program Analyses in Datalog using Graph Neural Networks.
https://dblp.org/rec/journals/pacmpl/YaoSHZ21,Program analysis via efficient symbolic abstraction.
https://dblp.org/rec/journals/pacmpl/YaoTGN24,Mostly Automated Verification of Liveness Properties for Distributed Protocols with Ranking Functions.
https://dblp.org/rec/journals/pacmpl/YaoZXSWZ24,Falcon: A Fused Approach to Path-Sensitive Sparse Data Dependence Analysis.
https://dblp.org/rec/journals/pacmpl/YeD22,Oblivious algebraic data types.
https://dblp.org/rec/journals/pacmpl/YeD23,Taype: A Policy-Agnostic Language for Oblivious Computation.
https://dblp.org/rec/journals/pacmpl/YeD24,Taypsi: Static Enforcement of Privacy Policies for Policy-Agnostic Oblivious Computation.
https://dblp.org/rec/journals/pacmpl/Yefet0Y20,Adversarial examples for models of code.
https://dblp.org/rec/journals/pacmpl/YeOT24,Merging Gradual Typing.
https://dblp.org/rec/journals/pacmpl/YeSO24,Imperative Compositional Programming: Type Sound Distributive Intersection Subtyping with References via Bidirectional Typing.
https://dblp.org/rec/journals/pacmpl/YeTO23,A Gradual Probabilistic Lambda Calculus.
https://dblp.org/rec/journals/pacmpl/YeZSS23,Concrete Type Inference for Code Optimization using Machine Learning with SMT Solving.
https://dblp.org/rec/journals/pacmpl/YiA23,Hardware-Aware Static Optimization of Hyperdimensional Computations.
https://dblp.org/rec/journals/pacmpl/YiCMJ19,Efficient automated repair of high floating-point errors in numerical libraries.
https://dblp.org/rec/journals/pacmpl/YiYCM024,FPCC: Detecting Floating-Point Errors via Chain Conditions.
https://dblp.org/rec/journals/pacmpl/YiYY24,Compatible Branch Coverage Driven Symbolic Execution for Efficient Bug Finding.
https://dblp.org/rec/journals/pacmpl/YoonLY23,Inductive Program Synthesis via Iterative Forward-Backward Abstract Interpretation.
https://dblp.org/rec/journals/pacmpl/YoonZZ22,Formal reasoning about layered monadic interpreters.
https://dblp.org/rec/journals/pacmpl/YorgeyF18,What's the difference? a functional pearl on subtracting bijections.
https://dblp.org/rec/journals/pacmpl/YoshiokaSI24,Abstracting Effect Systems for Algebraic Effect Handlers.
https://dblp.org/rec/journals/pacmpl/YounSLRBGLPRWR24,Bringing the WebAssembly Standard up to Speed with SpecTec.
https://dblp.org/rec/journals/pacmpl/Yu0W20,Incremental predicate analysis for regression verification.
https://dblp.org/rec/journals/pacmpl/YuanC22,Tower: data structures in Quantum superposition.
https://dblp.org/rec/journals/pacmpl/YuanC24,The T-Complexity Costs of Error Correction for Control Flow in Quantum Computation.
https://dblp.org/rec/journals/pacmpl/YuanGGPMO23,Live Pattern Matching with Typed Holes.
https://dblp.org/rec/journals/pacmpl/YuanMC22,Twist: sound reasoning for purity and entanglement in Quantum programs.
https://dblp.org/rec/journals/pacmpl/YuanMJ17,Abridging source code.
https://dblp.org/rec/journals/pacmpl/YuanRS23,Trace-Guided Inductive Synthesis of Recursive Functional Programs.
https://dblp.org/rec/journals/pacmpl/YuanVC24,Quantum Control Machine: The Limits of Control Flow in Quantum Programming.
https://dblp.org/rec/journals/pacmpl/YuvilerD23,One Pixel Adversarial Attacks via Sketched Programs.
https://dblp.org/rec/journals/pacmpl/ZakhourWS23,Type-Checking CRDT Convergence.
https://dblp.org/rec/journals/pacmpl/ZakhourWS23a,Type-Safe Dynamic Placement with First-Class Placed Values.
https://dblp.org/rec/journals/pacmpl/ZakhourWS24,Automated Verification of Fundamental Algebraic Laws.
https://dblp.org/rec/journals/pacmpl/ZakowskiBYZZZ21,"Modular, compositional, and executable formal semantics for LLVM IR."
https://dblp.org/rec/journals/pacmpl/ZhaiPGLW17,An auditing language for preventing correlated failures in the cloud.
https://dblp.org/rec/journals/pacmpl/ZhangA22,"Reasoning about ""reasoning about reasoning"": semantics and contextual equivalence for probabilistic programs with nested queries and recursion."
https://dblp.org/rec/journals/pacmpl/ZhangAG22,On incorrectness logic and Kleene algebra with top and tests.
https://dblp.org/rec/journals/pacmpl/ZhangBGKABGRRST22,Overwatch: learning patterns in code edit sequences.
https://dblp.org/rec/journals/pacmpl/ZhangCGLPSV24,PyDex: Repairing Bugs in Introductory Python Assignments using LLMs.
https://dblp.org/rec/journals/pacmpl/ZhangGHH23,Bidirectional Object-Oriented Programming: Towards Programmatic and Direct Manipulation of Objects.
https://dblp.org/rec/journals/pacmpl/ZhangGSN17,Effective interactive resolution of static analysis alarms.
https://dblp.org/rec/journals/pacmpl/ZhangHK24,Compilation of Modular and General Sparse Workspaces.
https://dblp.org/rec/journals/pacmpl/ZhangK22,Quantitative strongest post: a calculus for reasoning about the flow of quantitative information.
https://dblp.org/rec/journals/pacmpl/ZhangLWQJTWL024,HardTaint: Production-Run Dynamic Taint Analysis via Selective Hardware Tracing.
https://dblp.org/rec/journals/pacmpl/ZhangM17,"Familia: unifying interfaces, type classes, and family polymorphism."
https://dblp.org/rec/journals/pacmpl/ZhangM19,Abstraction-safe effect handlers via tunneling.
https://dblp.org/rec/journals/pacmpl/ZhangMSD23,Automated Translation of Functional Big Data Queries to SQL.
https://dblp.org/rec/journals/pacmpl/ZhangMT23,Interval Parsing Grammars for File Format Parsing.
https://dblp.org/rec/journals/pacmpl/ZhangPZX21,Static detection of silent misconfigurations with deep interaction analysis.
https://dblp.org/rec/journals/pacmpl/ZhangRHP019,Fuzzi: a three-level logic for differential privacy.
https://dblp.org/rec/journals/pacmpl/ZhangRHP020,Testing differential privacy with dual interpreters.
https://dblp.org/rec/journals/pacmpl/ZhangSK23,Performal: Formal Verification of Latency Properties for Distributed Systems.
https://dblp.org/rec/journals/pacmpl/ZhangSM20,Handling bidirectional control flow.
https://dblp.org/rec/journals/pacmpl/ZhangSZ24,Learning Abstraction Selection for Bayesian Program Analysis.
https://dblp.org/rec/journals/pacmpl/ZhangWFCZRTW23,Better Together: Unifying Datalog and Equality Saturation.
https://dblp.org/rec/journals/pacmpl/ZhangWR24,Finding Cross-Rule Optimization Bugs in Datalog Engines.
https://dblp.org/rec/journals/pacmpl/ZhangWWKS24,Fully Composable and Adequate Verified Compilation with Direct Refinements between Open Modules.
https://dblp.org/rec/journals/pacmpl/ZhangWWT22,Relational e-matching.
https://dblp.org/rec/journals/pacmpl/ZhangXGHZH24,Fusing Direct Manipulations into Functional Programs.
https://dblp.org/rec/journals/pacmpl/ZhangXSD21,UDF to SQL translation through compositional lazy inductive synthesis.
https://dblp.org/rec/journals/pacmpl/ZhangYBKSA18,GraphIt: a high-performance graph DSL.
https://dblp.org/rec/journals/pacmpl/ZhangYTWK019,BDA: practical dependence analysis for binary executables by unbiased whole-program path sampling and per-path abstract interpretation.
https://dblp.org/rec/journals/pacmpl/ZhangZK024,Quantitative Weakest Hyper Pre: Unifying Correctness and Incorrectness Hyperproperties via Predicate Transformers.
https://dblp.org/rec/journals/pacmpl/ZhangZXYWSSJS23,Building Dynamic System Call Sandbox with Partial Order Analysis.
https://dblp.org/rec/journals/pacmpl/ZhaoBSCVL22,SigVM: enabling event-driven execution for truly decentralized smart contracts.
https://dblp.org/rec/journals/pacmpl/ZhaoMDBPO24,Total Type Error Localization and Recovery with Holes.
https://dblp.org/rec/journals/pacmpl/ZhaoOS19,A mechanical formalization of higher-ranked polymorphic type inference.
https://dblp.org/rec/journals/pacmpl/ZhengSLXYLWZ24,ParDiff: Practical Static Differential Analysis of Network Protocol Parsers.
https://dblp.org/rec/journals/pacmpl/ZhouBSLY23,CoqQ: Foundational Verification of Quantum Programs.
https://dblp.org/rec/journals/pacmpl/ZhouCH23,Fat Pointers for Temporal Memory Safety of C.
https://dblp.org/rec/journals/pacmpl/ZhouDDJ21,Data-driven abductive inference of library specifications.
https://dblp.org/rec/journals/pacmpl/ZhouMDJ23,Covering All the Bases: Type-Based Verification of Test Input Generators.
https://dblp.org/rec/journals/pacmpl/ZhouOZ20,Revisiting iso-recursive subtyping.
https://dblp.org/rec/journals/pacmpl/ZhouQGZ0024,PolyJuice: Detecting Mis-compilation Bugs in Tensor Compilers with Equality Saturation Based Rewriting.
https://dblp.org/rec/journals/pacmpl/ZhouQWAC24,VST-A: A Foundationally Sound Annotation Verifier.
https://dblp.org/rec/journals/pacmpl/ZhouR21,Interpretable noninterference measurement and its application to processor designs.
https://dblp.org/rec/journals/pacmpl/ZhouSTYLZWLL23,MemPerf: Profiling Allocator-Induced Performance Slowdowns.
https://dblp.org/rec/journals/pacmpl/ZhouWO24,Full Iso-Recursive Types.
https://dblp.org/rec/journals/pacmpl/ZhouYDJ24,A HAT Trick: Automatically Verifying Representation Invariants using Symbolic Finite Automata.
https://dblp.org/rec/journals/pacmpl/ZhouZGWJLWLG23,Towards Better Semantics Exploration for Browser Fuzzing.
https://dblp.org/rec/journals/pacmpl/ZhouZO23,Recursive Subtyping for All.
https://dblp.org/rec/journals/pacmpl/ZhuH18,Conflict resolution for structured merge via version space algebra.
https://dblp.org/rec/journals/pacmpl/ZhuSLDG22,BFF: foundational and automated verification of bitfield-manipulating programs.
https://dblp.org/rec/journals/pacmpl/ZiadDJKS23,cuCatch: A Debugging Tool for Efficiently Catching Memory Safety Violations in CUDA Applications.
https://dblp.org/rec/journals/pacmpl/ZilbersteinDS23,Outcome Logic: A Unifying Foundation for Correctness and Incorrectness Reasoning.
https://dblp.org/rec/journals/pacmpl/ZilbersteinSS24,Outcome Separation Logic: Local Reasoning for Correctness and Incorrectness with Computational Effects.
https://dblp.org/rec/journals/pacmpl/ZimmermanDA24,Sound Gradual Verification with Symbolic Execution.
https://dblp.org/rec/journals/pacmpl/ZouGSWXS22,Oracle-free repair synthesis for floating-point programs.
https://dblp.org/rec/journals/pacmpl/ZouZXFZS20,Detecting floating-point errors via atomic conditions.
https://dblp.org/rec/journals/pacmpl/ZurielFSCP19,Efficient lock-free durable sets.
https://dblp.org/rec/journals/pacmpl/ZwaanAV22,Incremental type-checking for free: using scope graphs to derive incremental type-checkers.
https://dblp.org/rec/journals/pacmpl/ZyuzinN21,Contextual modal types for algebraic effects and handlers.
